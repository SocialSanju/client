{"ast":null,"code":"import Axios from 'axios';\nimport { PRODUCT_CREATE_FAIL, PRODUCT_CREATE_REQUEST, PRODUCT_CREATE_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, ALL_PRODUCT_LIST_REQUEST, ALL_PRODUCT_LIST_SUCCESS, ALL_PRODUCT_LIST_FAIL, PRODUCT_UPDATE_FAIL, PRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_SUCCESS, PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_FAIL, PRODUCT_CATEGORY_LIST_SUCCESS, PRODUCT_CATEGORY_LIST_REQUEST, PRODUCT_CATEGORY_LIST_FAIL, PRODUCT_REVIEW_CREATE_FAIL, PRODUCT_REVIEW_CREATE_REQUEST, PRODUCT_REVIEW_CREATE_SUCCESS } from '../constants/productConstants';\nexport const listProducts = ({\n  pageNumber = '',\n  seller = '',\n  name = '',\n  category = '',\n  order = '',\n  min = 0,\n  max = 0,\n  rating = 0\n}) => async dispatch => {\n  dispatch({\n    type: PRODUCT_LIST_REQUEST\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/products?pageNumber=${pageNumber}&seller=${seller}&name=${name}&category=${category}&min=${min}&max=${max}&rating=${rating}&order=${order}`);\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\nexport const alllistProducts = () => async dispatch => {\n  dispatch({\n    type: ALL_PRODUCT_LIST_REQUEST\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/products/list`);\n    dispatch({\n      type: ALL_PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ALL_PRODUCT_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\nexport const listProductCategories = () => async dispatch => {\n  dispatch({\n    type: PRODUCT_CATEGORY_LIST_REQUEST\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/products/categories`);\n    dispatch({\n      type: PRODUCT_CATEGORY_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_CATEGORY_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\nexport const detailsProduct = productId => async dispatch => {\n  dispatch({\n    type: PRODUCT_DETAILS_REQUEST,\n    payload: productId\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/products/${productId}`);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const createProduct = () => async (dispatch, getState) => {\n  dispatch({\n    type: PRODUCT_CREATE_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.post('/api/products', {}, {\n      headers: {\n        Authorization: `Sanju ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: PRODUCT_CREATE_SUCCESS,\n      payload: data.product\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: PRODUCT_CREATE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const updateProduct = product => async (dispatch, getState) => {\n  dispatch({\n    type: PRODUCT_UPDATE_REQUEST,\n    payload: product\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.put(`/api/products/${product._id}`, product, {\n      headers: {\n        Authorization: `Sanju ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: PRODUCT_UPDATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: PRODUCT_UPDATE_FAIL,\n      error: message\n    });\n  }\n};\nexport const deleteProduct = productId => async (dispatch, getState) => {\n  dispatch({\n    type: PRODUCT_DELETE_REQUEST,\n    payload: productId\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = Axios.delete(`/api/products/${productId}`, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: PRODUCT_DELETE_SUCCESS\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const createReview = (productId, review) => async (dispatch, getState) => {\n  dispatch({\n    type: PRODUCT_REVIEW_CREATE_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.post(`/api/products/${productId}/reviews`, review, {\n      headers: {\n        Authorization: `Sanju ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: PRODUCT_REVIEW_CREATE_SUCCESS,\n      payload: data.review\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: PRODUCT_REVIEW_CREATE_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/DELL/Desktop/amazon/frontend/src/actions/productActions.js"],"names":["Axios","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","ALL_PRODUCT_LIST_REQUEST","ALL_PRODUCT_LIST_SUCCESS","ALL_PRODUCT_LIST_FAIL","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_FAIL","PRODUCT_CATEGORY_LIST_SUCCESS","PRODUCT_CATEGORY_LIST_REQUEST","PRODUCT_CATEGORY_LIST_FAIL","PRODUCT_REVIEW_CREATE_FAIL","PRODUCT_REVIEW_CREATE_REQUEST","PRODUCT_REVIEW_CREATE_SUCCESS","listProducts","pageNumber","seller","name","category","order","min","max","rating","dispatch","type","data","get","payload","error","message","alllistProducts","listProductCategories","detailsProduct","productId","response","createProduct","getState","userSignin","userInfo","post","headers","Authorization","token","product","updateProduct","put","_id","deleteProduct","delete","createReview","review"],"mappings":"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","sourcesContent":["import Axios from 'axios';\r\nimport { PRODUCT_CREATE_FAIL, PRODUCT_CREATE_REQUEST, PRODUCT_CREATE_SUCCESS, \r\n  PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, \r\n  PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, \r\n  ALL_PRODUCT_LIST_REQUEST,ALL_PRODUCT_LIST_SUCCESS,ALL_PRODUCT_LIST_FAIL,\r\n  PRODUCT_UPDATE_FAIL, PRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_FAIL, PRODUCT_CATEGORY_LIST_SUCCESS, PRODUCT_CATEGORY_LIST_REQUEST, PRODUCT_CATEGORY_LIST_FAIL,\r\n  PRODUCT_REVIEW_CREATE_FAIL,PRODUCT_REVIEW_CREATE_REQUEST,PRODUCT_REVIEW_CREATE_SUCCESS } from '../constants/productConstants'\r\n\r\n  export const listProducts = ({\r\n    pageNumber = '',\r\n    seller = '',\r\n    name = '',\r\n    category = '',\r\n    order = '',\r\n    min = 0,\r\n    max = 0,\r\n    rating = 0,\r\n  }) => async (dispatch) => {\r\n    dispatch({\r\n      type: PRODUCT_LIST_REQUEST,\r\n    });\r\n    try {\r\n      const { data } = await Axios.get(\r\n        `/api/products?pageNumber=${pageNumber}&seller=${seller}&name=${name}&category=${category}&min=${min}&max=${max}&rating=${rating}&order=${order}`\r\n      );\r\n      dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      dispatch({ type: PRODUCT_LIST_FAIL, payload: error.message });\r\n    }\r\n  };\r\n\r\n  export const alllistProducts = () => async (dispatch) =>{\r\n    dispatch({\r\n        type: ALL_PRODUCT_LIST_REQUEST\r\n    });\r\n    try {\r\n        const { data } = await Axios.get(`/api/products/list`);\r\n        dispatch({ type: ALL_PRODUCT_LIST_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({ type:ALL_PRODUCT_LIST_FAIL, payload: error.message });\r\n    }\r\n  };\r\n  \r\nexport const listProductCategories = () => async (dispatch) =>{\r\n  dispatch({\r\n      type: PRODUCT_CATEGORY_LIST_REQUEST\r\n  });\r\n  try {\r\n      const { data } = await Axios.get(`/api/products/categories`);\r\n      dispatch({ type: PRODUCT_CATEGORY_LIST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n      dispatch({ type:PRODUCT_CATEGORY_LIST_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\n\r\nexport const detailsProduct = (productId) => async (dispatch) =>{\r\n    dispatch({\r\n        type: PRODUCT_DETAILS_REQUEST, payload: productId });\r\n    try {\r\n        const { data } = await Axios.get(`/api/products/${productId}`);\r\n        dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({ \r\n            type: PRODUCT_DETAILS_FAIL, \r\n            payload: \r\n            error.response && error.response.data.message \r\n            ? error.response.data.message \r\n            : error.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n  dispatch({ type: PRODUCT_CREATE_REQUEST });\r\n  const {\r\n    userSignin: { userInfo },\r\n  } = getState();\r\n  try {\r\n    const { data } = await Axios.post(\r\n      '/api/products',\r\n      {},\r\n      {\r\n        headers: { Authorization: `Sanju ${userInfo.token}` },\r\n      }\r\n    );\r\n    dispatch({\r\n      type: PRODUCT_CREATE_SUCCESS,\r\n      payload: data.product,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: PRODUCT_CREATE_FAIL, payload: message });\r\n  }\r\n};\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n  dispatch({ type: PRODUCT_UPDATE_REQUEST, payload: product });\r\n  const {\r\n    userSignin: { userInfo },\r\n  } = getState();\r\n  try {\r\n    const { data } = await Axios.put(`/api/products/${product._id}`, product, {\r\n      headers: { Authorization: `Sanju ${userInfo.token}` },\r\n    });\r\n    dispatch({ type: PRODUCT_UPDATE_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: PRODUCT_UPDATE_FAIL, error: message });\r\n  }\r\n};\r\nexport const deleteProduct = (productId) => async (dispatch, getState) => {\r\n  dispatch({ type: PRODUCT_DELETE_REQUEST, payload: productId });\r\n  const {\r\n    userSignin: { userInfo },\r\n  } = getState();\r\n  try {\r\n    const { data } = Axios.delete(`/api/products/${productId}`, {\r\n      headers: { Authorization: `Bearer ${userInfo.token}` },\r\n    });\r\n    dispatch({ type: PRODUCT_DELETE_SUCCESS });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: PRODUCT_DELETE_FAIL, payload: message });\r\n  }\r\n};\r\n\r\nexport const createReview = (productId, review) => async (dispatch, getState) => {\r\n  dispatch({ type: PRODUCT_REVIEW_CREATE_REQUEST });\r\n  const {\r\n    userSignin: { userInfo },\r\n  } = getState();\r\n  try {\r\n    const { data } = await Axios.post(\r\n      `/api/products/${productId}/reviews`,\r\n      review,\r\n      {\r\n        headers: { Authorization: `Sanju ${userInfo.token}` },\r\n      }\r\n    );\r\n    dispatch({\r\n      type: PRODUCT_REVIEW_CREATE_SUCCESS,\r\n      payload: data.review,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: PRODUCT_REVIEW_CREATE_FAIL, payload: message });\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}