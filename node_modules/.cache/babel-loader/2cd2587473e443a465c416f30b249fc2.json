{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\amazon\\\\frontend\\\\src\\\\components\\\\ChatBox.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport SocketIOClient from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ENDPOINT = window.location.host.indexOf('localhost') >= 0 ? 'http://127.0.0.1:1000' : window.location.host;\nexport default function ChatBox(props) {\n  _s();\n\n  const {\n    userInfo\n  } = props;\n  const [socket, setSocket] = useState(null);\n  const uiMessagesRef = useRef(null);\n  const [isOpen, setIsOpen] = useState(false);\n  const [messageBody, setMessageBody] = useState('');\n  const [messages, setMessages] = useState([{\n    name: 'Admin',\n    body: 'Hello there, Please ask your question.'\n  }]);\n  useEffect(() => {\n    if (uiMessagesRef.current) {\n      uiMessagesRef.current.scrollBy({\n        top: uiMessagesRef.current.clientHeight,\n        left: 0,\n        behavior: 'smooth'\n      });\n    }\n\n    if (socket) {\n      socket.emit('onLogin', {\n        _id: userInfo._id,\n        name: userInfo.name,\n        isAdmin: userInfo.isAdmin\n      });\n      socket.on('message', data => {\n        setMessages([...messages, {\n          body: data.body,\n          name: data.name\n        }]);\n      });\n    }\n  }, [messages, isOpen, socket]);\n\n  const supportHandler = () => {\n    setIsOpen(true);\n    const sk = SocketIOClient(ENDPOINT);\n    setSocket(sk);\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (!messageBody.trim()) {\n      alert('Error. Please type message.');\n    } else {\n      setMessages([...messages, {\n        body: messageBody,\n        name: userInfo.name\n      }]);\n      setMessageBody('');\n      setTimeout(() => {\n        socket.emit('onMessage', {\n          body: messageBody,\n          name: userInfo.name,\n          isAdmin: userInfo.isAdmin,\n          _id: userInfo._id\n        });\n      }, 1000);\n    }\n  };\n\n  const closeHandler = () => {\n    setIsOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbox\",\n    children: !isOpen ? /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: supportHandler,\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa fa-support\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Support\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: closeHandler,\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        ref: uiMessagesRef,\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: `${msg.name}:`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 33\n          }, this), msg.body]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: submitHandler,\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            value: messageBody,\n            onChange: e => setMessageBody(e.target.value),\n            type: \"text\",\n            placeholder: \"type message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChatBox, \"v6jRgxAMU0LE/G6vr3IDyPNPdC4=\");\n\n_c = ChatBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatBox\");","map":{"version":3,"sources":["C:/Users/DELL/Desktop/amazon/frontend/src/components/ChatBox.js"],"names":["React","useEffect","useRef","useState","SocketIOClient","ENDPOINT","window","location","host","indexOf","ChatBox","props","userInfo","socket","setSocket","uiMessagesRef","isOpen","setIsOpen","messageBody","setMessageBody","messages","setMessages","name","body","current","scrollBy","top","clientHeight","left","behavior","emit","_id","isAdmin","on","data","supportHandler","sk","submitHandler","e","preventDefault","trim","alert","setTimeout","closeHandler","map","msg","index","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport SocketIOClient from 'socket.io-client';\r\n\r\nconst ENDPOINT = \r\n    window.location.host.indexOf('localhost') >= 0\r\n    ? 'http://127.0.0.1:1000'\r\n    : window.location.host; \r\n\r\nexport default function ChatBox(props) {\r\n    const { userInfo } = props;\r\n    const [socket, setSocket] = useState(null);\r\n    const uiMessagesRef = useRef(null);\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [messageBody, setMessageBody] = useState('');\r\n    const [messages, setMessages] = useState([\r\n        { name: 'Admin', body: 'Hello there, Please ask your question.'},\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        if(uiMessagesRef.current) {\r\n            uiMessagesRef.current.scrollBy({\r\n                top: uiMessagesRef.current.clientHeight,\r\n                left: 0,\r\n                behavior: 'smooth',\r\n            });\r\n        }\r\n        if(socket) {\r\n            socket.emit('onLogin', {\r\n                _id: userInfo._id,\r\n                name: userInfo.name,\r\n                isAdmin: userInfo.isAdmin,\r\n            });\r\n            socket.on('message', (data) => {\r\n                setMessages([ ...messages, { body: data.body, name: data.name }]);\r\n            });\r\n        }\r\n    }, [messages, isOpen, socket]);\r\n\r\n    const supportHandler = () => {\r\n        setIsOpen(true);\r\n        const sk = SocketIOClient(ENDPOINT);\r\n        setSocket(sk);\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        if(!messageBody.trim()) {\r\n            alert('Error. Please type message.');\r\n        } else {\r\n            setMessages([...messages, { body: messageBody, name: userInfo.name}]);\r\n            setMessageBody('');\r\n            setTimeout(() => {\r\n                socket.emit('onMessage', {\r\n                    body: messageBody,\r\n                    name: userInfo.name,\r\n                    isAdmin: userInfo.isAdmin,\r\n                    _id: userInfo._id,\r\n                });\r\n            }, 1000);\r\n        }\r\n    };\r\n    const closeHandler = () => {\r\n        setIsOpen(false);\r\n    }\r\n    return (\r\n        <div className=\"chatbox\">\r\n            {!isOpen ? (\r\n                <button type=\"button\" onClick={supportHandler}>\r\n                    <i className=\"fa fa-support\" />\r\n                </button>\r\n            ) : (\r\n                <div className=\"card card-body\">\r\n                    <div className=\"row\">\r\n                        <strong>Support</strong>\r\n                        <button type=\"button\" onClick={closeHandler}>\r\n                            <i className=\"fa fa-close\" />\r\n                        </button>\r\n                    </div>\r\n                    <ul ref={uiMessagesRef}>\r\n                        {messages.map((msg, index) => (\r\n                            <li key={index}>\r\n                                <strong>{`${msg.name}:`}</strong>{msg.body}\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                    <div>\r\n                        <form onSubmit={submitHandler} className=\"row\">\r\n                            <input value={messageBody} onChange={(e) => setMessageBody(e.target.value)} type=\"text\" placeholder=\"type message\" />\r\n                            <button type=\"submit\">Send</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}