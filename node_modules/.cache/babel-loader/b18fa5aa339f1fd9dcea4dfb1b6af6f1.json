{"ast":null,"code":"import Axios from 'axios';\nimport { ADD_SERVICE_FAIL, ADD_SERVICE_REQUEST, ADD_SERVICE_SUCCESS, SERVICE_LIST_FAIL, SERVICE_LIST_REQUEST, SERVICE_LIST_SUCCESS } from \"../constants/serviceConstants\";\nexport const servicelist = _ref => {\n  let {} = _ref;\n  return async dispatch => {\n    dispatch({\n      type: SERVICE_LIST_REQUEST\n    });\n\n    try {\n      const {\n        data\n      } = await Axios.get(`/api/services/`);\n      dispatch({\n        type: SERVICE_LIST_SUCCESS,\n        payload: data\n      });\n    } catch (error) {\n      dispatch({\n        type: SERVICE_LIST_FAIL,\n        payload: error.message\n      });\n    }\n  };\n};\nexport const addService = (Title, Sort_Order, Status) => async dispatch => {\n  dispatch({\n    type: ADD_SERVICE_REQUEST,\n    payload: {\n      Title,\n      Sort_order,\n      Status\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post('/api/services/add', {\n      Title,\n      Sort_Order,\n      Status\n    });\n    dispatch({\n      type: ADD_SERVICE_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('serviceAdd', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: ADD_SERVICE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"names":["Axios","ADD_SERVICE_FAIL","ADD_SERVICE_REQUEST","ADD_SERVICE_SUCCESS","SERVICE_LIST_FAIL","SERVICE_LIST_REQUEST","SERVICE_LIST_SUCCESS","servicelist","dispatch","type","data","get","payload","error","message","addService","Title","Sort_Order","Status","Sort_order","post","localStorage","setItem","JSON","stringify","response"],"sources":["C:/Users/Sehat Box/Documents/GitHub/client/src/actions/serviceActions.js"],"sourcesContent":["import Axios from 'axios';\r\nimport {\r\n  ADD_SERVICE_FAIL, ADD_SERVICE_REQUEST, ADD_SERVICE_SUCCESS,\r\n  SERVICE_LIST_FAIL, SERVICE_LIST_REQUEST, SERVICE_LIST_SUCCESS\r\n } from \"../constants/serviceConstants\";\r\n\r\n export const servicelist = ({}) => async (dispatch) => {\r\n  dispatch({ type: SERVICE_LIST_REQUEST });\r\n  try {\r\n    const { data } = await Axios.get(\r\n      `/api/services/`\r\n    );\r\n    dispatch({ type: SERVICE_LIST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: SERVICE_LIST_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\nexport const addService = (Title, Sort_Order, Status) => async (dispatch) => {\r\n  dispatch({ type: ADD_SERVICE_REQUEST, payload: { Title, Sort_order, Status } });\r\n  try {\r\n    const { data } = await Axios.post('/api/services/add', { Title, Sort_Order, Status });\r\n    dispatch({ type: ADD_SERVICE_SUCCESS, payload: data });\r\n    localStorage.setItem('serviceAdd', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ADD_SERVICE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,gBADF,EACoBC,mBADpB,EACyCC,mBADzC,EAEEC,iBAFF,EAEqBC,oBAFrB,EAE2CC,oBAF3C,QAGQ,+BAHR;AAKC,OAAO,MAAMC,WAAW,GAAG;EAAA,IAAC,EAAD;EAAA,OAAQ,MAAOC,QAAP,IAAoB;IACtDA,QAAQ,CAAC;MAAEC,IAAI,EAAEJ;IAAR,CAAD,CAAR;;IACA,IAAI;MACF,MAAM;QAAEK;MAAF,IAAW,MAAMV,KAAK,CAACW,GAAN,CACpB,gBADoB,CAAvB;MAGAH,QAAQ,CAAC;QAAEC,IAAI,EAAEH,oBAAR;QAA8BM,OAAO,EAAEF;MAAvC,CAAD,CAAR;IACD,CALD,CAKE,OAAOG,KAAP,EAAc;MACdL,QAAQ,CAAC;QAAEC,IAAI,EAAEL,iBAAR;QAA2BQ,OAAO,EAAEC,KAAK,CAACC;MAA1C,CAAD,CAAR;IACD;EACF,CAV2B;AAAA,CAApB;AAYR,OAAO,MAAMC,UAAU,GAAG,CAACC,KAAD,EAAQC,UAAR,EAAoBC,MAApB,KAA+B,MAAOV,QAAP,IAAoB;EAC3EA,QAAQ,CAAC;IAAEC,IAAI,EAAEP,mBAAR;IAA6BU,OAAO,EAAE;MAAEI,KAAF;MAASG,UAAT;MAAqBD;IAArB;EAAtC,CAAD,CAAR;;EACA,IAAI;IACF,MAAM;MAAER;IAAF,IAAW,MAAMV,KAAK,CAACoB,IAAN,CAAW,mBAAX,EAAgC;MAAEJ,KAAF;MAASC,UAAT;MAAqBC;IAArB,CAAhC,CAAvB;IACAV,QAAQ,CAAC;MAAEC,IAAI,EAAEN,mBAAR;MAA6BS,OAAO,EAAEF;IAAtC,CAAD,CAAR;IACAW,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmCC,IAAI,CAACC,SAAL,CAAed,IAAf,CAAnC;EACD,CAJD,CAIE,OAAOG,KAAP,EAAc;IACdL,QAAQ,CAAC;MACPC,IAAI,EAAER,gBADC;MAEPW,OAAO,EACLC,KAAK,CAACY,QAAN,IAAkBZ,KAAK,CAACY,QAAN,CAAef,IAAf,CAAoBI,OAAtC,GACID,KAAK,CAACY,QAAN,CAAef,IAAf,CAAoBI,OADxB,GAEID,KAAK,CAACC;IALL,CAAD,CAAR;EAOD;AACF,CAfM"},"metadata":{},"sourceType":"module"}