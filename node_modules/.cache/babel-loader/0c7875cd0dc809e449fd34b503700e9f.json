{"ast":null,"code":"import Axios from 'axios';\nimport { ACCOUNT_GROUP_REQUEST, ACCOUNT_GROUP_SUCCESS, ACCOUNT_GROUP_FAIL, ADD_ACCOUNT_FAIL, ADD_ACCOUNT_REQUEST, ADD_ACCOUNT_SUCCESS } from \"../constants/account_groupConstants\";\nexport const group_details = (Name, Sub_Group) => async dispatch => {\n  dispatch({\n    type: ACCOUNT_GROUP_REQUEST,\n    payload: {\n      Name,\n      Sub_Group\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post('/api/account_group/add', {\n      Name,\n      Sub_Group\n    });\n    dispatch({\n      type: ACCOUNT_GROUP_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('account_groupInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: ACCOUNT_GROUP_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const addAccount = (Name, Mobile_No, Account_Group) => async dispatch => {\n  dispatch({\n    type: ADD_ACCOUNT_REQUEST,\n    payload: {\n      Name,\n      Mobile_No,\n      Account_Group\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post('/api/account/', {\n      Name,\n      Mobile_No,\n      Account_Group\n    });\n    dispatch({\n      type: ADD_ACCOUNT_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('accountAdd', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: ADD_ACCOUNT_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/Sehat Box/Desktop/demo/frontend/src/actions/account_groupActions.js"],"names":["Axios","ACCOUNT_GROUP_REQUEST","ACCOUNT_GROUP_SUCCESS","ACCOUNT_GROUP_FAIL","ADD_ACCOUNT_FAIL","ADD_ACCOUNT_REQUEST","ADD_ACCOUNT_SUCCESS","group_details","Name","Sub_Group","dispatch","type","payload","data","post","localStorage","setItem","JSON","stringify","error","response","message","addAccount","Mobile_No","Account_Group"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,qBADF,EACyBC,qBADzB,EACgDC,kBADhD,EAEEC,gBAFF,EAEoBC,mBAFpB,EAEyCC,mBAFzC,QAGQ,qCAHR;AAKA,OAAO,MAAMC,aAAa,GAAG,CAACC,IAAD,EAAOC,SAAP,KAAqB,MAAOC,QAAP,IAAoB;AACpEA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEV,qBAAR;AAA+BW,IAAAA,OAAO,EAAE;AAAEJ,MAAAA,IAAF;AAAQC,MAAAA;AAAR;AAAxC,GAAD,CAAR;;AACA,MAAI;AACF,UAAM;AAAEI,MAAAA;AAAF,QAAW,MAAMb,KAAK,CAACc,IAAN,CAAW,wBAAX,EAAqC;AAAEN,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAArC,CAAvB;AACAC,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAET,qBAAR;AAA+BU,MAAAA,OAAO,EAAEC;AAAxC,KAAD,CAAR;AACAE,IAAAA,YAAY,CAACC,OAAb,CAAqB,mBAArB,EAA0CC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAA1C;AACD,GAJD,CAIE,OAAOM,KAAP,EAAc;AACdT,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAER,kBADC;AAEPS,MAAAA,OAAO,EACLO,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeP,IAAf,CAAoBQ,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeP,IAAf,CAAoBQ,OADxB,GAEIF,KAAK,CAACE;AALL,KAAD,CAAR;AAOD;AACF,CAfM;AAiBP,OAAO,MAAMC,UAAU,GAAG,CAACd,IAAD,EAAOe,SAAP,EAAkBC,aAAlB,KAAoC,MAAOd,QAAP,IAAoB;AAChFA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEN,mBAAR;AAA6BO,IAAAA,OAAO,EAAE;AAAEJ,MAAAA,IAAF;AAAQe,MAAAA,SAAR;AAAmBC,MAAAA;AAAnB;AAAtC,GAAD,CAAR;;AACA,MAAI;AACF,UAAM;AAAEX,MAAAA;AAAF,QAAW,MAAMb,KAAK,CAACc,IAAN,CAAW,eAAX,EAA4B;AAAEN,MAAAA,IAAF;AAAQe,MAAAA,SAAR;AAAmBC,MAAAA;AAAnB,KAA5B,CAAvB;AACAd,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEL,mBAAR;AAA6BM,MAAAA,OAAO,EAAEC;AAAtC,KAAD,CAAR;AACAE,IAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmCC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAAnC;AACD,GAJD,CAIE,OAAOM,KAAP,EAAc;AACdT,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEP,gBADC;AAEPQ,MAAAA,OAAO,EACLO,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeP,IAAf,CAAoBQ,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeP,IAAf,CAAoBQ,OADxB,GAEIF,KAAK,CAACE;AALL,KAAD,CAAR;AAOD;AACF,CAfM","sourcesContent":["import Axios from 'axios';\r\nimport {\r\n  ACCOUNT_GROUP_REQUEST, ACCOUNT_GROUP_SUCCESS, ACCOUNT_GROUP_FAIL,\r\n  ADD_ACCOUNT_FAIL, ADD_ACCOUNT_REQUEST, ADD_ACCOUNT_SUCCESS\r\n } from \"../constants/account_groupConstants\";\r\n\r\nexport const group_details = (Name, Sub_Group) => async (dispatch) => {\r\n  dispatch({ type: ACCOUNT_GROUP_REQUEST, payload: { Name, Sub_Group } });\r\n  try {\r\n    const { data } = await Axios.post('/api/account_group/add', { Name, Sub_Group });\r\n    dispatch({ type: ACCOUNT_GROUP_SUCCESS, payload: data });\r\n    localStorage.setItem('account_groupInfo', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ACCOUNT_GROUP_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const addAccount = (Name, Mobile_No, Account_Group) => async (dispatch) => {\r\n  dispatch({ type: ADD_ACCOUNT_REQUEST, payload: { Name, Mobile_No, Account_Group } });\r\n  try {\r\n    const { data } = await Axios.post('/api/account/', { Name, Mobile_No, Account_Group });\r\n    dispatch({ type: ADD_ACCOUNT_SUCCESS, payload: data });\r\n    localStorage.setItem('accountAdd', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ADD_ACCOUNT_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}