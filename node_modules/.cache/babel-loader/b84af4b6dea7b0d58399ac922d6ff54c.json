{"ast":null,"code":"import Axios from 'axios';\nimport { CART_EMPTY } from '../constants/cartConstants';\nimport { ORDER_CREATE_REQUEST, ORDER_CREATE_FAIL, ORDER_CREATE_SUCCESS, ORDER_CREATE_RESET, ORDER_DETAILS_REQUEST, ORDER_DETAILS_FAIL, ORDER_DETAILS_SUCCESS } from '../constants/orderContants';\nexport const createOrder = order => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_CREATE_REQUEST,\n    payload: order\n  });\n\n  try {\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await Axios.post('/api/orders', order, {\n      headers: {\n        Authorization: `Neelam ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data.order\n    });\n    dispatch({\n      type: CART_EMPTY\n    });\n    localStorage.removeItem('cartItems');\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const detailsOrder = orderId => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_DETAILS_REQUEST,\n    payload: orderId\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/orders/${orderId}`, {\n      headers: {\n        Authorization: `Neelam ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: message\n    });\n  }\n};\nexport const payOrder = (order, paymentResult) => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_PAY_REQUEST,\n    payload: {\n      order,\n      paymentResult\n    }\n  });\n};","map":{"version":3,"sources":["C:/Users/DELL/Desktop/amazon/frontend/src/actions/orderActions.js"],"names":["Axios","CART_EMPTY","ORDER_CREATE_REQUEST","ORDER_CREATE_FAIL","ORDER_CREATE_SUCCESS","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_FAIL","ORDER_DETAILS_SUCCESS","createOrder","order","dispatch","getState","type","payload","userSignin","userInfo","data","post","headers","Authorization","token","localStorage","removeItem","error","response","message","detailsOrder","orderId","get","payOrder","paymentResult","ORDER_PAY_REQUEST"],"mappings":"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","sourcesContent":["import Axios from 'axios';\r\nimport { CART_EMPTY } from '../constants/cartConstants';\r\nimport { ORDER_CREATE_REQUEST, ORDER_CREATE_FAIL, ORDER_CREATE_SUCCESS, ORDER_CREATE_RESET, ORDER_DETAILS_REQUEST, ORDER_DETAILS_FAIL, ORDER_DETAILS_SUCCESS } from '../constants/orderContants';\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    dispatch({ type: ORDER_CREATE_REQUEST, payload: order });\r\n    try {\r\n        const {userSignin: { userInfo }} = getState();\r\n        const {data} = await Axios.post('/api/orders', order, {\r\n            headers: {\r\n                Authorization: `Neelam ${userInfo.token}`,\r\n            },\r\n        });\r\n        dispatch({ type: ORDER_CREATE_SUCCESS, payload: data.order});\r\n        dispatch({ type: CART_EMPTY });\r\n        localStorage.removeItem('cartItems');\r\n    } catch (error) {\r\n        dispatch({ type: ORDER_CREATE_FAIL, payload: error.response && error.response.data.message?\r\n            error.response.data.message\r\n        : error.message,\r\n    });\r\n    }\r\n};\r\n\r\nexport const detailsOrder = (orderId) => async (dispatch, getState) => {\r\n    dispatch ({ type: ORDER_DETAILS_REQUEST, payload: orderId });\r\n    const { \r\n        userSignin: { userInfo },\r\n     } = getState();\r\n    try {\r\n        const { data } = await Axios.get(`/api/orders/${orderId}`, {\r\n            headers: { Authorization: `Neelam ${userInfo.token}` },\r\n        });\r\n        dispatch ({ type: ORDER_DETAILS_SUCCESS, payload: data });\r\n    }\r\n    catch (error) {\r\n        const message = \r\n            error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message;\r\n        dispatch({ type: ORDER_DETAILS_FAIL, payload: message });\r\n    }\r\n};\r\n\r\nexport const payOrder = (order, paymentResult) => async (dispatch, getState) => {\r\n    dispatch({ type: ORDER_PAY_REQUEST, payload: { order, paymentResult } });\r\n}"]},"metadata":{},"sourceType":"module"}