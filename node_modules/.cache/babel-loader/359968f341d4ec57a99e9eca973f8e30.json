{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sehat Box\\\\Documents\\\\GitHub\\\\client\\\\src\\\\screens\\\\AccountScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addAccount } from '../actions/accountActions';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AccountScreen(props) {\n  _s();\n\n  const [Name, setName] = useState('');\n  const [Mobile_No, setMobile_No] = useState('');\n  const [Ac_Group, setAc_Group] = useState('');\n  useEffect(async () => {\n    await axios.get('http://localhost:6000/api/accountGroup/all').then(res => {\n      setAc_Group(res.data);\n    });\n  }, []);\n  const redirect = props.location.search ? props.location.search.split('=')[1] : '/';\n  const addAct = useSelector(state => state.addAct);\n  const {\n    accountAdd,\n    loading,\n    error\n  } = addAct;\n  const dispatch = useDispatch();\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(addAccount(Name, Mobile_No));\n  };\n\n  useEffect(() => {\n    if (accountAdd) {\n      props.history.push(redirect);\n    }\n  }, [props.history, redirect, accountAdd]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Add Account \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this), loading && /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 19\n      }, this), error && /*#__PURE__*/_jsxDEV(MessageBox, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"Name\",\n          placeholder: \"Enter name\",\n          required: true,\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"mobileno\",\n          children: \"Mobile No\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"Mobile_No\",\n          placeholder: \"Enter mobile no\",\n          required: true,\n          onChange: e => setMobile_No(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"ac_group\",\n          children: \"Account Group\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"Ac_Group\",\n          onChange: handleChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"---Select---\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 33\n          }, this), Ac_Group && Ac_Group.map(obj => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: obj._id,\n              children: obj.Name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 48\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"primary\",\n          type: \"submit\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AccountScreen, \"QESR/zQwYcsoVqxHkrgjfFEBNeE=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = AccountScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountScreen\");","map":{"version":3,"sources":["C:/Users/Sehat Box/Documents/GitHub/client/src/screens/AccountScreen.js"],"names":["React","useEffect","useState","useDispatch","useSelector","addAccount","LoadingBox","MessageBox","AccountScreen","props","Name","setName","Mobile_No","setMobile_No","Ac_Group","setAc_Group","axios","get","then","res","data","redirect","location","search","split","addAct","state","accountAdd","loading","error","dispatch","submitHandler","e","preventDefault","history","push","target","value","handleChange","map","obj","_id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addAccount } from '../actions/accountActions';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\n\r\nexport default function AccountScreen(props) {\r\n  const [Name, setName] = useState('');\r\n  const [Mobile_No, setMobile_No] = useState('');\r\n  const [Ac_Group, setAc_Group] = useState('');\r\n\r\n  useEffect(async () => {\r\n    await axios.get( 'http://localhost:6000/api/accountGroup/all').then((res) => {\r\n        setAc_Group(res.data);\r\n    })\r\n}, [])\r\n\r\n\r\n  const redirect = props.location.search\r\n    ? props.location.search.split('=')[1]\r\n    : '/';\r\n\r\n  const addAct = useSelector((state) => state.addAct);\r\n  const { accountAdd, loading, error } = addAct;\r\n\r\n  const dispatch = useDispatch();\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(addAccount(Name, Mobile_No));\r\n  };\r\n  useEffect(() => {\r\n    if (accountAdd) {\r\n      props.history.push(redirect);\r\n    }\r\n  }, [props.history, redirect, accountAdd]);\r\n  \r\n  return (\r\n    <div>\r\n    <form className=\"form\" onSubmit={submitHandler}>\r\n      <div>\r\n        <h1>Add Account </h1>\r\n      </div>\r\n      {loading && <LoadingBox></LoadingBox>}\r\n      {error && <MessageBox variant=\"danger\">{error}</MessageBox>}\r\n      <div>\r\n        <label htmlFor=\"name\">Name</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"Name\"\r\n          placeholder=\"Enter name\"\r\n          required\r\n          onChange={(e) => setName(e.target.value)}\r\n        ></input>\r\n      </div>\r\n\r\n      <div>\r\n        <label htmlFor=\"mobileno\">Mobile No</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"Mobile_No\"\r\n          placeholder=\"Enter mobile no\"\r\n          required\r\n          onChange={(e) => setMobile_No(e.target.value)}\r\n        ></input>\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"ac_group\">Account Group</label>\r\n        <select name=\"Ac_Group\" onChange={handleChange}>\r\n                                <option>---Select---</option>\r\n                                    {Ac_Group && Ac_Group.map((obj) => {\r\n                                        return <option value={obj._id}>{obj.Name}</option>\r\n                                    })\r\n                                    }\r\n        </select>\r\n      </div>\r\n      <div>\r\n        <label />\r\n        <button className=\"primary\" type=\"submit\">\r\n          Save\r\n        </button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}