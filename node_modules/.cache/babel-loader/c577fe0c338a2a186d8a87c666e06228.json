{"ast":null,"code":"import Axios from 'axios';\nimport { DISTRICT_LIST_REQUEST, DISTRICT_LIST_SUCCESS, DISTRICT_LIST_FAIL, ADD_DISTRICT_FAIL, ADD_DISTRICT_REQUEST, ADD_DISTRICT_SUCCESS, DISTRICT_DETAILS_FAIL, DISTRICT_DETAILS_REQUEST, DISTRICT_DETAILS_SUCCESS } from \"../constants/districtConstants\";\nexport const districtlist = _ref => {\n  let {} = _ref;\n  return async dispatch => {\n    dispatch({\n      type: DISTRICT_LIST_REQUEST\n    });\n\n    try {\n      const {\n        data\n      } = await Axios.get(`/api/district/all`);\n      dispatch({\n        type: DISTRICT_LIST_SUCCESS,\n        payload: data\n      });\n    } catch (error) {\n      dispatch({\n        type: DISTRICT_LIST_FAIL,\n        payload: error.message\n      });\n    }\n  };\n};\nexport const addDistrict = (Name, SID) => async dispatch => {\n  dispatch({\n    type: ADD_DISTRICT_REQUEST,\n    payload: {\n      Name,\n      SID\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post('/api/district/add', {\n      Name,\n      SID\n    });\n    dispatch({\n      type: ADD_DISTRICT_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('districtAdd', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: ADD_DISTRICT_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const detailsDistrict = districtId => async dispatch => {\n  dispatch({\n    type: DISTRICT_DETAILS_REQUEST,\n    payload: districtId\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/district/${districtId}`);\n    dispatch({\n      type: DISTRICT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: DISTRICT_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"names":["Axios","DISTRICT_LIST_REQUEST","DISTRICT_LIST_SUCCESS","DISTRICT_LIST_FAIL","ADD_DISTRICT_FAIL","ADD_DISTRICT_REQUEST","ADD_DISTRICT_SUCCESS","DISTRICT_DETAILS_FAIL","DISTRICT_DETAILS_REQUEST","DISTRICT_DETAILS_SUCCESS","districtlist","dispatch","type","data","get","payload","error","message","addDistrict","Name","SID","post","localStorage","setItem","JSON","stringify","response","detailsDistrict","districtId"],"sources":["C:/Users/Sehat Box/Desktop/Web Node/MIS/client/src/actions/districtActions.js"],"sourcesContent":["import Axios from 'axios';\r\nimport {\r\n  DISTRICT_LIST_REQUEST, DISTRICT_LIST_SUCCESS, DISTRICT_LIST_FAIL,\r\n  ADD_DISTRICT_FAIL, ADD_DISTRICT_REQUEST, ADD_DISTRICT_SUCCESS,\r\n  DISTRICT_DETAILS_FAIL,DISTRICT_DETAILS_REQUEST,DISTRICT_DETAILS_SUCCESS\r\n } from \"../constants/districtConstants\";\r\n\r\n export const districtlist = ({}) => async (dispatch) => {\r\n  dispatch({ type: DISTRICT_LIST_REQUEST });\r\n  try {\r\n    const { data } = await Axios.get(\r\n      `/api/district/all`\r\n    );\r\n    dispatch({ type: DISTRICT_LIST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: DISTRICT_LIST_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\nexport const addDistrict = (Name,  SID) => async (dispatch) => {\r\n  dispatch({ type: ADD_DISTRICT_REQUEST, payload: { Name, SID } });\r\n  try {\r\n    const { data } = await Axios.post('/api/district/add', { Name, SID });\r\n    dispatch({ type: ADD_DISTRICT_SUCCESS, payload: data });\r\n    localStorage.setItem('districtAdd', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ADD_DISTRICT_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n\r\nexport const detailsDistrict = (districtId) => async (dispatch) =>{\r\n  dispatch({\r\n      type: DISTRICT_DETAILS_REQUEST, payload: districtId });\r\n  try {\r\n      const { data } = await Axios.get(`/api/district/${districtId}`);\r\n      dispatch({ type: DISTRICT_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n      dispatch({ \r\n          type: DISTRICT_DETAILS_FAIL, \r\n          payload: \r\n          error.response && error.response.data.message \r\n          ? error.response.data.message \r\n          : error.message,\r\n      });\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,qBADF,EACyBC,qBADzB,EACgDC,kBADhD,EAEEC,iBAFF,EAEqBC,oBAFrB,EAE2CC,oBAF3C,EAGEC,qBAHF,EAGwBC,wBAHxB,EAGiDC,wBAHjD,QAIQ,gCAJR;AAMC,OAAO,MAAMC,YAAY,GAAG;EAAA,IAAC,EAAD;EAAA,OAAQ,MAAOC,QAAP,IAAoB;IACvDA,QAAQ,CAAC;MAAEC,IAAI,EAAEX;IAAR,CAAD,CAAR;;IACA,IAAI;MACF,MAAM;QAAEY;MAAF,IAAW,MAAMb,KAAK,CAACc,GAAN,CACpB,mBADoB,CAAvB;MAGAH,QAAQ,CAAC;QAAEC,IAAI,EAAEV,qBAAR;QAA+Ba,OAAO,EAAEF;MAAxC,CAAD,CAAR;IACD,CALD,CAKE,OAAOG,KAAP,EAAc;MACdL,QAAQ,CAAC;QAAEC,IAAI,EAAET,kBAAR;QAA4BY,OAAO,EAAEC,KAAK,CAACC;MAA3C,CAAD,CAAR;IACD;EACF,CAV4B;AAAA,CAArB;AAYR,OAAO,MAAMC,WAAW,GAAG,CAACC,IAAD,EAAQC,GAAR,KAAgB,MAAOT,QAAP,IAAoB;EAC7DA,QAAQ,CAAC;IAAEC,IAAI,EAAEP,oBAAR;IAA8BU,OAAO,EAAE;MAAEI,IAAF;MAAQC;IAAR;EAAvC,CAAD,CAAR;;EACA,IAAI;IACF,MAAM;MAAEP;IAAF,IAAW,MAAMb,KAAK,CAACqB,IAAN,CAAW,mBAAX,EAAgC;MAAEF,IAAF;MAAQC;IAAR,CAAhC,CAAvB;IACAT,QAAQ,CAAC;MAAEC,IAAI,EAAEN,oBAAR;MAA8BS,OAAO,EAAEF;IAAvC,CAAD,CAAR;IACAS,YAAY,CAACC,OAAb,CAAqB,aAArB,EAAoCC,IAAI,CAACC,SAAL,CAAeZ,IAAf,CAApC;EACD,CAJD,CAIE,OAAOG,KAAP,EAAc;IACdL,QAAQ,CAAC;MACPC,IAAI,EAAER,iBADC;MAEPW,OAAO,EACLC,KAAK,CAACU,QAAN,IAAkBV,KAAK,CAACU,QAAN,CAAeb,IAAf,CAAoBI,OAAtC,GACID,KAAK,CAACU,QAAN,CAAeb,IAAf,CAAoBI,OADxB,GAEID,KAAK,CAACC;IALL,CAAD,CAAR;EAOD;AACF,CAfM;AAkBP,OAAO,MAAMU,eAAe,GAAIC,UAAD,IAAgB,MAAOjB,QAAP,IAAmB;EAChEA,QAAQ,CAAC;IACLC,IAAI,EAAEJ,wBADD;IAC2BO,OAAO,EAAEa;EADpC,CAAD,CAAR;;EAEA,IAAI;IACA,MAAM;MAAEf;IAAF,IAAW,MAAMb,KAAK,CAACc,GAAN,CAAW,iBAAgBc,UAAW,EAAtC,CAAvB;IACAjB,QAAQ,CAAC;MAAEC,IAAI,EAAEH,wBAAR;MAAkCM,OAAO,EAAEF;IAA3C,CAAD,CAAR;EACH,CAHD,CAGE,OAAOG,KAAP,EAAc;IACZL,QAAQ,CAAC;MACLC,IAAI,EAAEL,qBADD;MAELQ,OAAO,EACPC,KAAK,CAACU,QAAN,IAAkBV,KAAK,CAACU,QAAN,CAAeb,IAAf,CAAoBI,OAAtC,GACED,KAAK,CAACU,QAAN,CAAeb,IAAf,CAAoBI,OADtB,GAEED,KAAK,CAACC;IALH,CAAD,CAAR;EAOH;AACF,CAfM"},"metadata":{},"sourceType":"module"}