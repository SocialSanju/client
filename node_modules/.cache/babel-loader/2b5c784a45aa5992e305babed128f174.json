{"ast":null,"code":"import Axios from 'axios';\nimport { STATE_LIST_REQUEST, STATE_LIST_SUCCESS, STATE_LIST_FAIL, ADD_STATE_FAIL, ADD_STATE_REQUEST, ADD_STATE_SUCCESS, STATE_DETAILS_FAIL, STATE_DETAILS_REQUEST, STATE_DETAILS_SUCCESS } from \"../constants/stateConstants\";\nexport const statelist = _ref => {\n  let {} = _ref;\n  return async dispatch => {\n    dispatch({\n      type: STATE_LIST_REQUEST\n    });\n\n    try {\n      const {\n        data\n      } = await Axios.get(`/api/state/all`);\n      dispatch({\n        type: STATE_LIST_SUCCESS,\n        payload: data\n      });\n    } catch (error) {\n      dispatch({\n        type: STATE_LIST_FAIL,\n        payload: error.message\n      });\n    }\n  };\n};\nexport const addState = Name => async dispatch => {\n  dispatch({\n    type: ADD_STATE_REQUEST,\n    payload: {\n      Name\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post('/api/state/add', {\n      Name\n    });\n    dispatch({\n      type: ADD_STATE_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('stateAdd', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: ADD_STATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const detailsState = stateId => async dispatch => {\n  dispatch({\n    type: STATE_DETAILS_REQUEST,\n    payload: stateId\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/state/${stateId}`);\n    dispatch({\n      type: STATE_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: STATE_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"names":["Axios","STATE_LIST_REQUEST","STATE_LIST_SUCCESS","STATE_LIST_FAIL","ADD_STATE_FAIL","ADD_STATE_REQUEST","ADD_STATE_SUCCESS","STATE_DETAILS_FAIL","STATE_DETAILS_REQUEST","STATE_DETAILS_SUCCESS","statelist","dispatch","type","data","get","payload","error","message","addState","Name","post","localStorage","setItem","JSON","stringify","response","detailsState","stateId"],"sources":["C:/Users/Sehat Box/Desktop/Web Node/MIS/client/src/actions/stateActions.js"],"sourcesContent":["import Axios from 'axios';\r\nimport {\r\n  STATE_LIST_REQUEST, STATE_LIST_SUCCESS, STATE_LIST_FAIL,\r\n  ADD_STATE_FAIL, ADD_STATE_REQUEST, ADD_STATE_SUCCESS,\r\n  STATE_DETAILS_FAIL,STATE_DETAILS_REQUEST,STATE_DETAILS_SUCCESS\r\n } from \"../constants/stateConstants\";\r\n\r\n export const statelist = ({}) => async (dispatch) => {\r\n  dispatch({ type: STATE_LIST_REQUEST });\r\n  try {\r\n    const { data } = await Axios.get(\r\n      `/api/state/all`\r\n    );\r\n    dispatch({ type: STATE_LIST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: STATE_LIST_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\nexport const addState = (Name) => async (dispatch) => {\r\n  dispatch({ type: ADD_STATE_REQUEST, payload: { Name } });\r\n  try {\r\n    const { data } = await Axios.post('/api/state/add', { Name });\r\n    dispatch({ type: ADD_STATE_SUCCESS, payload: data });\r\n    localStorage.setItem('stateAdd', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ADD_STATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n\r\nexport const detailsState = (stateId) => async (dispatch) =>{\r\n  dispatch({\r\n      type: STATE_DETAILS_REQUEST, payload: stateId });\r\n  try {\r\n      const { data } = await Axios.get(`/api/state/${stateId}`);\r\n      dispatch({ type: STATE_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n      dispatch({ \r\n          type: STATE_DETAILS_FAIL, \r\n          payload: \r\n          error.response && error.response.data.message \r\n          ? error.response.data.message \r\n          : error.message,\r\n      });\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,kBADF,EACsBC,kBADtB,EAC0CC,eAD1C,EAEEC,cAFF,EAEkBC,iBAFlB,EAEqCC,iBAFrC,EAGEC,kBAHF,EAGqBC,qBAHrB,EAG2CC,qBAH3C,QAIQ,6BAJR;AAMC,OAAO,MAAMC,SAAS,GAAG;EAAA,IAAC,EAAD;EAAA,OAAQ,MAAOC,QAAP,IAAoB;IACpDA,QAAQ,CAAC;MAAEC,IAAI,EAAEX;IAAR,CAAD,CAAR;;IACA,IAAI;MACF,MAAM;QAAEY;MAAF,IAAW,MAAMb,KAAK,CAACc,GAAN,CACpB,gBADoB,CAAvB;MAGAH,QAAQ,CAAC;QAAEC,IAAI,EAAEV,kBAAR;QAA4Ba,OAAO,EAAEF;MAArC,CAAD,CAAR;IACD,CALD,CAKE,OAAOG,KAAP,EAAc;MACdL,QAAQ,CAAC;QAAEC,IAAI,EAAET,eAAR;QAAyBY,OAAO,EAAEC,KAAK,CAACC;MAAxC,CAAD,CAAR;IACD;EACF,CAVyB;AAAA,CAAlB;AAYR,OAAO,MAAMC,QAAQ,GAAIC,IAAD,IAAU,MAAOR,QAAP,IAAoB;EACpDA,QAAQ,CAAC;IAAEC,IAAI,EAAEP,iBAAR;IAA2BU,OAAO,EAAE;MAAEI;IAAF;EAApC,CAAD,CAAR;;EACA,IAAI;IACF,MAAM;MAAEN;IAAF,IAAW,MAAMb,KAAK,CAACoB,IAAN,CAAW,gBAAX,EAA6B;MAAED;IAAF,CAA7B,CAAvB;IACAR,QAAQ,CAAC;MAAEC,IAAI,EAAEN,iBAAR;MAA2BS,OAAO,EAAEF;IAApC,CAAD,CAAR;IACAQ,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeX,IAAf,CAAjC;EACD,CAJD,CAIE,OAAOG,KAAP,EAAc;IACdL,QAAQ,CAAC;MACPC,IAAI,EAAER,cADC;MAEPW,OAAO,EACLC,KAAK,CAACS,QAAN,IAAkBT,KAAK,CAACS,QAAN,CAAeZ,IAAf,CAAoBI,OAAtC,GACID,KAAK,CAACS,QAAN,CAAeZ,IAAf,CAAoBI,OADxB,GAEID,KAAK,CAACC;IALL,CAAD,CAAR;EAOD;AACF,CAfM;AAkBP,OAAO,MAAMS,YAAY,GAAIC,OAAD,IAAa,MAAOhB,QAAP,IAAmB;EAC1DA,QAAQ,CAAC;IACLC,IAAI,EAAEJ,qBADD;IACwBO,OAAO,EAAEY;EADjC,CAAD,CAAR;;EAEA,IAAI;IACA,MAAM;MAAEd;IAAF,IAAW,MAAMb,KAAK,CAACc,GAAN,CAAW,cAAaa,OAAQ,EAAhC,CAAvB;IACAhB,QAAQ,CAAC;MAAEC,IAAI,EAAEH,qBAAR;MAA+BM,OAAO,EAAEF;IAAxC,CAAD,CAAR;EACH,CAHD,CAGE,OAAOG,KAAP,EAAc;IACZL,QAAQ,CAAC;MACLC,IAAI,EAAEL,kBADD;MAELQ,OAAO,EACPC,KAAK,CAACS,QAAN,IAAkBT,KAAK,CAACS,QAAN,CAAeZ,IAAf,CAAoBI,OAAtC,GACED,KAAK,CAACS,QAAN,CAAeZ,IAAf,CAAoBI,OADtB,GAEED,KAAK,CAACC;IALH,CAAD,CAAR;EAOH;AACF,CAfM"},"metadata":{},"sourceType":"module"}