{"ast":null,"code":"import Axios from 'axios';\nimport { ORDER_CREATE_REQUEST, ORDER_CREATE_FAIL, ORDER_CREATE_SUCCESS, ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_LIST_FAIL } from \"../constants/orderConstants\";\nexport const orderlist = _ref => {\n  let {} = _ref;\n  return async dispatch => {\n    dispatch({\n      type: ORDER_LIST_REQUEST\n    });\n\n    try {\n      const {\n        data\n      } = await Axios.get(`/api/order/all`);\n      dispatch({\n        type: ORDER_LIST_SUCCESS,\n        payload: data\n      });\n    } catch (error) {\n      dispatch({\n        type: ORDER_LIST_FAIL,\n        payload: error.message\n      });\n    }\n  };\n};\nexport const addOrder = (Name, Mobile_No) => async dispatch => {\n  dispatch({\n    type: ORDER_CREATE_REQUEST,\n    payload: {\n      Name,\n      Mobile_No\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post('/api/order/add', {\n      Name,\n      Mobile_No\n    });\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('orderAdd', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"names":["Axios","ORDER_CREATE_REQUEST","ORDER_CREATE_FAIL","ORDER_CREATE_SUCCESS","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","orderlist","dispatch","type","data","get","payload","error","message","addOrder","Name","Mobile_No","post","localStorage","setItem","JSON","stringify","response"],"sources":["C:/Users/Sehat Box/Desktop/Web Node/MIS/client/src/actions/orderActions.js"],"sourcesContent":["import Axios from 'axios';\r\nimport {\r\n  ORDER_CREATE_REQUEST, ORDER_CREATE_FAIL, ORDER_CREATE_SUCCESS,\r\n  ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_LIST_FAIL,\r\n } from \"../constants/orderConstants\";\r\n\r\n export const orderlist = ({}) => async (dispatch) => {\r\n  dispatch({ type: ORDER_LIST_REQUEST });\r\n  try {\r\n    const { data } = await Axios.get(\r\n      `/api/order/all`\r\n    );\r\n    dispatch({ type: ORDER_LIST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: ORDER_LIST_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\n\r\nexport const addOrder = (Name, Mobile_No) => async (dispatch) => {\r\n  dispatch({ type: ORDER_CREATE_REQUEST, payload: { Name, Mobile_No } });\r\n  try {\r\n    const { data } = await Axios.post('/api/order/add', { Name, Mobile_No });\r\n    dispatch({ type: ORDER_CREATE_SUCCESS, payload: data });\r\n    localStorage.setItem('orderAdd', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_CREATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,oBADF,EACwBC,iBADxB,EAC2CC,oBAD3C,EAEEC,kBAFF,EAEsBC,kBAFtB,EAE0CC,eAF1C,QAGQ,6BAHR;AAKC,OAAO,MAAMC,SAAS,GAAG;EAAA,IAAC,EAAD;EAAA,OAAQ,MAAOC,QAAP,IAAoB;IACpDA,QAAQ,CAAC;MAAEC,IAAI,EAAEL;IAAR,CAAD,CAAR;;IACA,IAAI;MACF,MAAM;QAAEM;MAAF,IAAW,MAAMV,KAAK,CAACW,GAAN,CACpB,gBADoB,CAAvB;MAGAH,QAAQ,CAAC;QAAEC,IAAI,EAAEJ,kBAAR;QAA4BO,OAAO,EAAEF;MAArC,CAAD,CAAR;IACD,CALD,CAKE,OAAOG,KAAP,EAAc;MACdL,QAAQ,CAAC;QAAEC,IAAI,EAAEH,eAAR;QAAyBM,OAAO,EAAEC,KAAK,CAACC;MAAxC,CAAD,CAAR;IACD;EACF,CAVyB;AAAA,CAAlB;AAaR,OAAO,MAAMC,QAAQ,GAAG,CAACC,IAAD,EAAOC,SAAP,KAAqB,MAAOT,QAAP,IAAoB;EAC/DA,QAAQ,CAAC;IAAEC,IAAI,EAAER,oBAAR;IAA8BW,OAAO,EAAE;MAAEI,IAAF;MAAQC;IAAR;EAAvC,CAAD,CAAR;;EACA,IAAI;IACF,MAAM;MAAEP;IAAF,IAAW,MAAMV,KAAK,CAACkB,IAAN,CAAW,gBAAX,EAA6B;MAAEF,IAAF;MAAQC;IAAR,CAA7B,CAAvB;IACAT,QAAQ,CAAC;MAAEC,IAAI,EAAEN,oBAAR;MAA8BS,OAAO,EAAEF;IAAvC,CAAD,CAAR;IACAS,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeZ,IAAf,CAAjC;EACD,CAJD,CAIE,OAAOG,KAAP,EAAc;IACdL,QAAQ,CAAC;MACPC,IAAI,EAAEP,iBADC;MAEPU,OAAO,EACLC,KAAK,CAACU,QAAN,IAAkBV,KAAK,CAACU,QAAN,CAAeb,IAAf,CAAoBI,OAAtC,GACID,KAAK,CAACU,QAAN,CAAeb,IAAf,CAAoBI,OADxB,GAEID,KAAK,CAACC;IALL,CAAD,CAAR;EAOD;AACF,CAfM"},"metadata":{},"sourceType":"module"}