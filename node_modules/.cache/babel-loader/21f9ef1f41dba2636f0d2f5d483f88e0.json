{"ast":null,"code":"import Axios from 'axios';\nimport { PRODUCT_CREATE_FAIL, PRODUCT_CREATE_REQUEST, PRODUCT_CREATE_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_UPDATE_FAIL, PRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_SUCCESS, PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_FAIL, PRODUCT_CATEGORY_LIST_SUCCESS, PRODUCT_CATEGORY_LIST_REQUEST, PRODUCT_CATEGORY_LIST_FAIL, PRODUCT_REVIEW_CREATE_FAIL, PRODUCT_REVIEW_CREATE_REQUEST, PRODUCT_REVIEW_CREATE_SUCCESS } from '../constants/productConstants';\nexport const listProducts = ({\n  seller = '',\n  name = '',\n  category = '',\n  order = '',\n  min = 0,\n  max = 0,\n  rating = 0\n}) => async dispatch => {\n  dispatch({\n    type: PRODUCT_LIST_REQUEST\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/products?seller=${seller}&name=${name}&category=${category}&min=${min}&max=${max}&rating=${rating}&order=${order}`);\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\nexport const listProductCategories = () => async dispatch => {\n  dispatch({\n    type: PRODUCT_CATEGORY_LIST_REQUEST\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/products/categories`);\n    dispatch({\n      type: PRODUCT_CATEGORY_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_CATEGORY_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\nexport const detailsProduct = productId => async dispatch => {\n  dispatch({\n    type: PRODUCT_DETAILS_REQUEST,\n    payload: productId\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/products/${productId}`);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const createProduct = (productId, review) => async (dispatch, getState) => {\n  dispatch({\n    type: PRODUCT_CREATE_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.post(`/api/products/${productId}/reviews`, review, {\n      headers: {\n        Authorization: `Sanju ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: PRODUCT_CREATE_SUCCESS,\n      payload: data.product\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: PRODUCT_CREATE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const updateProduct = product => async (dispatch, getState) => {\n  dispatch({\n    type: PRODUCT_UPDATE_REQUEST,\n    payload: product\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.put(`/api/products/${product._id}`, product, {\n      headers: {\n        Authorization: `Sanju ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: PRODUCT_UPDATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: PRODUCT_UPDATE_FAIL,\n      error: message\n    });\n  }\n};\nexport const deleteProduct = productId => async (dispatch, getState) => {\n  dispatch({\n    type: PRODUCT_DELETE_REQUEST,\n    payload: productId\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = Axios.delete(`/api/products/${productId}`, {\n      headers: {\n        Authorization: `Sanju ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: PRODUCT_DELETE_SUCCESS\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const createReview = () => async (dispatch, getState) => {\n  dispatch({\n    type: PRODUCT_REVIEW_CREATE_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.post('/api/products', {}, {\n      headers: {\n        Authorization: `Sanju ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: PRODUCT_REVIEW_CREATE_SUCCESS,\n      payload: data.product\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: PRODUCT_REVIEW_CREATE_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/DELL/Desktop/amazon/frontend/src/actions/productActions.js"],"names":["Axios","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_FAIL","PRODUCT_CATEGORY_LIST_SUCCESS","PRODUCT_CATEGORY_LIST_REQUEST","PRODUCT_CATEGORY_LIST_FAIL","PRODUCT_REVIEW_CREATE_FAIL","PRODUCT_REVIEW_CREATE_REQUEST","PRODUCT_REVIEW_CREATE_SUCCESS","listProducts","seller","name","category","order","min","max","rating","dispatch","type","data","get","payload","error","message","listProductCategories","detailsProduct","productId","response","createProduct","review","getState","userSignin","userInfo","post","headers","Authorization","token","product","updateProduct","put","_id","deleteProduct","delete","createReview"],"mappings":"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","sourcesContent":["import Axios from 'axios';\r\nimport { PRODUCT_CREATE_FAIL, PRODUCT_CREATE_REQUEST, PRODUCT_CREATE_SUCCESS, \r\n  PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, \r\n  PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, \r\n  PRODUCT_UPDATE_FAIL, PRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_FAIL, PRODUCT_CATEGORY_LIST_SUCCESS, PRODUCT_CATEGORY_LIST_REQUEST, PRODUCT_CATEGORY_LIST_FAIL,\r\n  PRODUCT_REVIEW_CREATE_FAIL,PRODUCT_REVIEW_CREATE_REQUEST,PRODUCT_REVIEW_CREATE_SUCCESS } from '../constants/productConstants'\r\n\r\nexport const listProducts = ({ \r\n  seller = '', \r\n  name = '', \r\n  category = '',\r\n  order = '',\r\n  min = 0,\r\n  max = 0,\r\n  rating = 0,\r\n }) => async (dispatch) =>{\r\n    dispatch({\r\n        type: PRODUCT_LIST_REQUEST\r\n    });\r\n    try {\r\n        const { data } = await Axios.get(`/api/products?seller=${seller}&name=${name}&category=${category}&min=${min}&max=${max}&rating=${rating}&order=${order}`);\r\n        dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({ type:PRODUCT_LIST_FAIL, payload: error.message });\r\n    }\r\n};\r\n\r\nexport const listProductCategories = () => async (dispatch) =>{\r\n  dispatch({\r\n      type: PRODUCT_CATEGORY_LIST_REQUEST\r\n  });\r\n  try {\r\n      const { data } = await Axios.get(`/api/products/categories`);\r\n      dispatch({ type: PRODUCT_CATEGORY_LIST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n      dispatch({ type:PRODUCT_CATEGORY_LIST_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\n\r\nexport const detailsProduct = (productId) => async (dispatch) =>{\r\n    dispatch({\r\n        type: PRODUCT_DETAILS_REQUEST, payload: productId });\r\n    try {\r\n        const { data } = await Axios.get(`/api/products/${productId}`);\r\n        dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({ \r\n            type: PRODUCT_DETAILS_FAIL, \r\n            payload: \r\n            error.response && error.response.data.message \r\n            ? error.response.data.message \r\n            : error.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const createProduct = (productId, review) => async (dispatch, getState) => {\r\n  dispatch({ type: PRODUCT_CREATE_REQUEST });\r\n  const {\r\n    userSignin: { userInfo },\r\n  } = getState();\r\n  try {\r\n    const { data } = await Axios.post(\r\n      `/api/products/${productId}/reviews`,\r\n      review,\r\n      {\r\n        headers: { Authorization: `Sanju ${userInfo.token}` },\r\n      }\r\n    );\r\n    dispatch({\r\n      type: PRODUCT_CREATE_SUCCESS,\r\n      payload: data.product,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: PRODUCT_CREATE_FAIL, payload: message });\r\n  }\r\n};\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n  dispatch({ type: PRODUCT_UPDATE_REQUEST, payload: product });\r\n  const {\r\n    userSignin: { userInfo },\r\n  } = getState();\r\n  try {\r\n    const { data } = await Axios.put(`/api/products/${product._id}`, product, {\r\n      headers: { Authorization: `Sanju ${userInfo.token}` },\r\n    });\r\n    dispatch({ type: PRODUCT_UPDATE_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: PRODUCT_UPDATE_FAIL, error: message });\r\n  }\r\n};\r\nexport const deleteProduct = (productId) => async (dispatch, getState) => {\r\n  dispatch({ type: PRODUCT_DELETE_REQUEST, payload: productId });\r\n  const {\r\n    userSignin: { userInfo },\r\n  } = getState();\r\n  try {\r\n    const { data } = Axios.delete(`/api/products/${productId}`, {\r\n      headers: { Authorization: `Sanju ${userInfo.token}` },\r\n    });\r\n    dispatch({ type: PRODUCT_DELETE_SUCCESS });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: PRODUCT_DELETE_FAIL, payload: message });\r\n  }\r\n};\r\n\r\nexport const createReview = () => async (dispatch, getState) => {\r\n  dispatch({ type: PRODUCT_REVIEW_CREATE_REQUEST });\r\n  const {\r\n    userSignin: { userInfo },\r\n  } = getState();\r\n  try {\r\n    const { data } = await Axios.post(\r\n      '/api/products',\r\n      {},\r\n      {\r\n        headers: { Authorization: `Sanju ${userInfo.token}` },\r\n      }\r\n    );\r\n    dispatch({\r\n      type: PRODUCT_REVIEW_CREATE_SUCCESS,\r\n      payload: data.product,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: PRODUCT_REVIEW_CREATE_FAIL, payload: message });\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}