{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sehat Box\\\\Documents\\\\GitHub\\\\client\\\\src\\\\screens\\\\AccountScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addAccount } from '../actions/accountActions';\nimport { grouplist } from '../actions/accountActions';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport AcGroup from '../components/acgroup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AccountScreen(props) {\n  _s();\n\n  const [Name, setName] = useState('');\n  const [Mobile_No, setMobile_No] = useState('');\n  const [Ac_Group, setAc_Group] = useState('');\n  const redirect = props.location.search ? props.location.search.split('=')[1] : '/';\n  const addAct = useSelector(state => state.addAct);\n  const {\n    accountAdd,\n    loading,\n    error\n  } = addAct;\n  const acgroupList = useSelector(state => state.acgroupList);\n  const {\n    grouplistloading,\n    grouplisterror,\n    groups\n  } = acgroupList;\n  const dispatch = useDispatch();\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(addAccount(Name, Mobile_No, Ac_Group));\n  };\n\n  useEffect(() => {\n    if (accountAdd) {\n      props.history.push(redirect);\n    }\n\n    dispatch(grouplist({}));\n  }, [props.history, redirect, accountAdd]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Add Account \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this), loading && /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 19\n      }, this), error && /*#__PURE__*/_jsxDEV(MessageBox, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"Name\",\n          placeholder: \"Enter name\",\n          required: true,\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"mobileno\",\n          children: \"Mobile No\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"Mobile_No\",\n          placeholder: \"Enter mobile no\",\n          required: true,\n          onChange: e => setMobile_No(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this), grouplistloading ? /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this) : grouplisterror ? /*#__PURE__*/_jsxDEV(MessageBox, {\n        variant: \"danger\",\n        children: grouplisterror\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [groups.length === 0 && /*#__PURE__*/_jsxDEV(MessageBox, {\n          children: \"No Group Found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 35\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"acgroup\",\n            children: \"Account Group\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"Ac_Group\",\n            onChange: e => setAc_Group(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"---Select---\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 11\n            }, this), groups.map(group => /*#__PURE__*/_jsxDEV(\"option\", {\n              children: /*#__PURE__*/_jsxDEV(AcGroup, {\n                group: group\n              }, group._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 11\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"primary\",\n          type: \"submit\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AccountScreen, \"InIFzyRUb7hbVwYN5wOYbDyqVEE=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = AccountScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountScreen\");","map":{"version":3,"sources":["C:/Users/Sehat Box/Documents/GitHub/client/src/screens/AccountScreen.js"],"names":["React","useEffect","useState","useDispatch","useSelector","addAccount","grouplist","LoadingBox","MessageBox","AcGroup","AccountScreen","props","Name","setName","Mobile_No","setMobile_No","Ac_Group","setAc_Group","redirect","location","search","split","addAct","state","accountAdd","loading","error","acgroupList","grouplistloading","grouplisterror","groups","dispatch","submitHandler","e","preventDefault","history","push","target","value","length","map","group","_id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addAccount } from '../actions/accountActions';\r\nimport { grouplist } from '../actions/accountActions';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport AcGroup from '../components/acgroup';\r\n\r\nexport default function AccountScreen(props) {\r\n  const [Name, setName] = useState('');\r\n  const [Mobile_No, setMobile_No] = useState('');\r\n  const [Ac_Group, setAc_Group] = useState('');\r\n\r\n  const redirect = props.location.search\r\n    ? props.location.search.split('=')[1]\r\n    : '/';\r\n\r\n  const addAct = useSelector((state) => state.addAct);\r\n  const { accountAdd, loading, error } = addAct;\r\n\r\n  const acgroupList = useSelector((state) => state.acgroupList);\r\n  const { grouplistloading, grouplisterror, groups } = acgroupList;\r\n\r\n  const dispatch = useDispatch();\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(addAccount(Name, Mobile_No, Ac_Group));\r\n  };\r\n  useEffect(() => {\r\n    if (accountAdd) {\r\n      props.history.push(redirect);\r\n    }\r\n   dispatch(grouplist({}));\r\n  }, [props.history, redirect, accountAdd]);\r\n  \r\n  return (\r\n    <div>\r\n    <form className=\"form\" onSubmit={submitHandler}>\r\n      <div>\r\n        <h1>Add Account </h1>\r\n      </div>\r\n      {loading && <LoadingBox></LoadingBox>}\r\n      {error && <MessageBox variant=\"danger\">{error}</MessageBox>}\r\n      <div>\r\n        <label htmlFor=\"name\">Name</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"Name\"\r\n          placeholder=\"Enter name\"\r\n          required\r\n          onChange={(e) => setName(e.target.value)}\r\n        ></input>\r\n      </div>\r\n\r\n      <div>\r\n        <label htmlFor=\"mobileno\">Mobile No</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"Mobile_No\"\r\n          placeholder=\"Enter mobile no\"\r\n          required\r\n          onChange={(e) => setMobile_No(e.target.value)}\r\n        ></input>\r\n      </div>\r\n\r\n      {grouplistloading ? (\r\n        <LoadingBox></LoadingBox>\r\n      ) : grouplisterror ? (\r\n        <MessageBox variant=\"danger\">{grouplisterror}</MessageBox>\r\n      ) : (\r\n        <>\r\n          {groups.length === 0 && <MessageBox>No Group Found</MessageBox>}\r\n          <div>\r\n        <label htmlFor=\"acgroup\">Account Group</label>\r\n        <select name=\"Ac_Group\" onChange={(e) => setAc_Group(e.target.value)}>\r\n          <option>---Select---</option>\r\n        {groups.map((group) => (\r\n          \r\n          <option>\r\n              <AcGroup key={group._id} group={group}></AcGroup></option>\r\n            ))}\r\n        </select>\r\n      </div>\r\n\r\n          \r\n       \r\n        </>\r\n      )}\r\n      <div>\r\n        <label />\r\n        <button className=\"primary\" type=\"submit\">\r\n          Save\r\n        </button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}