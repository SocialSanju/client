{"ast":null,"code":"import Axios from 'axios';\nimport { PRODUCT_CREATE_FAIL, PRODUCT_CREATE_REQUEST, PRODUCT_CREATE_SUCCESS, ADD_PRODUCT_FAIL, ADD_PRODUCT_REQUEST, ADD_PRODUCT_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, ALL_PRODUCT_LIST_REQUEST, ALL_PRODUCT_LIST_SUCCESS, ALL_PRODUCT_LIST_FAIL, PRODUCT_UPDATE_FAIL, PRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_SUCCESS, PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_FAIL, PRODUCT_CATEGORY_LIST_SUCCESS, PRODUCT_CATEGORY_LIST_REQUEST, PRODUCT_CATEGORY_LIST_FAIL, PRODUCT_REVIEW_CREATE_FAIL, PRODUCT_REVIEW_CREATE_REQUEST, PRODUCT_REVIEW_CREATE_SUCCESS } from '../constants/productConstants';\nexport const listProducts = ({\n  pageNumber = '',\n  seller = '',\n  name = '',\n  category = '',\n  order = '',\n  min = 0,\n  max = 0,\n  rating = 0\n}) => async dispatch => {\n  dispatch({\n    type: PRODUCT_LIST_REQUEST\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/products?pageNumber=${pageNumber}&seller=${seller}&name=${name}&category=${category}&min=${min}&max=${max}&rating=${rating}&order=${order}`);\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\nexport const listProductCategories = () => async dispatch => {\n  dispatch({\n    type: PRODUCT_CATEGORY_LIST_REQUEST\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/products/categories`);\n    dispatch({\n      type: PRODUCT_CATEGORY_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_CATEGORY_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\nexport const detailsProduct = productId => async dispatch => {\n  dispatch({\n    type: PRODUCT_DETAILS_REQUEST,\n    payload: productId\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/products/${productId}`);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const addProduct = (name, seller, image, category, price, brand, countInStock, rating, numReview, description) => async dispatch => {\n  dispatch({\n    type: ADD_PRODUCT_REQUEST,\n    payload: {\n      name,\n      seller,\n      image,\n      category,\n      price,\n      brand,\n      countInStock,\n      rating,\n      numReview,\n      description\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post('/api/products/create', {\n      name,\n      seller,\n      image,\n      category,\n      price,\n      brand,\n      countInStock,\n      rating,\n      numReview,\n      description\n    });\n    dispatch({\n      type: ADD_PRODUCT_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('productInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: ADD_PRODUCT_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const createProduct = () => async (dispatch, getState) => {\n  dispatch({\n    type: PRODUCT_CREATE_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.post('/api/products', {}, {\n      headers: {\n        Authorization: `Sanju ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: PRODUCT_CREATE_SUCCESS,\n      payload: data.product\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: PRODUCT_CREATE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const updateProduct = product => async (dispatch, getState) => {\n  dispatch({\n    type: PRODUCT_UPDATE_REQUEST,\n    payload: product\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.put(`/api/products/${product._id}`, product, {\n      headers: {\n        Authorization: `Sanju ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: PRODUCT_UPDATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: PRODUCT_UPDATE_FAIL,\n      error: message\n    });\n  }\n};\nexport const deleteProduct = productId => async (dispatch, getState) => {\n  dispatch({\n    type: PRODUCT_DELETE_REQUEST,\n    payload: productId\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = Axios.delete(`/api/products/${productId}`, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: PRODUCT_DELETE_SUCCESS\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const createReview = (productId, review) => async (dispatch, getState) => {\n  dispatch({\n    type: PRODUCT_REVIEW_CREATE_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.post(`/api/products/${productId}/reviews`, review, {\n      headers: {\n        Authorization: `Sanju ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: PRODUCT_REVIEW_CREATE_SUCCESS,\n      payload: data.review\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: PRODUCT_REVIEW_CREATE_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["G:/Data Desktop/amazon/frontend/src/actions/productActions.js"],"names":["Axios","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","ADD_PRODUCT_FAIL","ADD_PRODUCT_REQUEST","ADD_PRODUCT_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","ALL_PRODUCT_LIST_REQUEST","ALL_PRODUCT_LIST_SUCCESS","ALL_PRODUCT_LIST_FAIL","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_FAIL","PRODUCT_CATEGORY_LIST_SUCCESS","PRODUCT_CATEGORY_LIST_REQUEST","PRODUCT_CATEGORY_LIST_FAIL","PRODUCT_REVIEW_CREATE_FAIL","PRODUCT_REVIEW_CREATE_REQUEST","PRODUCT_REVIEW_CREATE_SUCCESS","listProducts","pageNumber","seller","name","category","order","min","max","rating","dispatch","type","data","get","payload","error","message","listProductCategories","detailsProduct","productId","response","addProduct","image","price","brand","countInStock","numReview","description","post","localStorage","setItem","JSON","stringify","createProduct","getState","userSignin","userInfo","headers","Authorization","token","product","updateProduct","put","_id","deleteProduct","delete","createReview","review"],"mappings":"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","sourcesContent":["import Axios from 'axios';\r\nimport { PRODUCT_CREATE_FAIL, PRODUCT_CREATE_REQUEST, PRODUCT_CREATE_SUCCESS, \r\n  ADD_PRODUCT_FAIL, ADD_PRODUCT_REQUEST, ADD_PRODUCT_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, \r\n  PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, \r\n  ALL_PRODUCT_LIST_REQUEST,ALL_PRODUCT_LIST_SUCCESS,ALL_PRODUCT_LIST_FAIL,\r\n  PRODUCT_UPDATE_FAIL, PRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_FAIL, PRODUCT_CATEGORY_LIST_SUCCESS, PRODUCT_CATEGORY_LIST_REQUEST, PRODUCT_CATEGORY_LIST_FAIL,\r\n  PRODUCT_REVIEW_CREATE_FAIL,PRODUCT_REVIEW_CREATE_REQUEST,PRODUCT_REVIEW_CREATE_SUCCESS } from '../constants/productConstants'\r\n\r\n  export const listProducts = ({\r\n    pageNumber = '',\r\n    seller = '',\r\n    name = '',\r\n    category = '',\r\n    order = '',\r\n    min = 0,\r\n    max = 0,\r\n    rating = 0,\r\n  }) => async (dispatch) => {\r\n    dispatch({\r\n      type: PRODUCT_LIST_REQUEST,\r\n    });\r\n    try {\r\n      const { data } = await Axios.get(\r\n        `/api/products?pageNumber=${pageNumber}&seller=${seller}&name=${name}&category=${category}&min=${min}&max=${max}&rating=${rating}&order=${order}`\r\n      );\r\n      dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      dispatch({ type: PRODUCT_LIST_FAIL, payload: error.message });\r\n    }\r\n  };\r\n  \r\nexport const listProductCategories = () => async (dispatch) =>{\r\n  dispatch({\r\n      type: PRODUCT_CATEGORY_LIST_REQUEST\r\n  });\r\n  try {\r\n      const { data } = await Axios.get(`/api/products/categories`);\r\n      dispatch({ type: PRODUCT_CATEGORY_LIST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n      dispatch({ type:PRODUCT_CATEGORY_LIST_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\n\r\nexport const detailsProduct = (productId) => async (dispatch) =>{\r\n    dispatch({\r\n        type: PRODUCT_DETAILS_REQUEST, payload: productId });\r\n    try {\r\n        const { data } = await Axios.get(`/api/products/${productId}`);\r\n        dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({ \r\n            type: PRODUCT_DETAILS_FAIL, \r\n            payload: \r\n            error.response && error.response.data.message \r\n            ? error.response.data.message \r\n            : error.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const addProduct = (name, seller, image, category, price, brand, countInStock, rating, numReview, description) => async (dispatch) => {\r\n  dispatch({ type: ADD_PRODUCT_REQUEST, payload: { name, seller, image, category, price, brand, countInStock, rating, numReview, description } });\r\n  try {\r\n    const { data } = await Axios.post('/api/products/create', { name, seller, image, category, price, brand, countInStock, rating, numReview, description });\r\n    dispatch({ type: ADD_PRODUCT_SUCCESS, payload: data });\r\n    localStorage.setItem('productInfo', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ADD_PRODUCT_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n  dispatch({ type: PRODUCT_CREATE_REQUEST });\r\n  const {\r\n    userSignin: { userInfo },\r\n  } = getState();\r\n  try {\r\n    const { data } = await Axios.post(\r\n      '/api/products',\r\n      {},\r\n      {\r\n        headers: { Authorization: `Sanju ${userInfo.token}` },\r\n      }\r\n    );\r\n    dispatch({\r\n      type: PRODUCT_CREATE_SUCCESS,\r\n      payload: data.product,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: PRODUCT_CREATE_FAIL, payload: message });\r\n  }\r\n};\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n  dispatch({ type: PRODUCT_UPDATE_REQUEST, payload: product });\r\n  const {\r\n    userSignin: { userInfo },\r\n  } = getState();\r\n  try {\r\n    const { data } = await Axios.put(`/api/products/${product._id}`, product, {\r\n      headers: { Authorization: `Sanju ${userInfo.token}` },\r\n    });\r\n    dispatch({ type: PRODUCT_UPDATE_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: PRODUCT_UPDATE_FAIL, error: message });\r\n  }\r\n};\r\nexport const deleteProduct = (productId) => async (dispatch, getState) => {\r\n  dispatch({ type: PRODUCT_DELETE_REQUEST, payload: productId });\r\n  const {\r\n    userSignin: { userInfo },\r\n  } = getState();\r\n  try {\r\n    const { data } = Axios.delete(`/api/products/${productId}`, {\r\n      headers: { Authorization: `Bearer ${userInfo.token}` },\r\n    });\r\n    dispatch({ type: PRODUCT_DELETE_SUCCESS });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: PRODUCT_DELETE_FAIL, payload: message });\r\n  }\r\n};\r\n\r\nexport const createReview = (productId, review) => async (dispatch, getState) => {\r\n  dispatch({ type: PRODUCT_REVIEW_CREATE_REQUEST });\r\n  const {\r\n    userSignin: { userInfo },\r\n  } = getState();\r\n  try {\r\n    const { data } = await Axios.post(\r\n      `/api/products/${productId}/reviews`,\r\n      review,\r\n      {\r\n        headers: { Authorization: `Sanju ${userInfo.token}` },\r\n      }\r\n    );\r\n    dispatch({\r\n      type: PRODUCT_REVIEW_CREATE_SUCCESS,\r\n      payload: data.review,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: PRODUCT_REVIEW_CREATE_FAIL, payload: message });\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}