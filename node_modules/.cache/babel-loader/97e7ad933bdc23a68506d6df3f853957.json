{"ast":null,"code":"import Axios from 'axios';\nimport { TALUKA_LIST_REQUEST, TALUKA_LIST_SUCCESS, TALUKA_LIST_FAIL, ADD_TALUKA_FAIL, ADD_TALUKA_REQUEST, ADD_TALUKA_SUCCESS, TALUKA_DETAILS_FAIL, TALUKA_DETAILS_REQUEST, TALUKA_DETAILS_SUCCESS } from \"../constants/talukaConstants\";\nexport const talukalist = _ref => {\n  let {} = _ref;\n  return async dispatch => {\n    dispatch({\n      type: TALUKA_LIST_REQUEST\n    });\n\n    try {\n      const {\n        data\n      } = await Axios.get(`http://54.242.166.223:8080/api/taluka/all`);\n      dispatch({\n        type: TALUKA_LIST_SUCCESS,\n        payload: data\n      });\n    } catch (error) {\n      dispatch({\n        type: TALUKA_LIST_FAIL,\n        payload: error.message\n      });\n    }\n  };\n};\nexport const addTaluka = (Name, SID, DID) => async dispatch => {\n  dispatch({\n    type: ADD_TALUKA_REQUEST,\n    payload: {\n      Name,\n      SID,\n      DID\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post('http://54.242.166.223:8080/api/taluka/add', {\n      Name,\n      SID,\n      DID\n    });\n    dispatch({\n      type: ADD_TALUKA_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('stateAdd', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: ADD_TALUKA_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const detailsTaluka = talukaId => async dispatch => {\n  dispatch({\n    type: TALUKA_DETAILS_REQUEST,\n    payload: talukaId\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get(`http://54.242.166.223:8080/api/taluka/${talukaId}`);\n    dispatch({\n      type: TALUKA_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: TALUKA_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"names":["Axios","TALUKA_LIST_REQUEST","TALUKA_LIST_SUCCESS","TALUKA_LIST_FAIL","ADD_TALUKA_FAIL","ADD_TALUKA_REQUEST","ADD_TALUKA_SUCCESS","TALUKA_DETAILS_FAIL","TALUKA_DETAILS_REQUEST","TALUKA_DETAILS_SUCCESS","talukalist","dispatch","type","data","get","payload","error","message","addTaluka","Name","SID","DID","post","localStorage","setItem","JSON","stringify","response","detailsTaluka","talukaId"],"sources":["C:/Users/Sehat Box/Desktop/Web Node/MIS/client/src/actions/talukaActions.js"],"sourcesContent":["import Axios from 'axios';\r\nimport {\r\n  TALUKA_LIST_REQUEST, TALUKA_LIST_SUCCESS, TALUKA_LIST_FAIL,\r\n  ADD_TALUKA_FAIL, ADD_TALUKA_REQUEST, ADD_TALUKA_SUCCESS,\r\n  TALUKA_DETAILS_FAIL,TALUKA_DETAILS_REQUEST,TALUKA_DETAILS_SUCCESS\r\n } from \"../constants/talukaConstants\";\r\n\r\n export const talukalist = ({}) => async (dispatch) => {\r\n  dispatch({ type: TALUKA_LIST_REQUEST });\r\n  try {\r\n    const { data } = await Axios.get(\r\n      `http://54.242.166.223:8080/api/taluka/all`\r\n    );\r\n    dispatch({ type: TALUKA_LIST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: TALUKA_LIST_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\nexport const addTaluka = (Name, SID, DID) => async (dispatch) => {\r\n  dispatch({ type: ADD_TALUKA_REQUEST, payload: { Name, SID, DID } });\r\n  try {\r\n    const { data } = await Axios.post('http://54.242.166.223:8080/api/taluka/add', { Name, SID, DID });\r\n    dispatch({ type: ADD_TALUKA_SUCCESS, payload: data });\r\n    localStorage.setItem('stateAdd', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ADD_TALUKA_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n\r\nexport const detailsTaluka = (talukaId) => async (dispatch) =>{\r\n  dispatch({\r\n      type: TALUKA_DETAILS_REQUEST, payload: talukaId });\r\n  try {\r\n      const { data } = await Axios.get(`http://54.242.166.223:8080/api/taluka/${talukaId}`);\r\n      dispatch({ type: TALUKA_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n      dispatch({ \r\n          type: TALUKA_DETAILS_FAIL, \r\n          payload: \r\n          error.response && error.response.data.message \r\n          ? error.response.data.message \r\n          : error.message,\r\n      });\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,mBADF,EACuBC,mBADvB,EAC4CC,gBAD5C,EAEEC,eAFF,EAEmBC,kBAFnB,EAEuCC,kBAFvC,EAGEC,mBAHF,EAGsBC,sBAHtB,EAG6CC,sBAH7C,QAIQ,8BAJR;AAMC,OAAO,MAAMC,UAAU,GAAG;EAAA,IAAC,EAAD;EAAA,OAAQ,MAAOC,QAAP,IAAoB;IACrDA,QAAQ,CAAC;MAAEC,IAAI,EAAEX;IAAR,CAAD,CAAR;;IACA,IAAI;MACF,MAAM;QAAEY;MAAF,IAAW,MAAMb,KAAK,CAACc,GAAN,CACpB,2CADoB,CAAvB;MAGAH,QAAQ,CAAC;QAAEC,IAAI,EAAEV,mBAAR;QAA6Ba,OAAO,EAAEF;MAAtC,CAAD,CAAR;IACD,CALD,CAKE,OAAOG,KAAP,EAAc;MACdL,QAAQ,CAAC;QAAEC,IAAI,EAAET,gBAAR;QAA0BY,OAAO,EAAEC,KAAK,CAACC;MAAzC,CAAD,CAAR;IACD;EACF,CAV0B;AAAA,CAAnB;AAYR,OAAO,MAAMC,SAAS,GAAG,CAACC,IAAD,EAAOC,GAAP,EAAYC,GAAZ,KAAoB,MAAOV,QAAP,IAAoB;EAC/DA,QAAQ,CAAC;IAAEC,IAAI,EAAEP,kBAAR;IAA4BU,OAAO,EAAE;MAAEI,IAAF;MAAQC,GAAR;MAAaC;IAAb;EAArC,CAAD,CAAR;;EACA,IAAI;IACF,MAAM;MAAER;IAAF,IAAW,MAAMb,KAAK,CAACsB,IAAN,CAAW,2CAAX,EAAwD;MAAEH,IAAF;MAAQC,GAAR;MAAaC;IAAb,CAAxD,CAAvB;IACAV,QAAQ,CAAC;MAAEC,IAAI,EAAEN,kBAAR;MAA4BS,OAAO,EAAEF;IAArC,CAAD,CAAR;IACAU,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeb,IAAf,CAAjC;EACD,CAJD,CAIE,OAAOG,KAAP,EAAc;IACdL,QAAQ,CAAC;MACPC,IAAI,EAAER,eADC;MAEPW,OAAO,EACLC,KAAK,CAACW,QAAN,IAAkBX,KAAK,CAACW,QAAN,CAAed,IAAf,CAAoBI,OAAtC,GACID,KAAK,CAACW,QAAN,CAAed,IAAf,CAAoBI,OADxB,GAEID,KAAK,CAACC;IALL,CAAD,CAAR;EAOD;AACF,CAfM;AAkBP,OAAO,MAAMW,aAAa,GAAIC,QAAD,IAAc,MAAOlB,QAAP,IAAmB;EAC5DA,QAAQ,CAAC;IACLC,IAAI,EAAEJ,sBADD;IACyBO,OAAO,EAAEc;EADlC,CAAD,CAAR;;EAEA,IAAI;IACA,MAAM;MAAEhB;IAAF,IAAW,MAAMb,KAAK,CAACc,GAAN,CAAW,yCAAwCe,QAAS,EAA5D,CAAvB;IACAlB,QAAQ,CAAC;MAAEC,IAAI,EAAEH,sBAAR;MAAgCM,OAAO,EAAEF;IAAzC,CAAD,CAAR;EACH,CAHD,CAGE,OAAOG,KAAP,EAAc;IACZL,QAAQ,CAAC;MACLC,IAAI,EAAEL,mBADD;MAELQ,OAAO,EACPC,KAAK,CAACW,QAAN,IAAkBX,KAAK,CAACW,QAAN,CAAed,IAAf,CAAoBI,OAAtC,GACED,KAAK,CAACW,QAAN,CAAed,IAAf,CAAoBI,OADtB,GAEED,KAAK,CAACC;IALH,CAAD,CAAR;EAOH;AACF,CAfM"},"metadata":{},"sourceType":"module"}