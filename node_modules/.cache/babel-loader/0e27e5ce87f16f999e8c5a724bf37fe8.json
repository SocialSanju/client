{"ast":null,"code":"import Axios from 'axios';\nimport { ACCOUNT_GROUP_REQUEST, ACCOUNT_GROUP_SUCCESS, ACCOUNT_GROUP_FAIL, ADD_ACCOUNT_FAIL, ADD_ACCOUNT_REQUEST, ADD_ACCOUNT_SUCCESS, ACCOUNT_GROUP_LIST_FAIL, ACCOUNT_GROUP_LIST_REQUEST, ACCOUNT_GROUP_LIST_SUCCESS } from \"../constants/accountConstants\";\nexport const grouplist = ({}) => async dispatch => {\n  dispatch({\n    type: ACCOUNT_GROUP_LIST_REQUEST\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/accountGroup/list`);\n    dispatch({\n      type: ACCOUNT_GROUP_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ACCOUNT_GROUP_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\nexport const group_details = (ac_group_title, Sub_Group) => async dispatch => {\n  dispatch({\n    type: ACCOUNT_GROUP_REQUEST,\n    payload: {\n      ac_group_title,\n      Sub_Group\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post('/api/accountGroup/', {\n      ac_group_title,\n      Sub_Group\n    });\n    dispatch({\n      type: ACCOUNT_GROUP_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('account_groupInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: ACCOUNT_GROUP_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const addAccount = (Name, Mobile_No) => async dispatch => {\n  dispatch({\n    type: ADD_ACCOUNT_REQUEST,\n    payload: {\n      Name,\n      Mobile_No\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post('/api/account/', {\n      Name,\n      Mobile_No\n    });\n    dispatch({\n      type: ADD_ACCOUNT_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('accountAdd', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: ADD_ACCOUNT_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/Sehat Box/Documents/GitHub/client/src/actions/accountActions.js"],"names":["Axios","ACCOUNT_GROUP_REQUEST","ACCOUNT_GROUP_SUCCESS","ACCOUNT_GROUP_FAIL","ADD_ACCOUNT_FAIL","ADD_ACCOUNT_REQUEST","ADD_ACCOUNT_SUCCESS","ACCOUNT_GROUP_LIST_FAIL","ACCOUNT_GROUP_LIST_REQUEST","ACCOUNT_GROUP_LIST_SUCCESS","grouplist","dispatch","type","data","get","payload","error","message","group_details","ac_group_title","Sub_Group","post","localStorage","setItem","JSON","stringify","response","addAccount","Name","Mobile_No"],"mappings":"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","sourcesContent":["import Axios from 'axios';\r\nimport {\r\n  ACCOUNT_GROUP_REQUEST, ACCOUNT_GROUP_SUCCESS, ACCOUNT_GROUP_FAIL,\r\n  ADD_ACCOUNT_FAIL, ADD_ACCOUNT_REQUEST, ADD_ACCOUNT_SUCCESS,\r\n  ACCOUNT_GROUP_LIST_FAIL, ACCOUNT_GROUP_LIST_REQUEST, ACCOUNT_GROUP_LIST_SUCCESS\r\n } from \"../constants/accountConstants\";\r\n\r\n export const grouplist = ({}) => async (dispatch) => {\r\n  dispatch({ type: ACCOUNT_GROUP_LIST_REQUEST });\r\n  try {\r\n    const { data } = await Axios.get(\r\n      `/api/accountGroup/list`\r\n    );\r\n    dispatch({ type: ACCOUNT_GROUP_LIST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: ACCOUNT_GROUP_LIST_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\n\r\nexport const group_details = (ac_group_title, Sub_Group) => async (dispatch) => {\r\n  dispatch({ type: ACCOUNT_GROUP_REQUEST, payload: { ac_group_title, Sub_Group } });\r\n  try {\r\n    const { data } = await Axios.post('/api/accountGroup/', { ac_group_title, Sub_Group });\r\n    dispatch({ type: ACCOUNT_GROUP_SUCCESS, payload: data });\r\n    localStorage.setItem('account_groupInfo', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ACCOUNT_GROUP_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const addAccount = (Name, Mobile_No) => async (dispatch) => {\r\n  dispatch({ type: ADD_ACCOUNT_REQUEST, payload: { Name, Mobile_No } });\r\n  try {\r\n    const { data } = await Axios.post('/api/account/', { Name, Mobile_No });\r\n    dispatch({ type: ADD_ACCOUNT_SUCCESS, payload: data });\r\n    localStorage.setItem('accountAdd', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ADD_ACCOUNT_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}