{"ast":null,"code":"import Axios from 'axios';\nimport { CART_EMPTY } from '../constants/cartConstants';\nimport { ORDER_CREATE_REQUEST, ORDER_CREATE_FAIL, ORDER_CREATE_SUCCESS, ORDER_CREATE_RESET, ORDER_DETAILS_REQUEST, ORDER_DETAILS_FAIL, ORDER_DETAILS_SUCCESS, ORDER_PAY_REQUEST, ORDER_PAY_FAIL, ORDER_PAY_SUCCESS, ORDER_MINE_LIST_REQUEST, ORDER_MINE_LIST_SUCCESS, ORDER_MINE_LIST_FAIL, ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_LIST_FAIL, ORDER_DELETE_REQUEST, ORDER_DELETE_SUCCESS, ORDER_DELETE_FAIL, ORDER_SUMMARY_REQUEST, ORDER_SUMMARY_SUCCESS, ORDER_SUMMARY_FAIL } from '../constants/orderContants';\nexport const createOrder = paymentId => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_CREATE_REQUEST,\n    payload: paymentId\n  });\n\n  try {\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await Axios.post(`api/orders/capture/${paymentId}`, {\n      headers: {\n        Authorization: `Sanju ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data.paymentId\n    });\n    dispatch({\n      type: CART_EMPTY\n    });\n    localStorage.removeItem('cartItems');\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const detailsOrder = orderId => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_DETAILS_REQUEST,\n    payload: orderId\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.get(`api/orders/order`, {\n      headers: {\n        Authorization: `Sanju ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: message\n    });\n  }\n};\nexport const payOrder = (order, paymentResult) => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_PAY_REQUEST,\n    payload: {\n      order,\n      paymentResult\n    }\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = Axios.put(`/api/orders/${order.id}/pay`, paymentResult, {\n      headers: {\n        Authorization: `Sanju ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: message\n    });\n  }\n};\nexport const listOrderMine = () => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_MINE_LIST_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.get('/api/orders/mine', {\n      headers: {\n        Authorization: `Sanju ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_MINE_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: ORDER_MINE_LIST_FAIL,\n      payload: message\n    });\n  }\n};\nexport const listOrders = ({\n  seller = ''\n}) => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_LIST_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/orders?seller=${seller}`, {\n      headers: {\n        Authorization: `Sanju ${userInfo.token}`\n      }\n    });\n    console.log(data);\n    dispatch({\n      type: ORDER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: ORDER_LIST_FAIL,\n      payload: message\n    });\n  }\n};\nexport const deleteOrder = orderId => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_DELETE_REQUEST,\n    payload: orderId\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = Axios.delete(`/api/orders/${orderId}`, {\n      headers: {\n        Authorization: `Sanju ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_DELETE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: ORDER_DELETE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const summaryOrder = () => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_SUMMARY_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.get('/api/orders/summary', {\n      headers: {\n        Authorization: `Sanju ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_SUMMARY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/DELL/Desktop/amazon/frontend/src/actions/orderActions.js"],"names":["Axios","CART_EMPTY","ORDER_CREATE_REQUEST","ORDER_CREATE_FAIL","ORDER_CREATE_SUCCESS","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_FAIL","ORDER_DETAILS_SUCCESS","ORDER_PAY_REQUEST","ORDER_PAY_FAIL","ORDER_PAY_SUCCESS","ORDER_MINE_LIST_REQUEST","ORDER_MINE_LIST_SUCCESS","ORDER_MINE_LIST_FAIL","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELETE_REQUEST","ORDER_DELETE_SUCCESS","ORDER_DELETE_FAIL","ORDER_SUMMARY_REQUEST","ORDER_SUMMARY_SUCCESS","ORDER_SUMMARY_FAIL","createOrder","paymentId","dispatch","getState","type","payload","userSignin","userInfo","data","post","headers","Authorization","token","localStorage","removeItem","error","response","message","detailsOrder","orderId","get","payOrder","order","paymentResult","put","id","listOrderMine","listOrders","seller","console","log","deleteOrder","delete","summaryOrder"],"mappings":"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","sourcesContent":["import Axios from 'axios';\r\nimport { CART_EMPTY } from '../constants/cartConstants';\r\nimport { ORDER_CREATE_REQUEST, ORDER_CREATE_FAIL, ORDER_CREATE_SUCCESS, ORDER_CREATE_RESET, \r\n    ORDER_DETAILS_REQUEST, ORDER_DETAILS_FAIL, ORDER_DETAILS_SUCCESS, \r\n    ORDER_PAY_REQUEST, ORDER_PAY_FAIL, ORDER_PAY_SUCCESS, \r\n    ORDER_MINE_LIST_REQUEST, ORDER_MINE_LIST_SUCCESS, ORDER_MINE_LIST_FAIL,\r\n    ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_LIST_FAIL,\r\n    ORDER_DELETE_REQUEST,ORDER_DELETE_SUCCESS, ORDER_DELETE_FAIL,\r\n    ORDER_SUMMARY_REQUEST, ORDER_SUMMARY_SUCCESS,ORDER_SUMMARY_FAIL} from '../constants/orderContants';\r\n\r\n    export const createOrder = (paymentId) => async (dispatch, getState) => {\r\n      dispatch({ type: ORDER_CREATE_REQUEST, payload: paymentId });\r\n      try {\r\n        const {\r\n          userSignin: { userInfo },\r\n        } = getState();\r\n        const { data } = await Axios.post(`api/orders/capture/${paymentId}`, {\r\n          headers: {\r\n            Authorization: `Sanju ${userInfo.token}`,\r\n          },\r\n        });\r\n        dispatch({ type: ORDER_CREATE_SUCCESS, payload: data.paymentId });\r\n        dispatch({ type: CART_EMPTY });\r\n        localStorage.removeItem('cartItems');\r\n      } catch (error) {\r\n        dispatch({\r\n          type: ORDER_CREATE_FAIL,\r\n          payload:\r\n            error.response && error.response.data.message\r\n              ? error.response.data.message\r\n              : error.message,\r\n        });\r\n      }\r\n    };\r\n\r\nexport const detailsOrder = (orderId) => async (dispatch, getState) => {\r\n    dispatch ({ type: ORDER_DETAILS_REQUEST, payload: orderId });\r\n    const { \r\n        userSignin: { userInfo },\r\n     } = getState();\r\n    try {\r\n        const { data } = await Axios.get(`api/orders/order`, {\r\n            headers: { Authorization: `Sanju ${userInfo.token}`, },\r\n        });\r\n        dispatch ({ type: ORDER_DETAILS_SUCCESS, payload: data });\r\n    }\r\n    catch (error) {\r\n        const message = \r\n            error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message;\r\n        dispatch({ type: ORDER_DETAILS_FAIL, payload: message });\r\n    }\r\n};\r\n\r\nexport const payOrder = (order, paymentResult) => async (dispatch, getState) => {\r\n    dispatch({ type: ORDER_PAY_REQUEST, payload: { order, paymentResult } });\r\n    const {userSignin: { userInfo },} = getState();\r\n    try {\r\n        const { data } = Axios.put(`/api/orders/${order.id}/pay`, paymentResult, {\r\n            headers: { Authorization: `Sanju ${userInfo.token}`, },\r\n        });\r\n        dispatch({ type: ORDER_PAY_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        const message = \r\n        error.response && error.response.data.message \r\n        ? error.response.data.message \r\n        : error.message;\r\n        dispatch({type: ORDER_PAY_FAIL, payload: message});\r\n    }\r\n};\r\n\r\nexport const listOrderMine = () => async (dispatch, getState) => {\r\n    dispatch({ type: ORDER_MINE_LIST_REQUEST });\r\n    const {\r\n      userSignin: { userInfo },\r\n    } = getState();\r\n    try {\r\n      const { data } = await Axios.get('/api/orders/mine', {\r\n        headers: {\r\n          Authorization: `Sanju ${userInfo.token}`,\r\n        },\r\n      });\r\n      dispatch({ type: ORDER_MINE_LIST_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      dispatch({ type: ORDER_MINE_LIST_FAIL, payload: message });\r\n    }\r\n  };\r\n\r\n  export const listOrders = ({ seller = '' }) => async (dispatch, getState) => {\r\n    dispatch({ type: ORDER_LIST_REQUEST });\r\n    const {\r\n      userSignin: { userInfo },\r\n    } = getState();\r\n    try {\r\n      const { data } = await Axios.get(`/api/orders?seller=${seller}`, {\r\n        headers: { Authorization: `Sanju ${userInfo.token}` },\r\n      });\r\n      console.log(data);\r\n      dispatch({ type: ORDER_LIST_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      dispatch({ type: ORDER_LIST_FAIL, payload: message });\r\n    }\r\n  };\r\n\r\n  export const deleteOrder = (orderId) => async (dispatch, getState) => {\r\n    dispatch({ type: ORDER_DELETE_REQUEST, payload: orderId });\r\n    const {\r\n      userSignin: { userInfo },\r\n    } = getState();\r\n    try {\r\n      const { data } = Axios.delete(`/api/orders/${orderId}`, {\r\n        headers: { Authorization: `Sanju ${userInfo.token}` },\r\n      });\r\n      dispatch({ type: ORDER_DELETE_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      dispatch({ type: ORDER_DELETE_FAIL, payload: message });\r\n    }\r\n  };\r\n\r\n  export const summaryOrder = () => async (dispatch, getState) => {\r\n    dispatch({ type: ORDER_SUMMARY_REQUEST });\r\n    const {\r\n      userSignin: { userInfo },\r\n    } = getState();\r\n    try {\r\n      const { data } = await Axios.get('/api/orders/summary', {\r\n        headers: { Authorization: `Sanju ${userInfo.token}` },\r\n      });\r\n      dispatch({ type: ORDER_SUMMARY_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: ORDER_CREATE_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n  \r\n\r\n \r\n  "]},"metadata":{},"sourceType":"module"}