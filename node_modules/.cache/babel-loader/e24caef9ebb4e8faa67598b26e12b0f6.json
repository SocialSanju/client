{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\amazon\\\\frontend\\\\src\\\\screens\\\\ShippingAddressScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport CheckoutSteps from \"../components/CheckoutSteps\";\nimport { saveShippingAddress } from \"../actions/cartActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ShippingAddressScreen(props) {\n  _s();\n\n  const userSignin = useSelector(state => state.userSignin);\n  const {\n    userInfo\n  } = userSignin;\n  const cart = useSelector(state => state.cart);\n  const {\n    shippingAddress\n  } = cart;\n  const [lat, setLat] = useState(shippingAddress.lat);\n  const [lng, setLng] = useState(shippingAddress.lng);\n  const userAddressMap = useSelector(state => state.userAddressMap);\n  const {\n    address: addressMap\n  } = userAddressMap;\n\n  if (!userInfo) {\n    props.history.push('/signin');\n  }\n\n  const [fullName, setFullName] = useState(shippingAddress.fullName);\n  const [address, setAddress] = useState(shippingAddress.address);\n  const [city, setCity] = useState(shippingAddress.city);\n  const [postelCode, setPostelCode] = useState(shippingAddress.postelCode);\n  const [country, setCountry] = useState(shippingAddress.country);\n  const dispatch = useDispatch();\n\n  const submitHandler = e => {\n    e.preventDefault();\n    const newlat = addressMap ? addressMap.lat : lat;\n    const newlng = addressMap ? addressMap.lng : lng;\n\n    if (addressMap) {\n      setLat(addressMap.lat);\n      setLng(addressMap.lng);\n    }\n\n    let moveOn = true;\n\n    if (!newlat || !newlng) {\n      moveOn = window.confirm('You did not set your location on map. Continue?');\n    }\n\n    if (moveOn) {\n      dispatch(saveShippingAddress({\n        fullName,\n        address,\n        city,\n        postelCode,\n        country,\n        lat: newlat,\n        lng: newlng\n      }));\n      props.history.push('/payment');\n    }\n  };\n\n  const chooseOnMap = () => {\n    dispatch(saveShippingAddress({\n      fullName,\n      address,\n      city,\n      postelCode,\n      country,\n      lat,\n      lng\n    }));\n    props.history.push('/map');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(CheckoutSteps, {\n      step1: true,\n      step2: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Shipping Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"fullName\",\n          children: \"Full Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"fullName\",\n          placeholder: \"Enter Full Name\",\n          value: fullName,\n          onChange: e => setFullName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"address\",\n          children: \"Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"address\",\n          placeholder: \"Enter Address\",\n          value: address,\n          onChange: e => setAddress(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"city\",\n          children: \"City\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"city\",\n          placeholder: \"Enter City\",\n          value: city,\n          onChange: e => setCity(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"postelCode\",\n          children: \"Postel Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"postelCode\",\n          placeholder: \"Enter postel Code\",\n          value: postelCode,\n          onChange: e => setPostelCode(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"country\",\n          children: \"Country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"country\",\n          placeholder: \"Enter country\",\n          value: country,\n          onChange: e => setCountry(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"chooseOnMap\",\n          children: \"Location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: chooseOnMap,\n          children: \"Choose On Map\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"primary\",\n          type: \"submit\",\n          children: \"Continue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ShippingAddressScreen, \"sqbtDIBLa+K2iihqhq6gbhhN840=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = ShippingAddressScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShippingAddressScreen\");","map":{"version":3,"sources":["C:/Users/DELL/Desktop/amazon/frontend/src/screens/ShippingAddressScreen.js"],"names":["React","useState","useDispatch","useSelector","CheckoutSteps","saveShippingAddress","ShippingAddressScreen","props","userSignin","state","userInfo","cart","shippingAddress","lat","setLat","lng","setLng","userAddressMap","address","addressMap","history","push","fullName","setFullName","setAddress","city","setCity","postelCode","setPostelCode","country","setCountry","dispatch","submitHandler","e","preventDefault","newlat","newlng","moveOn","window","confirm","chooseOnMap","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport { saveShippingAddress } from \"../actions/cartActions\";\r\n\r\nexport default function ShippingAddressScreen(props) {\r\n   \r\n    const userSignin = useSelector((state) => state.userSignin);\r\n    const { userInfo } = userSignin;\r\n\r\n    const cart = useSelector((state) => state.cart);\r\n    const { shippingAddress } = cart;\r\n\r\n    const [lat, setLat] = useState(shippingAddress.lat);\r\n    const [lng, setLng] = useState(shippingAddress.lng);\r\n    \r\n    const userAddressMap = useSelector((state) => state.userAddressMap);\r\n    const { address: addressMap } = userAddressMap;\r\n\r\n    if(!userInfo) {\r\n        props.history.push('/signin');\r\n    }\r\n    const [fullName, setFullName] = useState(shippingAddress.fullName);\r\n    const [address, setAddress] = useState(shippingAddress.address);\r\n    const [city, setCity] = useState(shippingAddress.city);\r\n    const [postelCode, setPostelCode] = useState(shippingAddress.postelCode);\r\n    const [country, setCountry] = useState(shippingAddress.country);\r\n    const dispatch = useDispatch();\r\n    const submitHandler =(e) => {\r\n        e.preventDefault();\r\n        const newlat = addressMap ? addressMap.lat : lat;\r\n        const newlng = addressMap ? addressMap.lng : lng;\r\n        if(addressMap) {\r\n            setLat(addressMap.lat);\r\n            setLng(addressMap.lng);\r\n        }\r\n        let moveOn = true;\r\n        if(!newlat || !newlng) {\r\n            moveOn = window.confirm('You did not set your location on map. Continue?');\r\n        }\r\n        if(moveOn) {\r\n            dispatch(\r\n                saveShippingAddress({fullName, address, city, postelCode, country, lat: newlat, lng: newlng})\r\n            );\r\n            props.history.push('/payment');\r\n        }       \r\n    };\r\n\r\n    const chooseOnMap = () => {\r\n        dispatch(saveShippingAddress({\r\n            fullName, address, city, postelCode, country, lat, lng\r\n        }));\r\n        props.history.push('/map');\r\n    };\r\n\r\n    return(\r\n        <div>\r\n            <CheckoutSteps step1 step2></CheckoutSteps>\r\n            <form className=\"form\" onSubmit={submitHandler}>\r\n                <div>\r\n                    <h1>Shipping Address</h1>\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"fullName\">Full Name</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        id=\"fullName\" \r\n                        placeholder=\"Enter Full Name\" \r\n                        value={fullName} \r\n                        onChange={(e) => setFullName(e.target.value)} \r\n                        required\r\n                    ></input>\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"address\">Address</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        id=\"address\" \r\n                        placeholder=\"Enter Address\" \r\n                        value={address} \r\n                        onChange={(e) => setAddress(e.target.value)} \r\n                        required\r\n                    ></input>\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"city\">City</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        id=\"city\" \r\n                        placeholder=\"Enter City\" \r\n                        value={city} \r\n                        onChange={(e) => setCity(e.target.value)} \r\n                        required\r\n                    ></input>\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"postelCode\">Postel Code</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        id=\"postelCode\" \r\n                        placeholder=\"Enter postel Code\" \r\n                        value={postelCode} \r\n                        onChange={(e) => setPostelCode(e.target.value)} \r\n                        required\r\n                    ></input>\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"country\">Country</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        id=\"country\" \r\n                        placeholder=\"Enter country\" \r\n                        value={country} \r\n                        onChange={(e) => setCountry(e.target.value)} \r\n                        required\r\n                    ></input>\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"chooseOnMap\">Location</label>\r\n                    <button type=\"button\" onClick={chooseOnMap}>\r\n                        Choose On Map\r\n                    </button>\r\n                </div>\r\n                <div>\r\n                    <label />\r\n                    <button className=\"primary\" type=\"submit\">\r\n                        Continue\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}