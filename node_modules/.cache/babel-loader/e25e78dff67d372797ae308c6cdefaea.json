{"ast":null,"code":"import { createStore, compose, applyMiddleware, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport { cartReducer } from './reducers/cartReducers';\nimport { orderCreateReducer, orderDetailsReducer, orderMineListReducer, orderPayReducer } from './reducers/orderReducers';\nimport { productCreateReducer, productDetailsReducer, productListReducer, productUpdateReducer } from './reducers/productReducers';\nimport { userDetailsReducer, userSigninReducer, userUpdateProfileReducer } from './reducers/userReducers';\nimport { userRegisterReducer } from './reducers/userReducers';\nconst initialState = {\n  userSignin: {\n    userInfo: localStorage.getItem('userinfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\n  },\n  cart: {\n    cartItems: localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [],\n    shippingAddress: localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {},\n    paymentMethod: 'PayPal'\n  }\n};\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userSignin: userSigninReducer,\n  userRegister: userRegisterReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderMineList: orderMineListReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer\n});\nconst composeEnhancer = window._REDUX_DEVTOOLS_EXTENSION_COMPOSE_ || compose;\nconst store = createStore(reducer, initialState, composeEnhancer(applyMiddleware(thunk)));\nexport default store;","map":{"version":3,"sources":["C:/Users/DELL/Desktop/amazon/frontend/src/store.js"],"names":["createStore","compose","applyMiddleware","combineReducers","thunk","cartReducer","orderCreateReducer","orderDetailsReducer","orderMineListReducer","orderPayReducer","productCreateReducer","productDetailsReducer","productListReducer","productUpdateReducer","userDetailsReducer","userSigninReducer","userUpdateProfileReducer","userRegisterReducer","initialState","userSignin","userInfo","localStorage","getItem","JSON","parse","cart","cartItems","shippingAddress","paymentMethod","reducer","productList","productDetails","userRegister","orderCreate","orderDetails","orderPay","orderMineList","userDetails","userUpdateProfile","productCreate","productUpdate","composeEnhancer","window","_REDUX_DEVTOOLS_EXTENSION_COMPOSE_","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,OAAtB,EAA+BC,eAA/B,EAAgDC,eAAhD,QAAuE,OAAvE;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,kBAAT,EAA6BC,mBAA7B,EAAkDC,oBAAlD,EAAwEC,eAAxE,QAA+F,0BAA/F;AACA,SAASC,oBAAT,EAA+BC,qBAA/B,EAAsDC,kBAAtD,EAA0EC,oBAA1E,QAAsG,4BAAtG;AACA,SAASC,kBAAT,EAA6BC,iBAA7B,EAAgDC,wBAAhD,QAAgF,yBAAhF;AACA,SAASC,mBAAT,QAAoC,yBAApC;AAGA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,UAAU,EAAE;AACRC,IAAAA,QAAQ,EAAEC,YAAY,CAACC,OAAb,CAAqB,UAArB,IACRC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADQ,GAER;AAHM,GADK;AAMjBG,EAAAA,IAAI,EAAE;AACFC,IAAAA,SAAS,EAAEL,YAAY,CAACC,OAAb,CAAqB,WAArB,IACTC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADS,GAET,EAHA;AAIFK,IAAAA,eAAe,EAAEN,YAAY,CAACC,OAAb,CAAqB,iBAArB,IACfC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CADe,GAEf,EANA;AAOFM,IAAAA,aAAa,EAAE;AAPb;AANW,CAArB;AAgBA,MAAMC,OAAO,GAAG1B,eAAe,CAAC;AAC5B2B,EAAAA,WAAW,EAAElB,kBADe;AAE5BmB,EAAAA,cAAc,EAAEpB,qBAFY;AAG5Bc,EAAAA,IAAI,EAAEpB,WAHsB;AAI5Bc,EAAAA,UAAU,EAAEJ,iBAJgB;AAK5BiB,EAAAA,YAAY,EAAEf,mBALc;AAM5BgB,EAAAA,WAAW,EAAE3B,kBANe;AAO5B4B,EAAAA,YAAY,EAAE3B,mBAPc;AAQ5B4B,EAAAA,QAAQ,EAAE1B,eARkB;AAS5B2B,EAAAA,aAAa,EAAE5B,oBATa;AAU5B6B,EAAAA,WAAW,EAAEvB,kBAVe;AAW5BwB,EAAAA,iBAAiB,EAAEtB,wBAXS;AAY5BuB,EAAAA,aAAa,EAAE7B,oBAZa;AAa5B8B,EAAAA,aAAa,EAAE3B;AAba,CAAD,CAA/B;AAeA,MAAM4B,eAAe,GAAGC,MAAM,CAACC,kCAAP,IAA6C1C,OAArE;AACA,MAAM2C,KAAK,GAAG5C,WAAW,CACrB6B,OADqB,EAErBX,YAFqB,EAGrBuB,eAAe,CAACvC,eAAe,CAACE,KAAD,CAAhB,CAHM,CAAzB;AAMA,eAAewC,KAAf","sourcesContent":["import { createStore, compose, applyMiddleware, combineReducers } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { cartReducer } from './reducers/cartReducers';\r\nimport { orderCreateReducer, orderDetailsReducer, orderMineListReducer, orderPayReducer } from './reducers/orderReducers';\r\nimport { productCreateReducer, productDetailsReducer, productListReducer, productUpdateReducer } from './reducers/productReducers';\r\nimport { userDetailsReducer, userSigninReducer, userUpdateProfileReducer } from './reducers/userReducers';\r\nimport { userRegisterReducer } from './reducers/userReducers';\r\n\r\n\r\nconst initialState = {\r\n    userSignin: {\r\n        userInfo: localStorage.getItem('userinfo')\r\n        ? JSON.parse(localStorage.getItem('userInfo'))\r\n        : null,\r\n    },\r\n    cart: {\r\n        cartItems: localStorage.getItem('cartItems')\r\n        ? JSON.parse(localStorage.getItem('cartItems'))\r\n        : [],\r\n        shippingAddress: localStorage.getItem('shippingAddress') \r\n        ? JSON.parse(localStorage.getItem('shippingAddress'))\r\n        : {},\r\n        paymentMethod: 'PayPal',\r\n    },\r\n};\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    cart: cartReducer,\r\n    userSignin: userSigninReducer,\r\n    userRegister: userRegisterReducer,\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderMineList: orderMineListReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdate: productUpdateReducer,\r\n});\r\nconst composeEnhancer = window._REDUX_DEVTOOLS_EXTENSION_COMPOSE_ || compose;\r\nconst store = createStore(\r\n    reducer, \r\n    initialState, \r\n    composeEnhancer(applyMiddleware(thunk))\r\n );\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}