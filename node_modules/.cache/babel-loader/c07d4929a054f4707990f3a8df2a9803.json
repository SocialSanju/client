{"ast":null,"code":"import Axios from 'axios';\nimport { CART_EMPTY } from '../constants/cartConstants';\nimport { ORDER_CREATE_REQUEST, ORDER_CREATE_FAIL, ORDER_CREATE_SUCCESS, ORDER_CREATE_RESET, ORDER_DETAILS_REQUEST, ORDER_DETAILS_FAIL, ORDER_DETAILS_SUCCESS, ORDER_PAY_REQUEST, ORDER_PAY_FAIL, ORDER_PAY_SUCCESS, ORDER_MINE_LIST_REQUEST, ORDER_MINE_LIST_SUCCESS, ORDER_MINE_LIST_FAIL, ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_LIST_FAIL } from '../constants/orderContants';\nexport const createOrder = order => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_CREATE_REQUEST,\n    payload: order\n  });\n\n  try {\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await Axios.post('/api/orders', order, {\n      headers: {\n        Authorization: `Sanju ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data.order\n    });\n    dispatch({\n      type: CART_EMPTY\n    });\n    localStorage.removeItem('cartItems');\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const detailsOrder = orderId => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_DETAILS_REQUEST,\n    payload: orderId\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/orders/${orderId}`, {\n      headers: {\n        Authorization: `Sanju ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: message\n    });\n  }\n};\nexport const payOrder = (order, paymentResult) => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_PAY_REQUEST,\n    payload: {\n      order,\n      paymentResult\n    }\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = Axios.put(`/api/orders/${order.id}/pay`, paymentResult, {\n      headers: {\n        Authorization: `Sanju ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: message\n    });\n  }\n};\nexport const listOrderMine = () => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_MINE_LIST_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.get('/api/orders/mine', {\n      headers: {\n        Authorization: `Sanju ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_MINE_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: ORDER_MINE_LIST_FAIL,\n      payload: message\n    });\n  }\n};\nexport const listOrders = () => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_LIST_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/orders`, {\n      headers: {\n        Authorization: `Sanju ${userInfo.token}`\n      }\n    });\n    console.log(data);\n    dispatch({\n      type: ORDER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: ORDER_LIST_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/DELL/Desktop/amazon/frontend/src/actions/orderActions.js"],"names":["Axios","CART_EMPTY","ORDER_CREATE_REQUEST","ORDER_CREATE_FAIL","ORDER_CREATE_SUCCESS","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_FAIL","ORDER_DETAILS_SUCCESS","ORDER_PAY_REQUEST","ORDER_PAY_FAIL","ORDER_PAY_SUCCESS","ORDER_MINE_LIST_REQUEST","ORDER_MINE_LIST_SUCCESS","ORDER_MINE_LIST_FAIL","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","createOrder","order","dispatch","getState","type","payload","userSignin","userInfo","data","post","headers","Authorization","token","localStorage","removeItem","error","response","message","detailsOrder","orderId","get","payOrder","paymentResult","put","id","listOrderMine","listOrders","console","log"],"mappings":"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","sourcesContent":["import Axios from 'axios';\r\nimport { CART_EMPTY } from '../constants/cartConstants';\r\nimport { ORDER_CREATE_REQUEST, ORDER_CREATE_FAIL, ORDER_CREATE_SUCCESS, ORDER_CREATE_RESET, \r\n    ORDER_DETAILS_REQUEST, ORDER_DETAILS_FAIL, ORDER_DETAILS_SUCCESS, \r\n    ORDER_PAY_REQUEST, ORDER_PAY_FAIL, ORDER_PAY_SUCCESS, \r\n    ORDER_MINE_LIST_REQUEST, ORDER_MINE_LIST_SUCCESS, ORDER_MINE_LIST_FAIL,\r\n    ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_LIST_FAIL,\r\n  } from '../constants/orderContants';\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    dispatch({ type: ORDER_CREATE_REQUEST, payload: order });\r\n    try {\r\n        const {userSignin: { userInfo }} = getState();\r\n        const {data} = await Axios.post('/api/orders', order, {\r\n            headers: {\r\n                Authorization: `Sanju ${userInfo.token}`,\r\n            },\r\n        });\r\n        dispatch({ type: ORDER_CREATE_SUCCESS, payload: data.order });\r\n        dispatch({ type: CART_EMPTY });\r\n        localStorage.removeItem('cartItems');\r\n    } catch (error) {\r\n        dispatch({ type: ORDER_CREATE_FAIL, payload: error.response && error.response.data.message ?\r\n            error.response.data.message\r\n        : error.message,\r\n    });\r\n    }\r\n};\r\n\r\nexport const detailsOrder = (orderId) => async (dispatch, getState) => {\r\n    dispatch ({ type: ORDER_DETAILS_REQUEST, payload: orderId });\r\n    const { \r\n        userSignin: { userInfo },\r\n     } = getState();\r\n    try {\r\n        const { data } = await Axios.get(`/api/orders/${orderId}`, {\r\n            headers: { Authorization: `Sanju ${userInfo.token}`, },\r\n        });\r\n        dispatch ({ type: ORDER_DETAILS_SUCCESS, payload: data });\r\n    }\r\n    catch (error) {\r\n        const message = \r\n            error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message;\r\n        dispatch({ type: ORDER_DETAILS_FAIL, payload: message });\r\n    }\r\n};\r\n\r\nexport const payOrder = (order, paymentResult) => async (dispatch, getState) => {\r\n    dispatch({ type: ORDER_PAY_REQUEST, payload: { order, paymentResult } });\r\n    const {userSignin: { userInfo },} = getState();\r\n    try {\r\n        const { data } = Axios.put(`/api/orders/${order.id}/pay`, paymentResult, {\r\n            headers: { Authorization: `Sanju ${userInfo.token}`, },\r\n        });\r\n        dispatch({ type: ORDER_PAY_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        const message = \r\n        error.response && error.response.data.message \r\n        ? error.response.data.message \r\n        : error.message;\r\n        dispatch({type: ORDER_PAY_FAIL, payload: message});\r\n    }\r\n};\r\n\r\nexport const listOrderMine = () => async (dispatch, getState) => {\r\n    dispatch({ type: ORDER_MINE_LIST_REQUEST });\r\n    const {\r\n      userSignin: { userInfo },\r\n    } = getState();\r\n    try {\r\n      const { data } = await Axios.get('/api/orders/mine', {\r\n        headers: {\r\n          Authorization: `Sanju ${userInfo.token}`,\r\n        },\r\n      });\r\n      dispatch({ type: ORDER_MINE_LIST_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      dispatch({ type: ORDER_MINE_LIST_FAIL, payload: message });\r\n    }\r\n  };\r\n\r\n  export const listOrders = () => async (dispatch, getState) => {\r\n    dispatch({ type: ORDER_LIST_REQUEST });\r\n    const {\r\n      userSignin: { userInfo },\r\n    } = getState();\r\n    try {\r\n      const { data } = await Axios.get(`/api/orders`, {\r\n        headers: { Authorization: `Sanju ${userInfo.token}` },\r\n      });\r\n      console.log(data);\r\n      dispatch({ type: ORDER_LIST_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      dispatch({ type: ORDER_LIST_FAIL, payload: message });\r\n    }\r\n  };\r\n\r\n \r\n  "]},"metadata":{},"sourceType":"module"}