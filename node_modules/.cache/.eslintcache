[{"G:\\Data Desktop\\amazon\\frontend\\src\\index.js":"1","G:\\Data Desktop\\amazon\\frontend\\src\\reportWebVitals.js":"2","G:\\Data Desktop\\amazon\\frontend\\src\\store.js":"3","G:\\Data Desktop\\amazon\\frontend\\src\\App.js":"4","G:\\Data Desktop\\amazon\\frontend\\src\\reducers\\productReducers.js":"5","G:\\Data Desktop\\amazon\\frontend\\src\\screens\\CartScreen.js":"6","G:\\Data Desktop\\amazon\\frontend\\src\\screens\\HomeScreen.js":"7","G:\\Data Desktop\\amazon\\frontend\\src\\screens\\OrderScreen.js":"8","G:\\Data Desktop\\amazon\\frontend\\src\\screens\\PlaceOrderScreen.js":"9","G:\\Data Desktop\\amazon\\frontend\\src\\reducers\\orderReducers.js":"10","G:\\Data Desktop\\amazon\\frontend\\src\\reducers\\userReducers.js":"11","G:\\Data Desktop\\amazon\\frontend\\src\\screens\\SigninScreen.js":"12","G:\\Data Desktop\\amazon\\frontend\\src\\reducers\\cartReducers.js":"13","G:\\Data Desktop\\amazon\\frontend\\src\\screens\\ProfileScreen.js":"14","G:\\Data Desktop\\amazon\\frontend\\src\\screens\\PaymentMethodScreen.js":"15","G:\\Data Desktop\\amazon\\frontend\\src\\screens\\ProductScreen.js":"16","G:\\Data Desktop\\amazon\\frontend\\src\\screens\\UserListScreen.js":"17","G:\\Data Desktop\\amazon\\frontend\\src\\screens\\ThankyouScreen.js":"18","G:\\Data Desktop\\amazon\\frontend\\src\\screens\\SliderScreen.js":"19","G:\\Data Desktop\\amazon\\frontend\\src\\screens\\OrderHistoryScreen.js":"20","G:\\Data Desktop\\amazon\\frontend\\src\\screens\\UserEditScreen.js":"21","G:\\Data Desktop\\amazon\\frontend\\src\\screens\\SellerScreen.js":"22","G:\\Data Desktop\\amazon\\frontend\\src\\screens\\DashBoardScreen.js":"23","G:\\Data Desktop\\amazon\\frontend\\src\\screens\\RegisterScreen.js":"24","G:\\Data Desktop\\amazon\\frontend\\src\\screens\\OrderListScreen.js":"25","G:\\Data Desktop\\amazon\\frontend\\src\\screens\\SupportScreen.js":"26","G:\\Data Desktop\\amazon\\frontend\\src\\components\\AdminRoute.js":"27","G:\\Data Desktop\\amazon\\frontend\\src\\components\\SellerRoute.js":"28","G:\\Data Desktop\\amazon\\frontend\\src\\components\\PrivateRoute.js":"29","G:\\Data Desktop\\amazon\\frontend\\src\\components\\LoadingBox.js":"30","G:\\Data Desktop\\amazon\\frontend\\src\\components\\MessageBox.js":"31","G:\\Data Desktop\\amazon\\frontend\\src\\screens\\SearchScreen.js":"32","G:\\Data Desktop\\amazon\\frontend\\src\\components\\SearchBox.js":"33","G:\\Data Desktop\\amazon\\frontend\\src\\screens\\ProductEditScreen.js":"34","G:\\Data Desktop\\amazon\\frontend\\src\\screens\\ShippingAddressScreen.js":"35","G:\\Data Desktop\\amazon\\frontend\\src\\screens\\ProductListScreen.js":"36","G:\\Data Desktop\\amazon\\frontend\\src\\actions\\productActions.js":"37","G:\\Data Desktop\\amazon\\frontend\\src\\components\\ChatBox.js":"38","G:\\Data Desktop\\amazon\\frontend\\src\\screens\\MapScreen.js":"39","G:\\Data Desktop\\amazon\\frontend\\src\\actions\\userActions.js":"40","G:\\Data Desktop\\amazon\\frontend\\src\\actions\\orderActions.js":"41","G:\\Data Desktop\\amazon\\frontend\\src\\components\\CheckoutSteps.js":"42","G:\\Data Desktop\\amazon\\frontend\\src\\utils.js":"43","G:\\Data Desktop\\amazon\\frontend\\src\\components\\rating.js":"44","G:\\Data Desktop\\amazon\\frontend\\src\\components\\product.js":"45","G:\\Data Desktop\\amazon\\frontend\\src\\actions\\cartActions.js":"46","G:\\Data Desktop\\amazon\\frontend\\src\\constants\\cartConstants.js":"47","G:\\Data Desktop\\amazon\\frontend\\src\\constants\\orderContants.js":"48","G:\\Data Desktop\\amazon\\frontend\\src\\constants\\productConstants.js":"49","G:\\Data Desktop\\amazon\\frontend\\src\\constants\\userConstants.js":"50","G:\\Data Desktop\\amazon\\frontend\\src\\screens\\ProductCreateScreen.js":"51","C:\\Users\\Sehat Box\\Documents\\GitHub\\client\\src\\index.js":"52","C:\\Users\\Sehat Box\\Documents\\GitHub\\client\\src\\App.js":"53","C:\\Users\\Sehat Box\\Documents\\GitHub\\client\\src\\reportWebVitals.js":"54","C:\\Users\\Sehat Box\\Documents\\GitHub\\client\\src\\store.js":"55","C:\\Users\\Sehat Box\\Documents\\GitHub\\client\\src\\screens\\HomeScreen.js":"56","C:\\Users\\Sehat Box\\Documents\\GitHub\\client\\src\\screens\\SigninScreen.js":"57","C:\\Users\\Sehat Box\\Documents\\GitHub\\client\\src\\screens\\RegisterScreen.js":"58","C:\\Users\\Sehat Box\\Documents\\GitHub\\client\\src\\screens\\UserEditScreen.js":"59","C:\\Users\\Sehat Box\\Documents\\GitHub\\client\\src\\screens\\OrderScreen.js":"60","C:\\Users\\Sehat Box\\Documents\\GitHub\\client\\src\\screens\\UserListScreen.js":"61","C:\\Users\\Sehat Box\\Documents\\GitHub\\client\\src\\screens\\Account_GroupScreen.js":"62","C:\\Users\\Sehat Box\\Documents\\GitHub\\client\\src\\screens\\AccountScreen.js":"63","C:\\Users\\Sehat Box\\Documents\\GitHub\\client\\src\\actions\\userActions.js":"64","C:\\Users\\Sehat Box\\Documents\\GitHub\\client\\src\\reducers\\accountReducers.js":"65","C:\\Users\\Sehat Box\\Documents\\GitHub\\client\\src\\reducers\\userReducers.js":"66","C:\\Users\\Sehat Box\\Documents\\GitHub\\client\\src\\actions\\accountActions.js":"67","C:\\Users\\Sehat Box\\Documents\\GitHub\\client\\src\\components\\LoadingBox.js":"68","C:\\Users\\Sehat Box\\Documents\\GitHub\\client\\src\\constants\\accountConstants.js":"69","C:\\Users\\Sehat Box\\Documents\\GitHub\\client\\src\\constants\\userConstants.js":"70","C:\\Users\\Sehat Box\\Documents\\GitHub\\client\\src\\components\\MessageBox.js":"71","C:\\Users\\Sehat Box\\Documents\\GitHub\\client\\src\\components\\acgroup.js":"72","C:\\Users\\Sehat Box\\Documents\\GitHub\\client\\src\\reducers\\serviceReducers.js":"73","C:\\Users\\Sehat Box\\Documents\\GitHub\\client\\src\\constants\\serviceConstants.js":"74","C:\\Users\\Sehat Box\\Documents\\GitHub\\client\\src\\screens\\serviceScreen.js":"75","C:\\Users\\Sehat Box\\Documents\\GitHub\\client\\src\\actions\\serviceActions.js":"76","C:\\Users\\Sehat Box\\Documents\\GitHub\\client\\src\\screens\\ServiceScreen.js":"77","C:\\Users\\Sehat Box\\Documents\\GitHub\\client\\src\\screens\\service_GroupScren.js":"78","C:\\Users\\Sehat Box\\Documents\\GitHub\\client\\src\\reducers\\productReducers.js":"79","C:\\Users\\Sehat Box\\Documents\\GitHub\\client\\src\\constants\\productConstants.js":"80","C:\\Users\\Sehat Box\\Documents\\GitHub\\client\\src\\screens\\ProductGroupScreen.js":"81","C:\\Users\\Sehat Box\\Documents\\GitHub\\client\\src\\screens\\ProductScreen.js":"82","C:\\Users\\Sehat Box\\Documents\\GitHub\\client\\src\\actions\\productActions.js":"83","C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\index.js":"84","C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\reportWebVitals.js":"85","C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\store.js":"86","C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\App.js":"87","C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\reducers\\accountReducers.js":"88","C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\reducers\\userReducers.js":"89","C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\reducers\\serviceReducers.js":"90","C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\reducers\\productReducers.js":"91","C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\screens\\HomeScreen.js":"92","C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\screens\\SigninScreen.js":"93","C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\screens\\RegisterScreen.js":"94","C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\screens\\UserEditScreen.js":"95","C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\screens\\UserListScreen.js":"96","C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\screens\\AccountScreen.js":"97","C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\screens\\Account_GroupScreen.js":"98","C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\screens\\ServiceScreen.js":"99","C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\screens\\service_GroupScren.js":"100","C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\screens\\ProductGroupScreen.js":"101","C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\actions\\userActions.js":"102","C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\screens\\ProductScreen.js":"103","C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\actions\\serviceActions.js":"104","C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\actions\\accountActions.js":"105","C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\actions\\productActions.js":"106","C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\constants\\productConstants.js":"107","C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\constants\\serviceConstants.js":"108","C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\constants\\accountConstants.js":"109","C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\constants\\userConstants.js":"110","C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\components\\LoadingBox.js":"111","C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\components\\MessageBox.js":"112","C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\actions\\enquiryActions.js":"113","C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\screens\\EnquiryScreen.js":"114","C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\reducers\\enquiryReducers.js":"115","C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\constants\\enquiryConstants.js":"116","C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\reducers\\orderReducers.js":"117","C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\constants\\orderConstants.js":"118","C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\screens\\OrderScreen.js":"119","C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\actions\\orderActions.js":"120","C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\components\\enquiry.js":"121","C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\screens\\StateScreen.js":"122","C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\actions\\stateActions.js":"123","C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\reducers\\talukaReducers.js":"124","C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\reducers\\districtReducers.js":"125","C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\constants\\talukaConstants.js":"126","C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\constants\\districtConstants.js":"127","C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\screens\\DistrictScreen.js":"128","C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\screens\\TalukaScreen.js":"129","C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\actions\\districtActions.js":"130","C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\actions\\talukaActions.js":"131","C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\reducers\\stateReducers.js":"132","C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\constants\\stateConstants.js":"133"},{"size":610,"mtime":1634972688607,"results":"134","hashOfConfig":"135"},{"size":362,"mtime":499162500000,"results":"136","hashOfConfig":"135"},{"size":2766,"mtime":1657199687961,"results":"137","hashOfConfig":"135"},{"size":10725,"mtime":1657180983815,"results":"138","hashOfConfig":"135"},{"size":5206,"mtime":1657182406665,"results":"139","hashOfConfig":"135"},{"size":5090,"mtime":1638608785762,"results":"140","hashOfConfig":"135"},{"size":2327,"mtime":1657174824191,"results":"141","hashOfConfig":"135"},{"size":7561,"mtime":1657106494209,"results":"142","hashOfConfig":"135"},{"size":6922,"mtime":1642832320690,"results":"143","hashOfConfig":"135"},{"size":4039,"mtime":1642665317669,"results":"144","hashOfConfig":"135"},{"size":4567,"mtime":1642853447728,"results":"145","hashOfConfig":"135"},{"size":2157,"mtime":1638011595721,"results":"146","hashOfConfig":"135"},{"size":1641,"mtime":1638609845882,"results":"147","hashOfConfig":"135"},{"size":5439,"mtime":1638529846154,"results":"148","hashOfConfig":"135"},{"size":2344,"mtime":1636965937583,"results":"149","hashOfConfig":"135"},{"size":8827,"mtime":1657116372344,"results":"150","hashOfConfig":"135"},{"size":2691,"mtime":1637154909142,"results":"151","hashOfConfig":"135"},{"size":157,"mtime":1642765911054,"results":"152","hashOfConfig":"135"},{"size":1474,"mtime":1638514128433,"results":"153","hashOfConfig":"135"},{"size":2390,"mtime":1642751751138,"results":"154","hashOfConfig":"135"},{"size":3489,"mtime":1638366246694,"results":"155","hashOfConfig":"135"},{"size":3094,"mtime":1638602262133,"results":"156","hashOfConfig":"135"},{"size":3050,"mtime":1642838882572,"results":"157","hashOfConfig":"135"},{"size":3046,"mtime":1638001411618,"results":"158","hashOfConfig":"135"},{"size":3076,"mtime":1642751318415,"results":"159","hashOfConfig":"135"},{"size":5478,"mtime":1639227514186,"results":"160","hashOfConfig":"135"},{"size":551,"mtime":1635923802647,"results":"161","hashOfConfig":"135"},{"size":553,"mtime":1642750855411,"results":"162","hashOfConfig":"135"},{"size":533,"mtime":1635922993427,"results":"163","hashOfConfig":"135"},{"size":209,"mtime":1635257584381,"results":"164","hashOfConfig":"135"},{"size":194,"mtime":1635142026006,"results":"165","hashOfConfig":"135"},{"size":5886,"mtime":1639118300379,"results":"166","hashOfConfig":"135"},{"size":646,"mtime":1638616460223,"results":"167","hashOfConfig":"135"},{"size":6934,"mtime":1638359580564,"results":"168","hashOfConfig":"135"},{"size":5086,"mtime":1639229289644,"results":"169","hashOfConfig":"135"},{"size":4483,"mtime":1657181162763,"results":"170","hashOfConfig":"135"},{"size":5889,"mtime":1657198534283,"results":"171","hashOfConfig":"135"},{"size":2986,"mtime":1639055195690,"results":"172","hashOfConfig":"135"},{"size":3684,"mtime":1642853554787,"results":"173","hashOfConfig":"135"},{"size":5946,"mtime":1651731769600,"results":"174","hashOfConfig":"135"},{"size":6406,"mtime":1642832351112,"results":"175","hashOfConfig":"135"},{"size":455,"mtime":1635317304915,"results":"176","hashOfConfig":"135"},{"size":616,"mtime":1638625672143,"results":"177","hashOfConfig":"135"},{"size":857,"mtime":1657116186510,"results":"178","hashOfConfig":"135"},{"size":879,"mtime":1638603376473,"results":"179","hashOfConfig":"135"},{"size":1640,"mtime":1638947465042,"results":"180","hashOfConfig":"135"},{"size":338,"mtime":1638608457471,"results":"181","hashOfConfig":"135"},{"size":1658,"mtime":1642665226396,"results":"182","hashOfConfig":"135"},{"size":2049,"mtime":1657198476940,"results":"183","hashOfConfig":"135"},{"size":1845,"mtime":1638945228812,"results":"184","hashOfConfig":"135"},{"size":5742,"mtime":1657262689562,"results":"185","hashOfConfig":"135"},{"size":631,"mtime":1658384378813,"results":"186","hashOfConfig":"187"},{"size":2677,"mtime":1659100391114,"results":"188","hashOfConfig":"187"},{"size":375,"mtime":1658384378816,"results":"189","hashOfConfig":"187"},{"size":1730,"mtime":1659099863200,"results":"190","hashOfConfig":"187"},{"size":911,"mtime":1659100289734,"results":"191","hashOfConfig":"187"},{"size":1811,"mtime":1658384378822,"results":"192","hashOfConfig":"187"},{"size":2173,"mtime":1658384378821,"results":"193","hashOfConfig":"187"},{"size":3489,"mtime":1658384378822,"results":"194","hashOfConfig":"187"},{"size":143,"mtime":1658384378820,"results":"195","hashOfConfig":"187"},{"size":2691,"mtime":1658384378824,"results":"196","hashOfConfig":"187"},{"size":2037,"mtime":1658579833856,"results":"197","hashOfConfig":"187"},{"size":2636,"mtime":1658582117722,"results":"198","hashOfConfig":"187"},{"size":5243,"mtime":1658384378806,"results":"199","hashOfConfig":"187"},{"size":1566,"mtime":1658575584517,"results":"200","hashOfConfig":"187"},{"size":3778,"mtime":1658384378815,"results":"201","hashOfConfig":"187"},{"size":1919,"mtime":1658582206255,"results":"202","hashOfConfig":"187"},{"size":209,"mtime":1658384378807,"results":"203","hashOfConfig":"187"},{"size":573,"mtime":1658401505127,"results":"204","hashOfConfig":"187"},{"size":1547,"mtime":1658384378811,"results":"205","hashOfConfig":"187"},{"size":194,"mtime":1658384378808,"results":"206","hashOfConfig":"187"},{"size":313,"mtime":1658401976962,"results":"207","hashOfConfig":"187"},{"size":1592,"mtime":1659093152281,"results":"208","hashOfConfig":"187"},{"size":573,"mtime":1659092787539,"results":"209","hashOfConfig":"187"},{"size":3200,"mtime":1659100269220,"results":"210","hashOfConfig":"187"},{"size":1988,"mtime":1659092670904,"results":"211","hashOfConfig":"187"},{"size":3200,"mtime":1659100269220,"results":"212","hashOfConfig":"187"},{"size":2063,"mtime":1659100253035,"results":"213","hashOfConfig":"187"},{"size":1571,"mtime":1659099351713,"results":"214","hashOfConfig":"187"},{"size":573,"mtime":1659098743966,"results":"215","hashOfConfig":"187"},{"size":2063,"mtime":1659100232927,"results":"216","hashOfConfig":"187"},{"size":2698,"mtime":1659100244176,"results":"217","hashOfConfig":"187"},{"size":1953,"mtime":1659100420435,"results":"218","hashOfConfig":"187"},{"size":631,"mtime":1658384378813,"results":"219","hashOfConfig":"220"},{"size":375,"mtime":1658384378816,"results":"221","hashOfConfig":"220"},{"size":2741,"mtime":1659794231053,"results":"222","hashOfConfig":"220"},{"size":3190,"mtime":1659794752740,"results":"223","hashOfConfig":"220"},{"size":2097,"mtime":1659595969464,"results":"224","hashOfConfig":"220"},{"size":3778,"mtime":1658384378815,"results":"225","hashOfConfig":"220"},{"size":1592,"mtime":1659093152281,"results":"226","hashOfConfig":"220"},{"size":1571,"mtime":1659099351713,"results":"227","hashOfConfig":"220"},{"size":2823,"mtime":1660029704361,"results":"228","hashOfConfig":"220"},{"size":1811,"mtime":1658384378822,"results":"229","hashOfConfig":"220"},{"size":2173,"mtime":1658384378821,"results":"230","hashOfConfig":"220"},{"size":3489,"mtime":1658384378822,"results":"231","hashOfConfig":"220"},{"size":2691,"mtime":1658384378824,"results":"232","hashOfConfig":"220"},{"size":2641,"mtime":1660029704352,"results":"233","hashOfConfig":"220"},{"size":2037,"mtime":1658579833856,"results":"234","hashOfConfig":"220"},{"size":2345,"mtime":1660032566693,"results":"235","hashOfConfig":"220"},{"size":2063,"mtime":1659100253035,"results":"236","hashOfConfig":"220"},{"size":2063,"mtime":1659100232927,"results":"237","hashOfConfig":"220"},{"size":5425,"mtime":1660029704349,"results":"238","hashOfConfig":"220"},{"size":2415,"mtime":1660029704365,"results":"239","hashOfConfig":"220"},{"size":2006,"mtime":1660032006419,"results":"240","hashOfConfig":"220"},{"size":2635,"mtime":1660029704332,"results":"241","hashOfConfig":"220"},{"size":1998,"mtime":1660029704341,"results":"242","hashOfConfig":"220"},{"size":573,"mtime":1659098743966,"results":"243","hashOfConfig":"220"},{"size":573,"mtime":1659092787539,"results":"244","hashOfConfig":"220"},{"size":833,"mtime":1659599536963,"results":"245","hashOfConfig":"220"},{"size":1547,"mtime":1658384378811,"results":"246","hashOfConfig":"220"},{"size":209,"mtime":1658384378807,"results":"247","hashOfConfig":"220"},{"size":194,"mtime":1658384378808,"results":"248","hashOfConfig":"220"},{"size":1830,"mtime":1660029704337,"results":"249","hashOfConfig":"220"},{"size":2717,"mtime":1660029704359,"results":"250","hashOfConfig":"220"},{"size":1546,"mtime":1659600825186,"results":"251","hashOfConfig":"220"},{"size":625,"mtime":1659600678794,"results":"252","hashOfConfig":"220"},{"size":523,"mtime":1659598303155,"results":"253","hashOfConfig":"220"},{"size":157,"mtime":1659598143944,"results":"254","hashOfConfig":"220"},{"size":5322,"mtime":1660034918142,"results":"255","hashOfConfig":"220"},{"size":880,"mtime":1660029704338,"results":"256","hashOfConfig":"220"},{"size":232,"mtime":1659619635477,"results":"257","hashOfConfig":"220"},{"size":1511,"mtime":1659792513248,"results":"258","hashOfConfig":"220"},{"size":1743,"mtime":1660029704345,"results":"259","hashOfConfig":"220"},{"size":1512,"mtime":1659793914581,"results":"260","hashOfConfig":"220"},{"size":1560,"mtime":1659794057632,"results":"261","hashOfConfig":"220"},{"size":529,"mtime":1659793592030,"results":"262","hashOfConfig":"220"},{"size":565,"mtime":1659793680189,"results":"263","hashOfConfig":"220"},{"size":2321,"mtime":1660029704356,"results":"264","hashOfConfig":"220"},{"size":3041,"mtime":1660029704371,"results":"265","hashOfConfig":"220"},{"size":1846,"mtime":1660029704334,"results":"266","hashOfConfig":"220"},{"size":1801,"mtime":1660029704347,"results":"267","hashOfConfig":"220"},{"size":1490,"mtime":1659792443680,"results":"268","hashOfConfig":"220"},{"size":511,"mtime":1659792078037,"results":"269","hashOfConfig":"220"},{"filePath":"270","messages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},"z1s2e5",{"filePath":"273","messages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"275","messages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"277","messages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"272"},{"filePath":"280","messages":"281","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"282","messages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"284","messages":"285","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"272"},{"filePath":"287","messages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"272"},{"filePath":"290","messages":"291","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"272"},{"filePath":"293","messages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"295","messages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"297","messages":"298","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"299","messages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"301","messages":"302","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"303","messages":"304","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"272"},{"filePath":"306","messages":"307","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"308","messages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"310","messages":"311","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"312","messages":"313","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"272"},{"filePath":"315","messages":"316","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"272"},{"filePath":"318","messages":"319","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"320","messages":"321","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"322","messages":"323","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"324","messages":"325","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"326","messages":"327","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"328","messages":"329","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"272"},{"filePath":"331","messages":"332","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"333","messages":"334","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"335","messages":"336","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"337","messages":"338","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"339","messages":"340","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"341","messages":"342","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"343","messages":"344","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"345","messages":"346","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"347","messages":"348","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"349","messages":"350","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"351","usedDeprecatedRules":"272"},{"filePath":"352","messages":"353","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"354","usedDeprecatedRules":"272"},{"filePath":"355","messages":"356","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357","usedDeprecatedRules":"272"},{"filePath":"358","messages":"359","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"360","messages":"361","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"362","messages":"363","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"364","usedDeprecatedRules":"272"},{"filePath":"365","messages":"366","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"367","messages":"368","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"369","messages":"370","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"371","messages":"372","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"373","messages":"374","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"375","messages":"376","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"377","messages":"378","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"379","messages":"380","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"381","messages":"382","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"383","messages":"384","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"385"},{"filePath":"386","messages":"387","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},"14w2fdv",{"filePath":"389","messages":"390","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"391","messages":"392","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"393","messages":"394","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"395","messages":"396","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"397","messages":"398","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"399","messages":"400","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"401","messages":"402","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"403","messages":"404","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"405","messages":"406","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"407","messages":"408","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"409","messages":"410","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"411","usedDeprecatedRules":"388"},{"filePath":"412","messages":"413","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"414","messages":"415","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"416","messages":"417","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"418","messages":"419","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"420","usedDeprecatedRules":"388"},{"filePath":"421","messages":"422","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"423","messages":"424","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"425","messages":"426","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"427","messages":"428","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"429","messages":"430","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"431"},{"filePath":"432","messages":"433","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"434","messages":"435","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"436","messages":"437","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"438","messages":"439","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"440","messages":"441","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"442","messages":"443","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"444","messages":"445","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"446","messages":"447","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"448","messages":"449","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"450","messages":"451","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"452","messages":"453","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"454","messages":"455","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"456"},"1swr9ln",{"filePath":"457","messages":"458","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"456"},{"filePath":"459","messages":"460","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"461","usedDeprecatedRules":"456"},{"filePath":"462","messages":"463","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"456"},{"filePath":"464","messages":"465","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"456"},{"filePath":"466","messages":"467","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"456"},{"filePath":"468","messages":"469","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"456"},{"filePath":"470","messages":"471","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"456"},{"filePath":"472","messages":"473","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"474","usedDeprecatedRules":"456"},{"filePath":"475","messages":"476","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"456"},{"filePath":"477","messages":"478","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"456"},{"filePath":"479","messages":"480","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"456"},{"filePath":"481","messages":"482","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"456"},{"filePath":"483","messages":"484","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"485","usedDeprecatedRules":"456"},{"filePath":"486","messages":"487","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"456"},{"filePath":"488","messages":"489","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"490","messages":"491","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"456"},{"filePath":"492","messages":"493","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"456"},{"filePath":"494","messages":"495","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"456"},{"filePath":"496","messages":"497","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"498","usedDeprecatedRules":"456"},{"filePath":"499","messages":"500","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"501","usedDeprecatedRules":"456"},{"filePath":"502","messages":"503","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"504","usedDeprecatedRules":"456"},{"filePath":"505","messages":"506","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"507","usedDeprecatedRules":"456"},{"filePath":"508","messages":"509","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"456"},{"filePath":"510","messages":"511","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"456"},{"filePath":"512","messages":"513","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"456"},{"filePath":"514","messages":"515","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"456"},{"filePath":"516","messages":"517","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"456"},{"filePath":"518","messages":"519","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"456"},{"filePath":"520","messages":"521","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"522","usedDeprecatedRules":"456"},{"filePath":"523","messages":"524","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"525","usedDeprecatedRules":"456"},{"filePath":"526","messages":"527","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"456"},{"filePath":"528","messages":"529","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"456"},{"filePath":"530","messages":"531","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"456"},{"filePath":"532","messages":"533","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"456"},{"filePath":"534","messages":"535","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"536","messages":"537","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"456"},{"filePath":"538","messages":"539","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"540","messages":"541","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"456"},{"filePath":"542","messages":"543","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"544","usedDeprecatedRules":"456"},{"filePath":"545","messages":"546","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"456"},{"filePath":"547","messages":"548","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"456"},{"filePath":"549","messages":"550","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"456"},{"filePath":"551","messages":"552","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"456"},{"filePath":"553","messages":"554","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"555","usedDeprecatedRules":"456"},{"filePath":"556","messages":"557","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"558","usedDeprecatedRules":"456"},{"filePath":"559","messages":"560","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"561","usedDeprecatedRules":"456"},{"filePath":"562","messages":"563","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"564","usedDeprecatedRules":"456"},{"filePath":"565","messages":"566","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"456"},{"filePath":"567","messages":"568","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"456"},"G:\\Data Desktop\\amazon\\frontend\\src\\index.js",[],["569","570"],"G:\\Data Desktop\\amazon\\frontend\\src\\reportWebVitals.js",[],"G:\\Data Desktop\\amazon\\frontend\\src\\store.js",[],"G:\\Data Desktop\\amazon\\frontend\\src\\App.js",["571","572","573","574","575","576","577","578","579"],"import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { BrowserRouter, Route, Link } from 'react-router-dom';\nimport HomeScreen from './screens/HomeScreen';\nimport ProductScreen from './screens/ProductScreen';\nimport CartScreen from './screens/CartScreen';\nimport PrivateRoute from './components/PrivateRoute';\nimport AdminRoute from './components/AdminRoute';\nimport SearchBox from './components/SearchBox';\nimport SigninScreen from './screens/SigninScreen';\nimport RegisterScreen from './screens/RegisterScreen';\nimport { signout } from './actions/userActions';\nimport ShippingAddressScreen from './screens/ShippingAddressScreen';\nimport PaymentMethodScreen from './screens/PaymentMethodScreen';\nimport PlaceOrderScreen from './screens/PlaceOrderScreen';\nimport OrderScreen from './screens/OrderScreen';\nimport OrderHistoryScreen from './screens/OrderHistoryScreen';\nimport ProfileScreen from './screens/ProfileScreen';\nimport ProductListScreen from './screens/ProductListScreen';\nimport ProductEditScreen from './screens/ProductEditScreen';\nimport ProductCreateScreen from './screens/ProductCreateScreen';\nimport OrderListScreen from './screens/OrderListScreen';\nimport UserListScreen from './screens/UserListScreen';\nimport UserEditScreen from './screens/UserEditScreen';\nimport SliderScreen from './screens/SliderScreen';\nimport SellerRoute from './components/SellerRoute';\nimport SellerScreen from './screens/SellerScreen';\nimport SearchScreen from './screens/SearchScreen';\nimport { listProductCategories } from './actions/productActions';\nimport LoadingBox from './components/LoadingBox';\nimport MessageBox from './components/MessageBox';\nimport MapScreen from './screens/MapScreen';\nimport DashBoardScreen from './screens/DashBoardScreen';\nimport SupportScreen from './screens/SupportScreen';\nimport ChatBox from './components/ChatBox';\nimport ThankyouScreen from './screens/ThankyouScreen';\n\nfunction App() {\n  const cart = useSelector((state) => state.cart);\n  const [sidebarIsOpen, setSidebarIsOpen] = useState(false);\n  const { cartItems } = cart;\n  const userSignin = useSelector((state) => state.userSignin);\n  const { userInfo } = userSignin;\n  const dispatch = useDispatch();\n  const signoutHandler = () => {\n    dispatch(signout());\n  };\n  const productCategoryList = useSelector((state) => state.productCategoryList);\n  const {\n    loading: loadingCategories,\n    error: errorCategories,\n    categories,\n  } = productCategoryList;\n  useEffect(() => {\n    dispatch(listProductCategories());\n  }, [dispatch]);\n\n  return (\n    <BrowserRouter>    \n    <div className='grid-container'>\n    <header className=\"row\">\n        <div>\n           <button type=\"button\" className=\"open-sidebar\" onClick={() => setSidebarIsOpen(true)}>\n           <i className=\"fa fa-bars\"></i>\n           </button>\n            <Link className=\"brand\" to=\"/\">yashhealth</Link>\n        </div>\n        <div>\n          <Route render={({history}) => <SearchBox history={history}></SearchBox>}></Route>\n        </div>\n        <div>\n            <Link to=\"/cart\">Cart \n            {\n              cartItems.length > 0 && (\n                <span className=\"badge\">{cartItems.length}</span>\n              )\n            }\n            </Link>\n            {\n              userInfo ? (\n                <div className=\"dropdown\">\n                <Link to=\"#\">\n                  {userInfo.name}<i className=\"fa fa-caret-down\"></i>\n                </Link>\n                <ul className=\"dropdown-content\">\n                  <li>\n                    <Link to=\"/profile\">User Profile</Link>\n                  </li>\n                  <li>\n                    <Link to=\"/orderhistory\">Order History</Link>\n                  </li>\n                  <li>\n                  <Link to=\"#signout\" onClick={signoutHandler}>\n                    Sign Out\n                  </Link>\n                  </li>\n                </ul>\n                </div>\n              ) :\n              (\n                <Link to=\"/signin\">Sign In</Link>\n              )} \n              {userInfo && userInfo.isSeller && (\n                 <div className=\"dropdown\">\n                 <Link to=\"#admin\">\n                   Seller <i className=\"fa fa-caret-down\"></i>\n                 </Link>\n                 <ul className=\"dropdown-content\">\n                   <li>\n                     <Link to=\"/productlist/seller\">Products</Link>\n                   </li>\n                   <li>\n                     <Link to=\"/orderlist/seller\">orders</Link>\n                   </li>\n                 </ul>\n               </div>\n              )}\n              {\n                userInfo && userInfo.isAdmin && (\n                  <div className=\"dropdown\">\n                    <Link to=\"#admin\">\n                      Admin <i className=\"fa fa-caret-down\"></i>\n                    </Link>\n                    <ul className=\"dropdown-content\">\n                      <li>\n                        <Link to=\"/dashboard\">Dashboard</Link>\n                      </li>\n                      <li>\n                        <Link to=\"/productlist\">Products</Link>\n                      </li>\n                      <li>\n                        <Link to=\"/orderlist\">orders</Link>\n                      </li>\n                      <li>\n                        <Link to=\"/userlist\">Users</Link>\n                      </li>\n                      <li>\n                        <Link to=\"/support\">Support</Link>\n                      </li>\n                    </ul>\n                  </div>\n                )\n              }      \n        </div>\n    </header>\n    <aside className={sidebarIsOpen ? 'open' : ''}>\n          <ul className=\"categories\">\n            <li>\n              <strong>Categories</strong>\n              <button\n                onClick={() => setSidebarIsOpen(false)}\n                className=\"close-sidebar\"\n                type=\"button\"\n              >\n                <i className=\"fa fa-close\"></i>\n              </button>\n            </li>\n            {loadingCategories ? (\n              <LoadingBox></LoadingBox>\n            ) : errorCategories ? (\n              <MessageBox variant=\"danger\">{errorCategories}</MessageBox>\n            ) : (\n              categories.map((c) => (\n                <li key={c}>\n                  <Link\n                    to={`/search/category/${c}`}\n                    onClick={() => setSidebarIsOpen(false)}\n                  >\n                    {c}\n                  </Link>\n                </li>\n              ))\n            )}\n          </ul>\n        </aside>\n    <main>  \n      <Route path=\"/seller/:id\" component={SellerScreen}></Route>   \n      <Route path=\"/cart/:id?\" component={CartScreen}></Route>\n      <Route path=\"/slider\" component={SliderScreen}></Route>\n      <Route path=\"/product/:id\" component={ProductScreen} exact></Route>\n      <Route path=\"/product/:id/edit\" component={ProductEditScreen} exact></Route>\n      <Route path=\"/create\" component={ProductCreateScreen} exact></Route>\n      <Route path=\"/signin\" component={SigninScreen}></Route>\n      <Route path=\"/register\" component={RegisterScreen}></Route>\n      <Route path=\"/shipping\" component={ShippingAddressScreen}></Route>\n      <Route path=\"/payment\" component={PaymentMethodScreen}></Route>\n      <Route path=\"/thank-you\" component={ThankyouScreen}></Route>\n      <Route path=\"/placeorder\" component={PlaceOrderScreen}></Route>\n      <Route path=\"/order/:id\" component={OrderScreen}></Route>\n      <Route path=\"/orderhistory\" component={OrderHistoryScreen}></Route>\n      <Route path=\"/search/name/:name?\" component={SearchScreen} exact></Route>\n      <Route path=\"/search/category/:category?\" component={SearchScreen} exact></Route>\n      <Route path=\"/search/category/:category/name/:name\" component={SearchScreen} exact></Route>\n      <Route path=\"/search/category/:category/name/:name/min/:min/max/:max/rating/:rating/order/:order/pageNumber/:pageNumber\" component={SearchScreen} exact></Route>\n      <PrivateRoute \n        path=\"/profile\" \n        component={ProfileScreen}\n      ></PrivateRoute>\n       <PrivateRoute \n        path=\"/map\" \n        component={MapScreen}\n      ></PrivateRoute>\n      <AdminRoute path=\"/productlist\" component={ProductListScreen} exact></AdminRoute>\n      <AdminRoute path=\"/productlist/pageNumber/:pageNumber\" component={ProductListScreen} exact></AdminRoute>\n      <AdminRoute\n            path=\"/orderlist\"\n            component={OrderListScreen}\n            exact\n          ></AdminRoute>\n      <AdminRoute path=\"/userlist\" component={UserListScreen}></AdminRoute>\n      <AdminRoute path=\"/user/:id/edit\" component={UserEditScreen}></AdminRoute>\n      <AdminRoute path=\"/dashboard\" component={DashBoardScreen}></AdminRoute>\n      <AdminRoute path=\"/support\" component={SupportScreen}></AdminRoute>\n      <SellerRoute path=\"/productlist/seller\" component={ProductListScreen}></SellerRoute>\n      <SellerRoute path=\"/orderlist/seller\" component={OrderListScreen}></SellerRoute>\n      <Route path=\"/\" component={HomeScreen} exact></Route>\n    </main>\n    <footer>\n    {userInfo && !userInfo.isAdmin && <ChatBox userInfo={userInfo} />}\n        <div className='footer-distributed'> \n        <div className=\"footer-left\">\n          <img src=\"/yash.png\" />\n\t\t\t\t<h3>About <span>Yashhealth</span></h3>\n\n\t\t\t\t<p className=\"footer-links\">\n\t\t\t\t\t<a href=\"/\">Home</a>\n\t\t\t\t\t|\n\t\t\t\t\t<a href=\"#\">Blog</a>\n\t\t\t\t\t|\n\t\t\t\t\t<a href=\"#\">About</a>\n\t\t\t\t\t|\n\t\t\t\t\t<a href=\"#\">Contact</a>\n\t\t\t\t</p>\n\n\t\t\t\t<p className=\"footer-company-name\">© 2021 Yashhealth Learning Solutions Pvt. Ltd.</p>\n\t\t\t</div>\n\n\t\t\t<div className=\"footer-center\">\n\t\t\t\t<div>\n\t\t\t\t\t<i className=\"fa fa-map-marker\"></i>\n\t\t\t\t\t  <p><span>309 - Rupa Solitaire,\n\t\t\t\t\t\t Bldg. No. A - 1, Sector - 1</span>\n\t\t\t\t\t\tMahape, Navi Mumbai - 400710</p>\n\t\t\t\t</div>\n\n\t\t\t\t<div>\n\t\t\t\t\t<i className=\"fa fa-phone\"></i>\n\t\t\t\t\t<p>+91 22-27782183</p>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<i className=\"fa fa-envelope\"></i>\n\t\t\t\t\t<p><a href=\"mailto:support@eduonix.com\">support@yashhealth.com</a></p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"footer-right\">\n\t\t\t\t<p className=\"footer-company-about\">\n\t\t\t\t\t<span>About the company</span>\n          Yash Healthcare delivers a very good quality nursing care support all over in Mumbai as well as Maharashtra.</p>\n\t\t\t\t<div className=\"footer-icons\">\n\t\t\t\t\t<a href=\"#\"><i className=\"fa fa-facebook\"></i></a>\n\t\t\t\t\t<a href=\"#\"><i className=\"fa fa-twitter\"></i></a>\n\t\t\t\t\t<a href=\"#\"><i className=\"fa fa-instagram\"></i></a>\n\t\t\t\t\t<a href=\"#\"><i className=\"fa fa-linkedin\"></i></a>\n\t\t\t\t\t<a href=\"#\"><i className=\"fa fa-youtube\"></i></a>\n\t\t\t\t</div>\n\t\t\t</div>\n         </div>\n    </footer>\n  \n</div>\n</BrowserRouter>\n  );\n}\n\nexport default App;\n","G:\\Data Desktop\\amazon\\frontend\\src\\reducers\\productReducers.js",[],"G:\\Data Desktop\\amazon\\frontend\\src\\screens\\CartScreen.js",[],"G:\\Data Desktop\\amazon\\frontend\\src\\screens\\HomeScreen.js",["580"],"import React, { useEffect } from 'react';\r\nimport 'react-responsive-carousel/lib/styles/carousel.min.css';\r\nimport { Carousel } from 'react-responsive-carousel';\r\nimport Product from '../components/product';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { listProducts } from '../actions/productActions';\r\nimport { listTopSellers } from '../actions/userActions';\r\nimport { Link, useParams } from 'react-router-dom';\r\n\r\nexport default function HomeScreen(props) {\r\n  const dispatch = useDispatch();\r\n  const productList = useSelector((state) => state.productList);\r\n  const { loading, error, products } = productList;\r\n\r\n  const userTopSellersList = useSelector((state) => state.userTopSellersList);\r\n  const {\r\n    loading: loadingSellers,\r\n    error: errorSellers,\r\n    users: sellers,\r\n  } = userTopSellersList;\r\n\r\n  useEffect(() => {\r\n    dispatch(listProducts({}));\r\n    dispatch(listTopSellers());\r\n  }, [dispatch]);\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h2>Top Sellers</h2>\r\n      {loadingSellers ? (\r\n        <LoadingBox></LoadingBox>\r\n      ) : errorSellers ? (\r\n        <MessageBox variant=\"danger\">{errorSellers}</MessageBox>\r\n      ) : (\r\n        <>\r\n          {sellers.length === 0 && <MessageBox>No Seller Found</MessageBox>}\r\n          <Carousel showArrows autoPlay showThumbs={false}>\r\n            {sellers.map((seller) => (\r\n              <div key={seller._id}>\r\n                <Link to={`/seller/${seller._id}`}>\r\n                  <img src={seller.seller.logo} alt={seller.seller.name} />\r\n                  <p className=\"legend\">{seller.seller.name}</p>\r\n                </Link>\r\n              </div>\r\n            ))}\r\n          </Carousel>\r\n        </>\r\n      )}\r\n      <h2>Featured Products</h2>\r\n      {loading ? (\r\n        <LoadingBox></LoadingBox>\r\n      ) : error ? (\r\n        <MessageBox variant=\"danger\">{error}</MessageBox>\r\n      ) : (\r\n        <>\r\n          {products.length === 0 && <MessageBox>No Product Found</MessageBox>}\r\n          <div className=\"row center\">\r\n            {products.map((product) => (\r\n              <Product key={product._id} product={product}></Product>\r\n            ))}\r\n          </div>\r\n       \r\n        </>\r\n      )}\r\n     \r\n    </div>\r\n  );\r\n}\r\n","G:\\Data Desktop\\amazon\\frontend\\src\\screens\\OrderScreen.js",["581","582","583","584","585"],"import Axios from 'axios';\r\nimport { PayPalButton } from 'react-paypal-button-v2';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { deliverOrder, detailsOrder, payOrder } from '../actions/orderActions';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport {\r\n  ORDER_DELIVER_RESET,\r\n} from '../constants/orderContants';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport default function OrderScreen(props) {\r\n  const history = useHistory();\r\n  const orderId = props.match.params.id;\r\n  const orderDetails = useSelector((state) => state.orderDetails);\r\n  const { order, loading, error } = orderDetails;\r\n  const userSignin = useSelector((state) => state.userSignin);\r\n  const { userInfo } = userSignin;\r\n\r\n  const orderPay = useSelector((state) => state.orderPay);\r\n  const {\r\n    loading: loadingPay,\r\n    error: errorPay,\r\n    success: successPay,\r\n  } = orderPay;\r\n\r\n  const orderDeliver = useSelector((state) => state.orderDeliver);\r\n  const {\r\n    loading: loadingDeliver,\r\n    error: errorDeliver,\r\n    success: successDeliver,\r\n  } = orderDeliver;\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    \r\n    if (\r\n      !order ||\r\n      successPay ||\r\n      successDeliver ||\r\n      (order && order._id !== orderId)\r\n    ) {\r\n  \r\n      dispatch({ type: ORDER_DELIVER_RESET });\r\n      dispatch(detailsOrder(orderId));\r\n    } else {\r\n      if (!order.isPaid) {\r\n        \r\n      }\r\n    }\r\n  }, [dispatch, orderId, successPay, successDeliver, order]);\r\n\r\n  const successPaymentHandler = async(e) => {\r\n    e.preventDefault();\r\n            \r\n        const options = {\r\n          key: 'rzp_live_E1QpQFtOfLjhss',\r\n          amount: (order.totalPrice * 100),\t\t\t\r\n          name: 'YashHealth',\r\n          description: 'Thanks for purchasing',\r\n          image: \"/yash.png\",\r\n          handler: function (response) {  \r\n            console.log(response.razorpay_payment_id)   \r\n            //alert(response.razorpay_payment_id)\r\n            axios.put(`http://localhost:5000/api/orders/${order._id}/pay`).then(res => {\r\n              if(res.status == 200) {\r\n            alert('Order Updated Successfully');\r\n              }\r\n            })\r\n          },\r\n          theme: {\r\n              'color': '#3399cc',\r\n          },\r\n        }\r\n      const paymentObject = new window.Razorpay(options)\r\n      paymentObject.open() \r\n      \r\n  };\r\n\r\n  const deliverHandler = () => {\r\n    dispatch(deliverOrder(order._id));\r\n    history.push('/thank-you');\r\n  };\r\n\r\n  return loading ? (\r\n    <LoadingBox></LoadingBox>\r\n  ) : error ? (\r\n    <MessageBox variant=\"danger\">{error}</MessageBox>\r\n  ) : (\r\n    <div>\r\n      <h1>{orderId}</h1>\r\n      <div className=\"row top\">\r\n        <div className=\"col-2\">\r\n          <ul>\r\n            <li>\r\n              <div className=\"card card-body\">\r\n                <h2>Shipping</h2>\r\n                <p>\r\n                  <strong>Name:</strong> {order.fullName} <br />\r\n                  <strong>Address: </strong> {order.address},\r\n                  {order.city},{' '}\r\n                  {order.postalCode},\r\n                  {order.country}\r\n                </p>\r\n                {order.isDelivered ? (\r\n                  <MessageBox variant=\"success\">\r\n                    Delivered at {order.deliveredAt}\r\n                  </MessageBox>\r\n                ) : (\r\n                  <MessageBox variant=\"danger\">Not Delivered</MessageBox>\r\n                )}\r\n              </div>\r\n            </li>\r\n            <li>\r\n              <div className=\"card card-body\">\r\n                <h2>Payment</h2>\r\n               \r\n                {order.isPaid ? (\r\n                  <MessageBox variant=\"success\">\r\n                    Paid at {order.paidAt}\r\n                  </MessageBox>\r\n                ) : (\r\n                  <MessageBox variant=\"danger\">Not Paid</MessageBox>\r\n                )}\r\n              </div>\r\n            </li>\r\n            <li>\r\n              <div className=\"card card-body\">\r\n                <h2>Order Items</h2>\r\n                <ul>\r\n                  {order.orderItems.map((item) => (\r\n                    <li key={item.product}>\r\n                      <div className=\"row\">\r\n                        <div>\r\n                          <img\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            className=\"small\"\r\n                          ></img>\r\n                        </div>\r\n                        <div className=\"min-30\">\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </div>\r\n\r\n                        <div>\r\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                        </div>\r\n                      </div>\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"col-1\">\r\n          <div className=\"card card-body\">\r\n            <ul>\r\n              <li>\r\n                <h2>Order Summary</h2>\r\n              </li>\r\n              <li>\r\n                <div className=\"row\">\r\n                  <div>Items</div>\r\n                  <div>${order.itemsPrice}</div>\r\n                </div>\r\n              </li>\r\n              <li>\r\n                <div className=\"row\">\r\n                  <div>Shipping</div>\r\n                  <div>${order.shippingPrice}</div>\r\n                </div>\r\n              </li>\r\n              <li>\r\n                <div className=\"row\">\r\n                  <div>Tax</div>\r\n                  <div>${order.taxPrice}</div>\r\n                </div>\r\n              </li>\r\n              <li>\r\n                <div className=\"row\">\r\n                  <div>\r\n                    <strong> Order Total</strong>\r\n                  </div>\r\n                  <div>\r\n                    <strong>${order.totalPrice}</strong>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n              {!order.isPaid && (\r\n                <li>\r\n                  { (\r\n                    <>\r\n                      {errorPay && (\r\n                        <MessageBox variant=\"danger\">{errorPay}</MessageBox>\r\n                      )}\r\n                      {loadingPay && <LoadingBox></LoadingBox>}\r\n\r\n                     \r\n                       <button\r\n                    type=\"button\"\r\n                    className=\"primary block\"\r\n                    onClick={successPaymentHandler}\r\n                  >\r\n                    Pay Online\r\n                  </button>\r\n                    </>\r\n                  )}\r\n                </li>\r\n              )}\r\n              {userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                <li>\r\n                  {loadingDeliver && <LoadingBox></LoadingBox>}\r\n                  {errorDeliver && (\r\n                    <MessageBox variant=\"danger\">{errorDeliver}</MessageBox>\r\n                  )}\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"primary block\"\r\n                    onClick={deliverHandler}\r\n                  >\r\n                    Deliver Order\r\n                  </button>\r\n                </li>\r\n              )}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","G:\\Data Desktop\\amazon\\frontend\\src\\screens\\PlaceOrderScreen.js",["586","587","588","589","590","591","592"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { createOrder } from \"../actions/orderActions\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport { ORDER_CREATE_RESET } from \"../constants/orderContants\";\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport axios from \"axios\";\r\nimport Razorpay from 'razorpay';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { set } from \"mongoose\";\r\nimport { Card } from \"react-bootstrap\";\r\n\r\nexport default function PlaceOrderScreen(props) {\r\n    const history = useHistory();\r\n    const [formData, setFormData] = useState();\r\n    const cart = useSelector((state) => state.cart);\r\n    if(!cart.paymentMethod) {\r\n        props.history.push('/payment');\r\n    }\r\n    const orderCreate = useSelector((state) => state.orderCreate);\r\n    const { loading, success, error, order } = orderCreate;\r\n    const toPrice = (num) => Number(num.toFixed(2));\r\n    cart.itemPrice = toPrice(cart.cartItems.reduce((a, c) => a + c.qty * c.price, 0)\r\n    );\r\n    cart.shippingPrice = cart.itemPrice > 100 ? toPrice(0) : toPrice(1);\r\n    cart.taxPrice = toPrice(0.15 * cart.itemPrice);\r\n    cart.totalPrice = cart.itemPrice + cart.shippingPrice + cart.taxPrice;\r\n    cart.fullName = cart.shippingAddress.fullName;\r\n    cart.address =  cart.shippingAddress.address;\r\n    cart.city = cart.shippingAddress.city;\r\n    cart.postalCode = cart.shippingAddress.postalCode;\r\n    cart.country = cart.shippingAddress.country;\r\n  \r\n    const dispatch = useDispatch();\r\n\r\n    const paymentHandler = (e) => {\r\n        dispatch(createOrder({ ...cart, orderItems: cart.cartItems, shippingAddress: cart.shippingAddress }));\r\n     };\r\n\r\n    useEffect(() => {\r\n        if(success)\r\n        {\r\n            props.history.push(`/order/${order._id}`);\r\n            dispatch({ type: ORDER_CREATE_RESET });\r\n        }\r\n    }, [dispatch, order, props.history, success]);\r\n    return(\r\n        <div>\r\n            <CheckoutSteps step1 step2 step3 step4></CheckoutSteps>\r\n            <div className=\"row top\">\r\n                <div className=\"col-2\">\r\n                    <ul>\r\n                        <li>\r\n                            <div className=\"card card-body\">\r\n                                <h2>Shipping</h2>\r\n                                <p>\r\n                                    <strong>Name:</strong> {cart.shippingAddress.fullName} <br />\r\n                                    <strong>Address:</strong> {cart.shippingAddress.address},\r\n                                    {cart.shippingAddress.city},  {cart.shippingAddress.postalCode},\r\n                                    {cart.shippingAddress.country}\r\n                                </p>\r\n                            </div>\r\n                        </li>\r\n                        \r\n                        <li>\r\n                        <div className=\"card card-body\">\r\n                                <h2>Order Items</h2>\r\n                                <ul>\r\n                            {\r\n                                cart.cartItems.map((item) => (\r\n                                    <li key={item.product}>\r\n                                        <div className=\"row\">\r\n                                            <div>\r\n                                                <img src={item.image} alt={item.name} className=\"small\"></img>\r\n                                            </div>\r\n                                            <div className=\"min-30\">\r\n                                                <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                             </div>\r\n                                             \r\n                                             <div>\r\n                                                 {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                                             </div>\r\n                                           \r\n                                        </div>\r\n                                    </li>\r\n                                ))\r\n                            }\r\n                        </ul>\r\n                            </div>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-1\">\r\n                        <div className=\"card card-body\">\r\n                            <ul>\r\n                                <li>\r\n                                    <h2>Order Summary</h2>\r\n                                </li>\r\n                                <li>\r\n                                    <div className=\"row\">\r\n                                        <div>Items</div>\r\n                                        <div>${cart.itemPrice.toFixed(2)}</div>\r\n                                    </div>\r\n                                </li>\r\n                                <li>\r\n                                    <div className=\"row\">\r\n                                        <div>Shipping</div>\r\n                                        <div>${cart.shippingPrice.toFixed(2)}</div>\r\n                                    </div>\r\n                                </li>\r\n                                <li>\r\n                                    <div className=\"row\">\r\n                                        <div>Tax</div>\r\n                                        <div>${cart.taxPrice.toFixed(2)}</div>\r\n                                    </div>\r\n                                </li>\r\n                                <li>\r\n                                    <div className=\"row\">\r\n                                        <div><strong> Order Total</strong></div>\r\n                                        <div>\r\n                                            <strong>\r\n                                                ${cart.totalPrice.toFixed(2)}\r\n                                            </strong>\r\n                                        </div>\r\n                                    </div>\r\n                                </li>\r\n                                <li>\r\n                                    <button \r\n                                        type=\"submit\" \r\n                                        onClick={paymentHandler} \r\n                                        className=\"course-payment-button\"\r\n                                       >\r\n                                        Place Order\r\n                                    </button>\r\n                                </li>\r\n                                {loading && <LoadingBox></LoadingBox>}\r\n                                {error && <MessageBox variant=\"danger\">{error}</MessageBox>}\r\n                            </ul>\r\n                        </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","G:\\Data Desktop\\amazon\\frontend\\src\\reducers\\orderReducers.js",[],"G:\\Data Desktop\\amazon\\frontend\\src\\reducers\\userReducers.js",[],"G:\\Data Desktop\\amazon\\frontend\\src\\screens\\SigninScreen.js",[],"G:\\Data Desktop\\amazon\\frontend\\src\\reducers\\cartReducers.js",[],"G:\\Data Desktop\\amazon\\frontend\\src\\screens\\ProfileScreen.js",[],"G:\\Data Desktop\\amazon\\frontend\\src\\screens\\PaymentMethodScreen.js",["593"],"import { PromiseProvider } from \"mongoose\";\r\nimport React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport { savePaymentMethod } from \"../actions/cartActions\";\r\n \r\nexport default function PaymentMethodScreen(props) {\r\n    const cart = useSelector((state) => state.cart);\r\n    const { shippingAddress } = cart;\r\n    if(!shippingAddress.address) {\r\n        props.history.push('/shipping');\r\n    }\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal');\r\n    const dispatch = useDispatch();\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(savePaymentMethod(paymentMethod));\r\n        props.history.push('/placeorder');\r\n    };\r\n    return(\r\n        <div>\r\n            <CheckoutSteps step1 step2 step3></CheckoutSteps>\r\n            <form className=\"form\" onSubmit={submitHandler}>\r\n                <div>\r\n                    <h1>Payment Method</h1>\r\n                </div>\r\n                <div>\r\n                    <div>\r\n                        <input \r\n                            type=\"radio\" \r\n                            id=\"paypal\" \r\n                            value=\"paypal\" \r\n                            name=\"paymentMethod\" \r\n                            required \r\n                            checked \r\n                            onChnage={(e) => setPaymentMethod(e.target.value)}>\r\n                        </input>\r\n                        <label htmlFor=\"paypal\">Paypal</label>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div>\r\n                        <input \r\n                            type=\"radio\" \r\n                            id=\"stripe\" \r\n                            value=\"Stripe\" \r\n                            name=\"paymentMethod\" \r\n                            required \r\n                            onChnage={(e) => setPaymentMethod(e.target.value)}>\r\n                        </input>\r\n                        <label htmlFor=\"stripe\">Stripe</label>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <button className=\"primary\" type=\"submit\">\r\n                        Continue\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}","G:\\Data Desktop\\amazon\\frontend\\src\\screens\\ProductScreen.js",[],"G:\\Data Desktop\\amazon\\frontend\\src\\screens\\UserListScreen.js",[],"G:\\Data Desktop\\amazon\\frontend\\src\\screens\\ThankyouScreen.js",[],"G:\\Data Desktop\\amazon\\frontend\\src\\screens\\SliderScreen.js",["594"],"import React, {useEffect} from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport \"react-alice-carousel/lib/alice-carousel.css\";\r\nimport AliceCarousel from 'react-alice-carousel';\r\nimport { listProducts } from \"../actions/productActions\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nconst SliderScreen = ()=> {\r\n\r\n      const responsive = {\r\n          0: { items: 1 },\r\n          568: { items: 3 },\r\n          1024: { items: 3 },\r\n      };\r\n      const dispatch = useDispatch();\r\n      const productList = useSelector((state) => state.productList);\r\n      const { products } = productList;\r\n      \r\n      \r\n      useEffect(() =>{\r\n        dispatch(listProducts());\r\n      }, [dispatch])\r\n      \r\n      return (\r\n        <>\r\n        <h3></h3>\r\n        <AliceCarousel responsive={responsive} \r\n            disableButtonsControls={true} \r\n            disableDotsControls={true} \r\n            autoPlay={true} infinite={true} \r\n            autoPlayInterval={1800}>\r\n                {\r\n                    products && products.map((obj) => {\r\n                        return(\r\n                            <Card key={obj._id} className='com-md-12 col-12'>\r\n                                 <Card.Img variant=\"top\" height='200' src={obj.slider} alt={obj.name}/>\r\n                            </Card>\r\n                        )\r\n                    })\r\n                }\r\n          </AliceCarousel>\r\n            </>\r\n      ) \r\n  }\r\n\r\nexport default SliderScreen;","G:\\Data Desktop\\amazon\\frontend\\src\\screens\\OrderHistoryScreen.js",["595"],"import { PromiseProvider } from \"mongoose\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { listOrderMine } from \"../actions/orderActions\";\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\n\r\nexport default function OrderHistoryScreen(props) {\r\n    const orderMineList = useSelector((state) => state.orderMineList);\r\n    const { loading, error, orders } = orderMineList;\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(listOrderMine());\r\n    }, [dispatch]);\r\n    return (\r\n        <div>\r\n            <h1>Order History</h1>\r\n            {\r\n                loading? <LoadingBox></LoadingBox> :\r\n                error ? <MessageBox variant=\"danger\">{error}</MessageBox>\r\n                :\r\n                (\r\n                    <table className=\"table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>Name</th>\r\n                                <th>DATE</th>\r\n                                <th>TOTAL</th>\r\n                                <th>PAID</th>\r\n                                <th>DELIVERED</th>\r\n                                <th>ACTIONS</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {orders.map((order) => (\r\n              <tr key={order._id}>\r\n                <td>{order._id}</td>\r\n                <td>{order.fullName}</td>\r\n                <td>{order.createdAt}</td>\r\n                <td>{order.totalPrice}</td>\r\n                <td>{order.isPaid ? order.paidAt : 'No'}</td>\r\n                <td>\r\n                  {order.isDelivered\r\n                    ? order.deliveredAt\r\n                    : 'No'}\r\n                </td>\r\n                <td>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"small\"\r\n                    onClick={() => {\r\n                      props.history.push(`/order/${order._id}`);\r\n                    }}\r\n                  >\r\n                    Details\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n                        </tbody>\r\n                    </table>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}","G:\\Data Desktop\\amazon\\frontend\\src\\screens\\UserEditScreen.js",[],"G:\\Data Desktop\\amazon\\frontend\\src\\screens\\SellerScreen.js",[],"G:\\Data Desktop\\amazon\\frontend\\src\\screens\\DashBoardScreen.js",[],"G:\\Data Desktop\\amazon\\frontend\\src\\screens\\RegisterScreen.js",[],"G:\\Data Desktop\\amazon\\frontend\\src\\screens\\OrderListScreen.js",[],"G:\\Data Desktop\\amazon\\frontend\\src\\screens\\SupportScreen.js",["596"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport socketIOClient from 'socket.io-client';\r\nimport { useSelector } from 'react-redux';\r\nimport MessageBox from '../components/MessageBox';\r\n\r\nlet allUsers = [];\r\nlet allMessages = [];\r\nlet allSelectedUser = {};\r\nconst ENDPOINT =\r\n  window.location.host.indexOf('localhost') >= 0\r\n    ? 'http://127.0.0.1:1000'\r\n    : window.location.host;\r\n\r\nexport default function SupportScreen() {\r\n  const [selectedUser, setSelectedUser] = useState({});\r\n  const [socket, setSocket] = useState(null);\r\n  const uiMessagesRef = useRef(null);\r\n  const [messageBody, setMessageBody] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n  const [users, setUsers] = useState([]);\r\n  const userSignin = useSelector((state) => state.userSignin);\r\n  const { userInfo } = userSignin;\r\n\r\n  useEffect(() => {\r\n    if (uiMessagesRef.current) {\r\n      uiMessagesRef.current.scrollBy({\r\n        top: uiMessagesRef.current.clientHeight,\r\n        left: 0,\r\n        behavior: 'smooth',\r\n      });\r\n    }\r\n\r\n    if (!socket) {\r\n      const sk = socketIOClient(ENDPOINT);\r\n      setSocket(sk);\r\n      sk.emit('onLogin', {\r\n        _id: userInfo._id,\r\n        name: userInfo.name,\r\n        isAdmin: userInfo.isAdmin,\r\n      });\r\n      sk.on('message', (data) => {\r\n        if (allSelectedUser._id === data._id) {\r\n          allMessages = [...allMessages, data];\r\n        } else {\r\n          const existUser = allUsers.find((user) => user._id === data._id);\r\n          if (existUser) {\r\n            allUsers = allUsers.map((user) =>\r\n              user._id === existUser._id ? { ...user, unread: true } : user\r\n            );\r\n            setUsers(allUsers);\r\n          }\r\n        }\r\n        setMessages(allMessages);\r\n      });\r\n      sk.on('updateUser', (updatedUser) => {\r\n        const existUser = allUsers.find((user) => user._id === updatedUser._id);\r\n        if (existUser) {\r\n          allUsers = allUsers.map((user) =>\r\n            user._id === existUser._id ? updatedUser : user\r\n          );\r\n          setUsers(allUsers);\r\n        } else {\r\n          allUsers = [...allUsers, updatedUser];\r\n          setUsers(allUsers);\r\n        }\r\n      });\r\n      sk.on('listUsers', (updatedUsers) => {\r\n        allUsers = updatedUsers;\r\n        setUsers(allUsers);\r\n      });\r\n      sk.on('selectUser', (user) => {\r\n        allMessages = user.messages;\r\n        setMessages(allMessages);\r\n      });\r\n    }\r\n  }, [messages, socket, users]);\r\n\r\n  const selectUser = (user) => {\r\n    allSelectedUser = user;\r\n    setSelectedUser(allSelectedUser);\r\n    const existUser = allUsers.find((x) => x._id === user._id);\r\n    if (existUser) {\r\n      allUsers = allUsers.map((x) =>\r\n        x._id === existUser._id ? { ...x, unread: false } : x\r\n      );\r\n      setUsers(allUsers);\r\n    }\r\n    socket.emit('onUserSelected', user);\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (!messageBody.trim()) {\r\n      alert('Error. Please type message.');\r\n    } else {\r\n      allMessages = [\r\n        ...allMessages,\r\n        { body: messageBody, name: userInfo.name },\r\n      ];\r\n      setMessages(allMessages);\r\n      setMessageBody('');\r\n      setTimeout(() => {\r\n        socket.emit('onMessage', {\r\n          body: messageBody,\r\n          name: userInfo.name,\r\n          isAdmin: userInfo.isAdmin,\r\n          _id: selectedUser._id,\r\n        });\r\n      }, 1000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"row top full-container\">\r\n      <div className=\"col-1 support-users\">\r\n        {users.filter((x) => x._id !== userInfo._id).length === 0 && (\r\n          <MessageBox>No Online User Found</MessageBox>\r\n        )}\r\n        <ul>\r\n          {users\r\n            .filter((x) => x._id !== userInfo._id)\r\n            .map((user) => (\r\n              <li\r\n                key={user._id}\r\n                className={user._id === selectedUser._id ? '  selected' : '  '}\r\n              >\r\n                <button\r\n                  className=\"block\"\r\n                  type=\"button\"\r\n                  onClick={() => selectUser(user)}\r\n                >\r\n                  {user.name}\r\n                </button>\r\n                <span\r\n                  className={\r\n                    user.unread ? 'unread' : user.online ? 'online' : 'offline'\r\n                  }\r\n                />\r\n              </li>\r\n            ))}\r\n        </ul>\r\n      </div>\r\n      <div className=\"col-3 support-messages\">\r\n        {!selectedUser._id ? (\r\n          <MessageBox>Select a user to start chat</MessageBox>\r\n        ) : (\r\n          <div>\r\n            <div className=\"row\">\r\n              <strong>Chat with {selectedUser.name} </strong>\r\n            </div>\r\n            <ul ref={uiMessagesRef}>\r\n              {messages.length === 0 && <li>No message.</li>}\r\n              {messages.map((msg, index) => (\r\n                <li key={index}>\r\n                  <strong>{`${msg.name}: `}</strong> {msg.body}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n            <div>\r\n              <form onSubmit={submitHandler} className=\"row\">\r\n                <input\r\n                  value={messageBody}\r\n                  onChange={(e) => setMessageBody(e.target.value)}\r\n                  type=\"text\"\r\n                  placeholder=\"type message\"\r\n                />\r\n                <button type=\"submit\">Send</button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","G:\\Data Desktop\\amazon\\frontend\\src\\components\\AdminRoute.js",[],"G:\\Data Desktop\\amazon\\frontend\\src\\components\\SellerRoute.js",[],"G:\\Data Desktop\\amazon\\frontend\\src\\components\\PrivateRoute.js",[],"G:\\Data Desktop\\amazon\\frontend\\src\\components\\LoadingBox.js",[],"G:\\Data Desktop\\amazon\\frontend\\src\\components\\MessageBox.js",[],"G:\\Data Desktop\\amazon\\frontend\\src\\screens\\SearchScreen.js",[],"G:\\Data Desktop\\amazon\\frontend\\src\\components\\SearchBox.js",[],"G:\\Data Desktop\\amazon\\frontend\\src\\screens\\ProductEditScreen.js",[],"G:\\Data Desktop\\amazon\\frontend\\src\\screens\\ShippingAddressScreen.js",[],"G:\\Data Desktop\\amazon\\frontend\\src\\screens\\ProductListScreen.js",["597"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useHistory, useParams } from 'react-router-dom';\r\nimport {\r\n  createProduct,\r\n  deleteProduct,\r\n  listProducts,\r\n} from '../actions/productActions';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport {\r\n  PRODUCT_CREATE_RESET,\r\n  PRODUCT_DELETE_RESET,\r\n} from '../constants/productConstants';\r\n\r\nexport default function ProductListScreen(props) {\r\n  const { pageNumber = 1 } = useParams();\r\n  const history = useHistory();\r\n  const sellerMode = props.match.path.indexOf('/seller') >= 0;\r\n  const productList = useSelector((state) => state.productList);\r\n  const { loading, error, products, page, pages } = productList;\r\n\r\n  const productCreate = useSelector((state) => state.productCreate);\r\n  const {\r\n    loading: loadingCreate,\r\n    error: errorCreate,\r\n    success: successCreate,\r\n    product: createdProduct,\r\n  } = productCreate;\r\n\r\n  const productDelete = useSelector((state) => state.productDelete);\r\n  const {\r\n    loading: loadingDelete,\r\n    error: errorDelete,\r\n    success: successDelete,\r\n  } = productDelete;\r\n  const userSignin = useSelector((state) => state.userSignin);\r\n  const { userInfo } = userSignin;\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (successCreate) {\r\n      dispatch({ type: PRODUCT_CREATE_RESET });\r\n      props.history.push(`/product/${createdProduct._id}/edit`);\r\n    }\r\n    if (successDelete) {\r\n      dispatch({ type: PRODUCT_DELETE_RESET });\r\n    }\r\n    dispatch(\r\n      listProducts({ seller: sellerMode ? userInfo._id : '', pageNumber })\r\n    );\r\n  }, [\r\n    createdProduct,\r\n    dispatch,\r\n    props.history,\r\n    sellerMode,\r\n    successCreate,\r\n    successDelete,\r\n    userInfo._id,\r\n    pageNumber,\r\n  ]);\r\n\r\n  const deleteHandler = (product) => {\r\n    if (window.confirm('Are you sure to delete?')) {\r\n      dispatch(deleteProduct(product._id));\r\n    }\r\n  };\r\n  const createHandler = () => {\r\n    history.push('./create')\r\n  };\r\n  return (\r\n    <div>\r\n      <div className=\"row\">\r\n        <h1>Products</h1>\r\n        <button type=\"button\" className=\"primary\" onClick={createHandler}>\r\n          Create Product\r\n        </button>\r\n      </div>\r\n\r\n      {loadingDelete && <LoadingBox></LoadingBox>}\r\n      {errorDelete && <MessageBox variant=\"danger\">{errorDelete}</MessageBox>}\r\n\r\n      {loadingCreate && <LoadingBox></LoadingBox>}\r\n      {errorCreate && <MessageBox variant=\"danger\">{errorCreate}</MessageBox>}\r\n      {loading ? (\r\n        <LoadingBox></LoadingBox>\r\n      ) : error ? (\r\n        <MessageBox variant=\"danger\">{error}</MessageBox>\r\n      ) : (\r\n        <>\r\n          <table className=\"table\">\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>NAME</th>\r\n                <th>PRICE</th>\r\n                <th>CATEGORY</th>\r\n                <th>BRAND</th>\r\n                <th>ACTIONS</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {products.map((product) => (\r\n                <tr key={product._id}>\r\n                  <td>{product._id}</td>\r\n                  <td>{product.name}</td>\r\n                  <td>{product.price}</td>\r\n                  <td>{product.category}</td>\r\n                  <td>{product.brand}</td>\r\n                  <td>\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"small\"\r\n                      onClick={() =>\r\n                        props.history.push(`/product/${product._id}/edit`)\r\n                      }\r\n                    >\r\n                      Edit\r\n                    </button>\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"small\"\r\n                      onClick={() => deleteHandler(product)}\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n          <div className=\"row center pagination\">\r\n            {[...Array(pages).keys()].map((x) => (\r\n              <Link\r\n                className={x + 1 === page ? 'active' : ''}\r\n                key={x + 1}\r\n                to={`/productlist/pageNumber/${x + 1}`}\r\n              >\r\n                {x + 1}\r\n              </Link>\r\n            ))}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","G:\\Data Desktop\\amazon\\frontend\\src\\actions\\productActions.js",["598","599","600","601"],"import Axios from 'axios';\r\nimport { PRODUCT_CREATE_FAIL, PRODUCT_CREATE_REQUEST, PRODUCT_CREATE_SUCCESS, \r\n  ADD_PRODUCT_FAIL, ADD_PRODUCT_REQUEST, ADD_PRODUCT_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, \r\n  PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, \r\n  ALL_PRODUCT_LIST_REQUEST,ALL_PRODUCT_LIST_SUCCESS,ALL_PRODUCT_LIST_FAIL,\r\n  PRODUCT_UPDATE_FAIL, PRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_FAIL, PRODUCT_CATEGORY_LIST_SUCCESS, PRODUCT_CATEGORY_LIST_REQUEST, PRODUCT_CATEGORY_LIST_FAIL,\r\n  PRODUCT_REVIEW_CREATE_FAIL,PRODUCT_REVIEW_CREATE_REQUEST,PRODUCT_REVIEW_CREATE_SUCCESS } from '../constants/productConstants'\r\n\r\n  export const listProducts = ({\r\n    pageNumber = '',\r\n    seller = '',\r\n    name = '',\r\n    category = '',\r\n    order = '',\r\n    min = 0,\r\n    max = 0,\r\n    rating = 0,\r\n  }) => async (dispatch) => {\r\n    dispatch({\r\n      type: PRODUCT_LIST_REQUEST,\r\n    });\r\n    try {\r\n      const { data } = await Axios.get(\r\n        `/api/products?pageNumber=${pageNumber}&seller=${seller}&name=${name}&category=${category}&min=${min}&max=${max}&rating=${rating}&order=${order}`\r\n      );\r\n      dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      dispatch({ type: PRODUCT_LIST_FAIL, payload: error.message });\r\n    }\r\n  };\r\n  \r\nexport const listProductCategories = () => async (dispatch) =>{\r\n  dispatch({\r\n      type: PRODUCT_CATEGORY_LIST_REQUEST\r\n  });\r\n  try {\r\n      const { data } = await Axios.get(`/api/products/categories`);\r\n      dispatch({ type: PRODUCT_CATEGORY_LIST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n      dispatch({ type:PRODUCT_CATEGORY_LIST_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\n\r\nexport const detailsProduct = (productId) => async (dispatch) =>{\r\n    dispatch({\r\n        type: PRODUCT_DETAILS_REQUEST, payload: productId });\r\n    try {\r\n        const { data } = await Axios.get(`/api/products/${productId}`);\r\n        dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({ \r\n            type: PRODUCT_DETAILS_FAIL, \r\n            payload: \r\n            error.response && error.response.data.message \r\n            ? error.response.data.message \r\n            : error.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const addProduct = (name, seller, image, category, price, brand, countInStock, rating, numReview, description) => async (dispatch) => {\r\n  dispatch({ type: ADD_PRODUCT_REQUEST, payload: { name, seller, image, category, price, brand, countInStock, rating, numReview, description } });\r\n  try {\r\n    const { data } = await Axios.post('/api/products/create', { name, seller, image, category, price, brand, countInStock, rating, numReview, description });\r\n    dispatch({ type: ADD_PRODUCT_SUCCESS, payload: data });\r\n    localStorage.setItem('productInfo', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ADD_PRODUCT_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n  dispatch({ type: PRODUCT_CREATE_REQUEST });\r\n  const {\r\n    userSignin: { userInfo },\r\n  } = getState();\r\n  try {\r\n    const { data } = await Axios.post(\r\n      '/api/products',\r\n      {},\r\n      {\r\n        headers: { Authorization: `Sanju ${userInfo.token}` },\r\n      }\r\n    );\r\n    dispatch({\r\n      type: PRODUCT_CREATE_SUCCESS,\r\n      payload: data.product,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: PRODUCT_CREATE_FAIL, payload: message });\r\n  }\r\n};\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n  dispatch({ type: PRODUCT_UPDATE_REQUEST, payload: product });\r\n  const {\r\n    userSignin: { userInfo },\r\n  } = getState();\r\n  try {\r\n    const { data } = await Axios.put(`/api/products/${product._id}`, product, {\r\n      headers: { Authorization: `Sanju ${userInfo.token}` },\r\n    });\r\n    dispatch({ type: PRODUCT_UPDATE_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: PRODUCT_UPDATE_FAIL, error: message });\r\n  }\r\n};\r\nexport const deleteProduct = (productId) => async (dispatch, getState) => {\r\n  dispatch({ type: PRODUCT_DELETE_REQUEST, payload: productId });\r\n  const {\r\n    userSignin: { userInfo },\r\n  } = getState();\r\n  try {\r\n    const { data } = Axios.delete(`/api/products/${productId}`, {\r\n      headers: { Authorization: `Bearer ${userInfo.token}` },\r\n    });\r\n    dispatch({ type: PRODUCT_DELETE_SUCCESS });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: PRODUCT_DELETE_FAIL, payload: message });\r\n  }\r\n};\r\n\r\nexport const createReview = (productId, review) => async (dispatch, getState) => {\r\n  dispatch({ type: PRODUCT_REVIEW_CREATE_REQUEST });\r\n  const {\r\n    userSignin: { userInfo },\r\n  } = getState();\r\n  try {\r\n    const { data } = await Axios.post(\r\n      `/api/products/${productId}/reviews`,\r\n      review,\r\n      {\r\n        headers: { Authorization: `Sanju ${userInfo.token}` },\r\n      }\r\n    );\r\n    dispatch({\r\n      type: PRODUCT_REVIEW_CREATE_SUCCESS,\r\n      payload: data.review,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: PRODUCT_REVIEW_CREATE_FAIL, payload: message });\r\n  }\r\n};\r\n","G:\\Data Desktop\\amazon\\frontend\\src\\components\\ChatBox.js",["602"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport socketIOClient from 'socket.io-client';\r\n\r\nconst ENDPOINT =\r\n  window.location.host.indexOf('localhost') >= 0\r\n    ? 'http://127.0.0.1:1000'\r\n    : window.location.host;\r\n\r\nexport default function ChatBox(props) {\r\n  const { userInfo } = props;\r\n  const [socket, setSocket] = useState(null);\r\n  const uiMessagesRef = useRef(null);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [messageBody, setMessageBody] = useState('');\r\n  const [messages, setMessages] = useState([\r\n    { name: 'Admin', body: 'Hello there, Please ask your question.' },\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (uiMessagesRef.current) {\r\n      uiMessagesRef.current.scrollBy({\r\n        top: uiMessagesRef.current.clientHeight,\r\n        left: 0,\r\n        behavior: 'smooth',\r\n      });\r\n    }\r\n    if (socket) {\r\n      socket.emit('onLogin', {\r\n        _id: userInfo._id,\r\n        name: userInfo.name,\r\n        isAdmin: userInfo.isAdmin,\r\n      });\r\n      socket.on('message', (data) => {\r\n        setMessages([...messages, { body: data.body, name: data.name }]);\r\n      });\r\n    }\r\n  }, [messages, isOpen, socket]);\r\n\r\n  const supportHandler = () => {\r\n    setIsOpen(true);\r\n    console.log(ENDPOINT);\r\n    const sk = socketIOClient(ENDPOINT);\r\n    setSocket(sk);\r\n  };\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (!messageBody.trim()) {\r\n      alert('Error. Please type message.');\r\n    } else {\r\n      setMessages([...messages, { body: messageBody, name: userInfo.name }]);\r\n      setMessageBody('');\r\n      setTimeout(() => {\r\n        socket.emit('onMessage', {\r\n          body: messageBody,\r\n          name: userInfo.name,\r\n          isAdmin: userInfo.isAdmin,\r\n          _id: userInfo._id,\r\n        });\r\n      }, 1000);\r\n    }\r\n  };\r\n  const closeHandler = () => {\r\n    setIsOpen(false);\r\n  };\r\n  return (\r\n    <div className=\"chatbox\">\r\n      {!isOpen ? (\r\n        <button type=\"button\" onClick={supportHandler}>\r\n          <i className=\"fa fa-support\" />\r\n        </button>\r\n      ) : (\r\n        <div className=\"card card-body\">\r\n          <div className=\"row\">\r\n            <strong>Support </strong>\r\n            <button type=\"button\" onClick={closeHandler}>\r\n              <i className=\"fa fa-close\" />\r\n            </button>\r\n          </div>\r\n          <ul ref={uiMessagesRef}>\r\n            {messages.map((msg, index) => (\r\n              <li key={index}>\r\n                <strong>{`${msg.name}: `}</strong> {msg.body}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <div>\r\n            <form onSubmit={submitHandler} className=\"row\">\r\n              <input\r\n                value={messageBody}\r\n                onChange={(e) => setMessageBody(e.target.value)}\r\n                type=\"text\"\r\n                placeholder=\"type message\"\r\n              />\r\n              <button type=\"submit\">Send</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","G:\\Data Desktop\\amazon\\frontend\\src\\screens\\MapScreen.js",[],"G:\\Data Desktop\\amazon\\frontend\\src\\actions\\userActions.js",[],"G:\\Data Desktop\\amazon\\frontend\\src\\actions\\orderActions.js",["603","604"],"import Axios from 'axios';\r\nimport { CART_EMPTY } from '../constants/cartConstants';\r\nimport { ORDER_CREATE_REQUEST, ORDER_CREATE_FAIL, ORDER_CREATE_SUCCESS, ORDER_CREATE_RESET, \r\n    ORDER_DETAILS_REQUEST, ORDER_DETAILS_FAIL, ORDER_DETAILS_SUCCESS, \r\n    ORDER_PAY_REQUEST, ORDER_PAY_FAIL, ORDER_PAY_SUCCESS, \r\n    ORDER_MINE_LIST_REQUEST, ORDER_MINE_LIST_SUCCESS, ORDER_MINE_LIST_FAIL,\r\n    ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_LIST_FAIL,\r\n    ORDER_DELETE_REQUEST,ORDER_DELETE_SUCCESS, ORDER_DELETE_FAIL,\r\n    ORDER_SUMMARY_REQUEST, ORDER_SUMMARY_SUCCESS,ORDER_SUMMARY_FAIL,\r\n    ORDER_DELIVER_REQUEST, ORDER_DELIVER_SUCCESS, ORDER_DELIVER_FAIL} from '../constants/orderContants';\r\n\r\n    export const createOrder = (order) => async (dispatch, getState) => {\r\n      dispatch({ type: ORDER_CREATE_REQUEST, payload: order });\r\n      try {\r\n        const {\r\n          userSignin: { userInfo },\r\n        } = getState();\r\n        const { data } = await Axios.post('http://localhost:5000/api/orders/', order, {\r\n          headers: {\r\n            Authorization: `Sanju ${userInfo.token}`,\r\n          },\r\n        });\r\n        dispatch({ type: ORDER_CREATE_SUCCESS, payload: data.order });\r\n        dispatch({ type: CART_EMPTY });\r\n        localStorage.removeItem('cartItems');\r\n      } catch (error) {\r\n        dispatch({\r\n          type: ORDER_CREATE_FAIL,\r\n          payload:\r\n            error.response && error.response.data.message\r\n              ? error.response.data.message\r\n              : error.message,\r\n        });\r\n      }\r\n    };\r\n\r\n    export const detailsOrder = (orderId) => async (dispatch, getState) => {\r\n      dispatch({ type: ORDER_DETAILS_REQUEST, payload: orderId });\r\n      const {\r\n        userSignin: { userInfo },\r\n      } = getState();\r\n      try {\r\n        const { data } = await Axios.get(`http://localhost:5000/api/orders/${orderId}`, {\r\n          headers: { Authorization: `Sanju ${userInfo.token}` },\r\n        });\r\n        dispatch({ type: ORDER_DETAILS_SUCCESS, payload: data });\r\n      } catch (error) {\r\n        const message =\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message;\r\n        dispatch({ type: ORDER_DETAILS_FAIL, payload: message });\r\n      }\r\n    };\r\n\r\nexport const payOrder = (order, paymentResult) => async (dispatch, getState) => {\r\n    dispatch({ type: ORDER_PAY_REQUEST, payload: { order, paymentResult } });\r\n    const {userSignin: { userInfo },} = getState();\r\n    try {\r\n        const { data } = Axios.put(`/api/orders/${order.id}/pay`, paymentResult, {\r\n            headers: { Authorization: `Sanju ${userInfo.token}`, },\r\n        });\r\n        dispatch({ type: ORDER_PAY_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        const message = \r\n        error.response && error.response.data.message \r\n        ? error.response.data.message \r\n        : error.message;\r\n        dispatch({type: ORDER_PAY_FAIL, payload: message});\r\n    }\r\n};\r\n\r\nexport const listOrderMine = () => async (dispatch, getState) => {\r\n    dispatch({ type: ORDER_MINE_LIST_REQUEST });\r\n    const {\r\n      userSignin: { userInfo },\r\n    } = getState();\r\n    try {\r\n      const { data } = await Axios.get('/api/orders/mine', {\r\n        headers: {\r\n          Authorization: `Sanju ${userInfo.token}`,\r\n        },\r\n      });\r\n      dispatch({ type: ORDER_MINE_LIST_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      dispatch({ type: ORDER_MINE_LIST_FAIL, payload: message });\r\n    }\r\n  };\r\n\r\n  export const listOrders = ({ seller = '' }) => async (dispatch, getState) => {\r\n    dispatch({ type: ORDER_LIST_REQUEST });\r\n    const {\r\n      userSignin: { userInfo },\r\n    } = getState();\r\n    try {\r\n      const { data } = await Axios.get(`/api/orders?seller=${seller}`, {\r\n        headers: { Authorization: `Sanju ${userInfo.token}` },\r\n      });\r\n      console.log(data);\r\n      dispatch({ type: ORDER_LIST_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      dispatch({ type: ORDER_LIST_FAIL, payload: message });\r\n    }\r\n  };\r\n\r\n  \r\n\r\n  export const deleteOrder = (orderId) => async (dispatch, getState) => {\r\n    dispatch({ type: ORDER_DELETE_REQUEST, payload: orderId });\r\n    const {\r\n      userSignin: { userInfo },\r\n    } = getState();\r\n    try {\r\n      const { data } = Axios.delete(`/api/orders/${orderId}`, {\r\n        headers: { Authorization: `Sanju ${userInfo.token}` },\r\n      });\r\n      dispatch({ type: ORDER_DELETE_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      dispatch({ type: ORDER_DELETE_FAIL, payload: message });\r\n    }\r\n  };\r\n\r\n  export const summaryOrder = () => async (dispatch, getState) => {\r\n    dispatch({ type: ORDER_SUMMARY_REQUEST });\r\n    const {\r\n      userSignin: { userInfo },\r\n    } = getState();\r\n    try {\r\n      const { data } = await Axios.get('/api/orders/summary', {\r\n        headers: { Authorization: `Sanju ${userInfo.token}` },\r\n      });\r\n      dispatch({ type: ORDER_SUMMARY_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: ORDER_CREATE_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n  export const deliverOrder = (orderId) => async (dispatch, getState) => {\r\n    dispatch({ type: ORDER_DELIVER_REQUEST, payload: orderId });\r\n    const {\r\n      userSignin: { userInfo },\r\n    } = getState();\r\n    try {\r\n      const { data } = Axios.put(\r\n        `/api/orders/${orderId}/deliver`,\r\n        {},\r\n        {\r\n          headers: { Authorization: `Sanju ${userInfo.token}` },\r\n        }\r\n      );\r\n      dispatch({ type: ORDER_DELIVER_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      dispatch({ type: ORDER_DELIVER_FAIL, payload: message });\r\n    }\r\n  };\r\n  \r\n\r\n \r\n  ","G:\\Data Desktop\\amazon\\frontend\\src\\components\\CheckoutSteps.js",[],"G:\\Data Desktop\\amazon\\frontend\\src\\utils.js",[],"G:\\Data Desktop\\amazon\\frontend\\src\\components\\rating.js",[],"G:\\Data Desktop\\amazon\\frontend\\src\\components\\product.js",[],"G:\\Data Desktop\\amazon\\frontend\\src\\actions\\cartActions.js",[],"G:\\Data Desktop\\amazon\\frontend\\src\\constants\\cartConstants.js",[],"G:\\Data Desktop\\amazon\\frontend\\src\\constants\\orderContants.js",[],"G:\\Data Desktop\\amazon\\frontend\\src\\constants\\productConstants.js",[],"G:\\Data Desktop\\amazon\\frontend\\src\\constants\\userConstants.js",[],"G:\\Data Desktop\\amazon\\frontend\\src\\screens\\ProductCreateScreen.js",["605"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport { addProduct } from '../actions/productActions';\r\nimport Axios from 'axios';\r\n\r\nexport default function ProductCreateScreen(props) {\r\n  const [name, setName] = useState('');\r\n  const [seller, setSeller] = useState('');\r\n  const [image, setImage] = useState('');\r\n  const [price, setPrice] = useState('');\r\n  const [category, setCategory] = useState('');\r\n  const [brand, setBrand] = useState('');\r\n  const [countInStock, setCountInStock] = useState('');\r\n  const [rating, setRating] = useState('');\r\n  const [numReview, setNumReview] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [loadingUpload, setLoadingUpload] = useState(false);\r\n  const [errorUpload, setErrorUpload] = useState('');\r\n\r\n  const userSignin = useSelector((state) => state.userSignin);\r\n  const { userInfo } = userSignin;\r\n\r\n  const createProduct = useSelector((state) => state.createProduct);\r\n  const { productInfo, loading, error } = createProduct;\r\n\r\n  const dispatch = useDispatch();\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n      {\r\n      dispatch(addProduct(name, seller, image, category, price, brand, countInStock, rating, numReview, description));      \r\n      }\r\n  };\r\n  useEffect(() => {\r\n    if (productInfo) {\r\n      props.history.push('./productlist');\r\n    }\r\n  }, [props.history,productInfo]);\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0];\r\n    const bodyFormData = new FormData();\r\n    bodyFormData.append('image', file);\r\n    setLoadingUpload(true);\r\n    try {\r\n      const { data } = await Axios.post('/api/uploads', bodyFormData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n          Authorization: `Sanju ${userInfo.token}`,\r\n        },\r\n      });\r\n      setImage(data);\r\n      setLoadingUpload(false);\r\n    } catch (error) {\r\n      setErrorUpload(error.message);\r\n      setLoadingUpload(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form className=\"form\" onSubmit={submitHandler}>\r\n        <div>\r\n          <h1>Create Product</h1>\r\n        </div>\r\n        {loading && <LoadingBox></LoadingBox>}\r\n        {error && <MessageBox variant=\"danger\">{error}</MessageBox>}\r\n        <div>\r\n          <label htmlFor=\"name\">Name</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"name\"\r\n            placeholder=\"Enter product name\"\r\n            required\r\n            onChange={(e) => setName(e.target.value)}\r\n          ></input>\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"seller\">Seller</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"seller\"\r\n            placeholder=\"Enter user name\"\r\n            required\r\n            onChange={(e) => setSeller(e.target.value)}\r\n          ></input>\r\n        </div>\r\n        <div>\r\n              <label htmlFor=\"imageFile\">Image File</label>\r\n              <input\r\n                type=\"file\"\r\n                id=\"imageFile\"\r\n                label=\"Choose Image\"\r\n                onChange={uploadFileHandler}\r\n              ></input>\r\n              {loadingUpload && <LoadingBox></LoadingBox>}\r\n              {errorUpload && (\r\n                <MessageBox variant=\"danger\">{errorUpload}</MessageBox>\r\n              )}\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"confirmPassword\">Price</label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"price\"\r\n            placeholder=\"Enter price\"\r\n            required\r\n            onChange={(e) => setPrice(e.target.value)}\r\n          ></input>\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"name\">Category</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"category\"\r\n            placeholder=\"Enter category\"\r\n            required\r\n            onChange={(e) => setCategory(e.target.value)}\r\n          ></input>\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"brand\">Brand</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"brand\"\r\n            placeholder=\"Enter brand\"\r\n            required\r\n            onChange={(e) => setBrand(e.target.value)}\r\n          ></input>\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"countInstock\">CountInStock</label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"countInstock\"\r\n            placeholder=\"Enter CountInStock\"\r\n            required\r\n            onChange={(e) => setCountInStock(e.target.value)}\r\n          ></input>\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"rating\">Rating</label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"rating\"\r\n            placeholder=\"Enter rating\"\r\n            required\r\n            onChange={(e) => setRating(e.target.value)}\r\n          ></input>\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"numReview\">NumReview</label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"numReview\"\r\n            placeholder=\"Enter numReview\"\r\n            required\r\n            onChange={(e) => setNumReview(e.target.value)}\r\n          ></input>\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"description\">Description</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"description\"\r\n            placeholder=\"Enter description\"\r\n            required\r\n            onChange={(e) => setDescription(e.target.value)}\r\n          ></input>\r\n        </div>\r\n        <div>\r\n          <label />\r\n          <button className=\"primary\" type=\"submit\">\r\n            Create\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Sehat Box\\Documents\\GitHub\\client\\src\\index.js",[],["606","607"],"C:\\Users\\Sehat Box\\Documents\\GitHub\\client\\src\\App.js",[],"C:\\Users\\Sehat Box\\Documents\\GitHub\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Sehat Box\\Documents\\GitHub\\client\\src\\store.js",[],"C:\\Users\\Sehat Box\\Documents\\GitHub\\client\\src\\screens\\HomeScreen.js",[],"C:\\Users\\Sehat Box\\Documents\\GitHub\\client\\src\\screens\\SigninScreen.js",[],"C:\\Users\\Sehat Box\\Documents\\GitHub\\client\\src\\screens\\RegisterScreen.js",[],"C:\\Users\\Sehat Box\\Documents\\GitHub\\client\\src\\screens\\UserEditScreen.js",[],"C:\\Users\\Sehat Box\\Documents\\GitHub\\client\\src\\screens\\OrderScreen.js",[],"C:\\Users\\Sehat Box\\Documents\\GitHub\\client\\src\\screens\\UserListScreen.js",[],"C:\\Users\\Sehat Box\\Documents\\GitHub\\client\\src\\screens\\Account_GroupScreen.js",[],"C:\\Users\\Sehat Box\\Documents\\GitHub\\client\\src\\screens\\AccountScreen.js",["608"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addAccount } from '../actions/accountActions';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport axios from 'axios';\r\n\r\nexport default function AccountScreen(props) {\r\n  const [name, setName] = useState('');\r\n  const [mobileno, setMobile_No] = useState('');\r\n  const [Ac_Group, setAC_Group] = useState('');\r\n  const [acGroup, setAcGroup] = useState([]);\r\n\r\n  useEffect(async () => {\r\n    await axios.get('http://127.0.0.1:8080/api/accountGroup/list').then((res) => {\r\n        setAcGroup(res.data);\r\n    })\r\n}, [])\r\n\r\n\r\n\r\n  const redirect = props.location.search\r\n    ? props.location.search.split('=')[1]\r\n    : '/';\r\n\r\n \r\n  const addAct = useSelector((state) => state.addAct);\r\n  const { accountAdd, loading, error } = addAct;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(addAccount(name, mobileno, Ac_Group));\r\n  };\r\n  useEffect(() => {\r\n    if (accountAdd) {\r\n      props.history.push(redirect);\r\n    }\r\n  }, [props.history, redirect, accountAdd]);\r\n  \r\n  return (\r\n    <div>\r\n    <form className=\"form\" onSubmit={submitHandler}>\r\n      <div>\r\n        <h1>Add Account</h1>\r\n      </div>\r\n      {loading && <LoadingBox></LoadingBox>}\r\n      {error && <MessageBox variant=\"danger\">{error}</MessageBox>}\r\n      <div>\r\n        <label htmlFor=\"name\">Name</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"Name\"\r\n          placeholder=\"Enter name\"\r\n          required\r\n          onChange={(e) => setName(e.target.value)}\r\n        ></input>\r\n      </div>\r\n      \r\n      <div>\r\n        <label htmlFor=\"mobileno\">Mobile No</label>\r\n        <input type=\"text\" id='Mobile_No' placeholder=\"Enter mobile no\" required onChange={(e) => setMobile_No(e.target.value)} />      \r\n      </div>\r\n\r\n \r\n      <div>\r\n      <label>Select Account Group</label>\r\n      <select name=\"Ac_Group\" id=\"Ac_Group\" onChange={(e) => setAC_Group(e.target.value)}>\r\n                                <option>---Select---</option>\r\n                                    {acGroup && acGroup.map((obj) => {\r\n                                        return <option value={obj._id}>{obj.ac_group_title}</option>\r\n                                    })\r\n                                    }\r\n                                </select>\r\n      </div>\r\n     \r\n      <div>\r\n        <label />\r\n        <button className=\"primary\" type=\"submit\">\r\n          Save\r\n        </button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  );\r\n}\r\n","C:\\Users\\Sehat Box\\Documents\\GitHub\\client\\src\\actions\\userActions.js",[],"C:\\Users\\Sehat Box\\Documents\\GitHub\\client\\src\\reducers\\accountReducers.js",[],"C:\\Users\\Sehat Box\\Documents\\GitHub\\client\\src\\reducers\\userReducers.js",[],"C:\\Users\\Sehat Box\\Documents\\GitHub\\client\\src\\actions\\accountActions.js",["609"],"import Axios from 'axios';\r\nimport {\r\n  ACCOUNT_GROUP_REQUEST, ACCOUNT_GROUP_SUCCESS, ACCOUNT_GROUP_FAIL,\r\n  ADD_ACCOUNT_FAIL, ADD_ACCOUNT_REQUEST, ADD_ACCOUNT_SUCCESS,\r\n  ACCOUNT_GROUP_LIST_FAIL, ACCOUNT_GROUP_LIST_REQUEST, ACCOUNT_GROUP_LIST_SUCCESS\r\n } from \"../constants/accountConstants\";\r\n\r\n export const grouplist = ({}) => async (dispatch) => {\r\n  dispatch({ type: ACCOUNT_GROUP_LIST_REQUEST });\r\n  try {\r\n    const { data } = await Axios.get(\r\n      `/api/accountGroup/list`\r\n    );\r\n    dispatch({ type: ACCOUNT_GROUP_LIST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: ACCOUNT_GROUP_LIST_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\n\r\nexport const group_details = (ac_group_title, Sub_Group) => async (dispatch) => {\r\n  dispatch({ type: ACCOUNT_GROUP_REQUEST, payload: { ac_group_title, Sub_Group } });\r\n  try {\r\n    const { data } = await Axios.post('/api/accountGroup/', { ac_group_title, Sub_Group });\r\n    dispatch({ type: ACCOUNT_GROUP_SUCCESS, payload: data });\r\n    localStorage.setItem('account_groupInfo', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ACCOUNT_GROUP_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const addAccount = (Name, Mobile_No, Ac_Group) => async (dispatch) => {\r\n  dispatch({ type: ADD_ACCOUNT_REQUEST, payload: { Name, Mobile_No, Ac_Group } });\r\n  try {\r\n    const { data } = await Axios.post('/api/account/add', { Name, Mobile_No, Ac_Group });\r\n    dispatch({ type: ADD_ACCOUNT_SUCCESS, payload: data });\r\n    localStorage.setItem('accountAdd', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ADD_ACCOUNT_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n","C:\\Users\\Sehat Box\\Documents\\GitHub\\client\\src\\components\\LoadingBox.js",[],"C:\\Users\\Sehat Box\\Documents\\GitHub\\client\\src\\constants\\accountConstants.js",[],"C:\\Users\\Sehat Box\\Documents\\GitHub\\client\\src\\constants\\userConstants.js",[],"C:\\Users\\Sehat Box\\Documents\\GitHub\\client\\src\\components\\MessageBox.js",[],"C:\\Users\\Sehat Box\\Documents\\GitHub\\client\\src\\components\\acgroup.js",[],["610","611"],"C:\\Users\\Sehat Box\\Documents\\GitHub\\client\\src\\reducers\\serviceReducers.js",[],"C:\\Users\\Sehat Box\\Documents\\GitHub\\client\\src\\constants\\serviceConstants.js",[],"C:\\Users\\Sehat Box\\Documents\\GitHub\\client\\src\\screens\\serviceScreen.js",[],"C:\\Users\\Sehat Box\\Documents\\GitHub\\client\\src\\actions\\serviceActions.js",["612"],"C:\\Users\\Sehat Box\\Documents\\GitHub\\client\\src\\screens\\ServiceScreen.js",["613"],"C:\\Users\\Sehat Box\\Documents\\GitHub\\client\\src\\screens\\service_GroupScren.js",[],"C:\\Users\\Sehat Box\\Documents\\GitHub\\client\\src\\reducers\\productReducers.js",[],"C:\\Users\\Sehat Box\\Documents\\GitHub\\client\\src\\constants\\productConstants.js",[],"C:\\Users\\Sehat Box\\Documents\\GitHub\\client\\src\\screens\\ProductGroupScreen.js",[],"C:\\Users\\Sehat Box\\Documents\\GitHub\\client\\src\\screens\\ProductScreen.js",["614"],"C:\\Users\\Sehat Box\\Documents\\GitHub\\client\\src\\actions\\productActions.js",["615"],"C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\index.js",[],["616","617"],"C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\store.js",["618"],"import { createStore, compose, applyMiddleware, combineReducers } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { addAccountReducer, account_groupReducer, acgrouplistReducer, accountDetailsReducer } from './reducers/accountReducers';\r\nimport { userDeleteReducer, userDetailsReducer, userListReducer, userSigninReducer, userUpdateProfileReducer, userUpdateReducer } from './reducers/userReducers';\r\nimport { userRegisterReducer } from './reducers/userReducers';\r\nimport { addServiceReducer, serviceGrouplistReducer, serviceGroupReducer } from './reducers/serviceReducers';\r\nimport { addProductReducer, productGrouplistReducer, productGroupReducer } from './reducers/productReducers';\r\nimport { addEnquiryReducer, enquiryDetailsReducer, enquirylistReducer } from './reducers/enquiryReducers';\r\nimport { addOrderReducer } from './reducers/orderReducers';\r\nimport { stateDetailsReducer, statelistReducer, addStateReducer } from './reducers/stateReducers';\r\nimport { districtDetailsReducer, districtlistReducer, addDistrictReducer } from './reducers/districtReducers';\r\nimport { talukaDetailsReducer, talukalistReducer, addTalukaReducer } from './reducers/talukaReducers';\r\n\r\n\r\nconst initialState = {\r\n    userSignin: {\r\n        userInfo: localStorage.getItem('userInfo')\r\n        ? JSON.parse(localStorage.getItem('userInfo'))\r\n        : null,\r\n    },\r\n};\r\nconst reducer = combineReducers({\r\n    userSignin: userSigninReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n    account_group: account_groupReducer,\r\n    addAct: addAccountReducer,\r\n    acgrouplist : acgrouplistReducer,\r\n    addS: addServiceReducer,\r\n    serviceGroup: serviceGroupReducer,\r\n    serviceGrouplist: serviceGrouplistReducer,\r\n    productGroup: productGroupReducer,\r\n    addProd: addProductReducer,\r\n    productGrouplist: productGrouplistReducer,\r\n    enqlist: enquirylistReducer,\r\n    addDetails: addEnquiryReducer,\r\n    postEnq: enquiryDetailsReducer,\r\n    accountDetails: accountDetailsReducer,\r\n    postOrder: addOrderReducer,\r\n    stateA: addStateReducer,\r\n    addS: statelistReducer,\r\n    stateDetails: stateDetailsReducer,\r\n    districtA: addDistrictReducer,\r\n    addD: districtlistReducer,\r\n    districtDetails: districtDetailsReducer,\r\n    talukaA: addTalukaReducer,\r\n    addT: talukalistReducer,\r\n    talukaDetails: talukaDetailsReducer\r\n\r\n});\r\nconst composeEnhancer = window._REDUX_DEVTOOLS_EXTENSION_COMPOSE_ || compose;\r\nconst store = createStore(\r\n    reducer, \r\n    initialState,\r\n    composeEnhancer(applyMiddleware(thunk))\r\n );\r\n\r\nexport default store;\r\n","C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\App.js",[],"C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\reducers\\accountReducers.js",[],"C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\reducers\\userReducers.js",[],"C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\reducers\\serviceReducers.js",[],"C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\reducers\\productReducers.js",[],"C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\screens\\HomeScreen.js",["619"],"import React, {useState, useEffect} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nexport default function HomeScreen(props) {\r\n  const [name, setName] = useState([]);\r\n\r\n  useEffect(async () => {\r\n    await axios.get('http://54.242.166.223:8080/api/enquiry/all').then((res) => {\r\n        setName(res.data);\r\n    })\r\n}, [])\r\n\r\n  return (\r\n    <>\r\n    <div className='container'>\r\n       <Link to='/enquiry'><h2 style={{ fontSize:'20px'}}>Enquiry</h2></Link>\r\n      <Link to='/account'><h2 style={{ fontSize:'20px'}}>Account</h2></Link>\r\n      <Link to='/account_group'><h2 style={{ fontSize:'20px'}}>Account Group</h2></Link>\r\n      <Link to='/product'><h2 style={{ fontSize:'20px'}}>Product</h2></Link>\r\n      <Link to='/productGroup'><h2 style={{ fontSize:'20px'}}>Product Group</h2></Link>\r\n      <Link to='/services'><h2 style={{ fontSize:'20px'}}>Services</h2></Link>\r\n      <Link to='/serviceGroup'><h2 style={{ fontSize:'20px'}}>Service Group</h2></Link>\r\n      <Link to='/state'><h2 style={{ fontSize:'20px'}}>State</h2></Link>\r\n      <Link to='/district'><h2 style={{ fontSize:'20px'}}>District</h2></Link>\r\n      <Link to='/taluka'><h2 style={{ fontSize:'20px'}}>Taluka</h2></Link>\r\n   \r\n    <div className='table'>\r\n      <table responsive>\r\n      <thead>\r\n                    <tr>\r\n                        <th>ID</th> \r\n                        <th>Date</th>    \r\n                        <th>EnqID</th>             \r\n                        <th>Name</th>    \r\n                                 \r\n                    </tr>\r\n      </thead>\r\n      <tbody>\r\n          {                    \r\n                    name.map((obj) =>\r\n                     (\r\n                            <tr key={obj._id}>\r\n                            <td>{obj._id}</td>\r\n                            <td>{obj.createdAt}</td>\r\n                            <td>{obj.Name}</td>   \r\n                            <td></td>                     \r\n                            <td>\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"small\"\r\n                                onClick={() =>props.history.push(`/order/${obj._id}/edit`)}\r\n                            >\r\n                              Edit\r\n                            </button>\r\n                            <button\r\n                               type=\"button\"\r\n                               className=\"small\"\r\n                               \r\n                            >\r\n                              Delete\r\n                            </button>\r\n                            </td>\r\n                        </tr>                                  \r\n                    ))\r\n                }\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\screens\\SigninScreen.js",[],"C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\screens\\RegisterScreen.js",[],"C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\screens\\UserEditScreen.js",[],"C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\screens\\UserListScreen.js",[],"C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\screens\\AccountScreen.js",["620"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addAccount } from '../actions/accountActions';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport axios from 'axios';\r\n\r\nexport default function AccountScreen(props) {\r\n  const [name, setName] = useState('');\r\n  const [mobileno, setMobile_No] = useState('');\r\n  const [Ac_Group, setAC_Group] = useState('');\r\n  const [acGroup, setAcGroup] = useState([]);\r\n\r\n  useEffect(async () => {\r\n    await axios.get('http://54.242.166.223:8080/api/accountGroup/list').then((res) => {\r\n        setAcGroup(res.data);\r\n    })\r\n}, [])\r\n\r\n\r\n\r\n  const redirect = props.location.search\r\n    ? props.location.search.split('=')[1]\r\n    : '/';\r\n\r\n \r\n  const addAct = useSelector((state) => state.addAct);\r\n  const { accountAdd, loading, error } = addAct;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(addAccount(name, mobileno, Ac_Group));\r\n  };\r\n  useEffect(() => {\r\n    if (accountAdd) {\r\n      props.history.push(redirect);\r\n    }\r\n  }, [props.history, redirect, accountAdd]);\r\n  \r\n  return (\r\n    <div>\r\n    <form className=\"form\" onSubmit={submitHandler}>\r\n      <div>\r\n        <h1>Add Account</h1>\r\n      </div>\r\n      {loading && <LoadingBox></LoadingBox>}\r\n      {error && <MessageBox variant=\"danger\">{error}</MessageBox>}\r\n      <div>\r\n        <label htmlFor=\"name\">Name</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"Name\"\r\n          placeholder=\"Enter name\"\r\n          required\r\n          onChange={(e) => setName(e.target.value)}\r\n        ></input>\r\n      </div>\r\n      \r\n      <div>\r\n        <label htmlFor=\"mobileno\">Mobile No</label>\r\n        <input type=\"text\" id='Mobile_No' placeholder=\"Enter mobile no\" required onChange={(e) => setMobile_No(e.target.value)} />      \r\n      </div>\r\n\r\n \r\n      <div>\r\n      <label>Select Account Group</label>\r\n      <select name=\"Ac_Group\" id=\"Ac_Group\" onChange={(e) => setAC_Group(e.target.value)}>\r\n                                <option>---Select---</option>\r\n                                    {acGroup && acGroup.map((obj) => {\r\n                                        return <option value={obj._id}>{obj.ac_group_title}</option>\r\n                                    })\r\n                                    }\r\n                                </select>\r\n      </div>\r\n     \r\n      <div>\r\n        <label />\r\n        <button className=\"primary\" type=\"submit\">\r\n          Save\r\n        </button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  );\r\n}\r\n","C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\screens\\Account_GroupScreen.js",[],"C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\screens\\ServiceScreen.js",["621","622","623","624","625"],"C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\screens\\service_GroupScren.js",[],"C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\screens\\ProductGroupScreen.js",[],"C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\actions\\userActions.js",[],"C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\screens\\ProductScreen.js",["626"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addProduct } from '../actions/productActions';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport axios from 'axios';\r\n\r\nexport default function ProductScreen(props) {\r\n  const [name, setName] = useState('');\r\n  const [Product_Group, setProduct_Group] = useState('');\r\n  const [productGroup, setProductGroup] = useState([]);\r\n\r\n  useEffect(async () => {\r\n    await axios.get('http://54.242.166.223:8080/api/productGroup/list').then((res) => {\r\n        setProductGroup(res.data);\r\n    })\r\n}, [])\r\n\r\n\r\n\r\n  const redirect = props.location.search\r\n    ? props.location.search.split('=')[1]\r\n    : '/';\r\n\r\n \r\n  const addProd = useSelector((state) => state.addProd);\r\n  const { productAdd, loading, error } = addProd;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(addProduct(name, Product_Group));\r\n  };\r\n  useEffect(() => {\r\n    if (productAdd) {\r\n      props.history.push(redirect);\r\n    }\r\n  }, [props.history, redirect, productAdd]);\r\n  \r\n  return (\r\n    <div>\r\n    <form className=\"form\" onSubmit={submitHandler}>\r\n      <div>\r\n        <h1>Add Product</h1>\r\n      </div>\r\n      {loading && <LoadingBox></LoadingBox>}\r\n      {error && <MessageBox variant=\"danger\">{error}</MessageBox>}\r\n      <div>\r\n        <label htmlFor=\"name\">Name</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"Name\"\r\n          placeholder=\"Enter name\"\r\n          required\r\n          onChange={(e) => setName(e.target.value)}\r\n        ></input>\r\n      </div>\r\n \r\n      <div>\r\n      <label>Select Product Group</label>\r\n      <select name=\"Product_Group\" id=\"ProductGroup\" onChange={(e) => setProduct_Group(e.target.value)}>\r\n                                <option>---Select---</option>\r\n                                    {productGroup && productGroup.map((obj) => {\r\n                                        return <option value={obj._id}>{obj.product_group_title}</option>\r\n                                    })\r\n                                    }\r\n                                </select>\r\n      </div>\r\n     \r\n      <div>\r\n        <label />\r\n        <button className=\"primary\" type=\"submit\">\r\n          Save\r\n        </button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  );\r\n}\r\n","C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\actions\\serviceActions.js",["627"],"import Axios from 'axios';\r\nimport {\r\n  ADD_SERVICE_FAIL, ADD_SERVICE_REQUEST, ADD_SERVICE_SUCCESS,\r\n  SERVICE_GROUP_LIST_FAIL, SERVICE_GROUP_LIST_REQUEST, SERVICE_GROUP_LIST_SUCCESS,\r\n  SERVICE_GROUP_REQUEST,SERVICE_GROUP_FAIL,SERVICE_GROUP_SUCCESS\r\n } from \"../constants/serviceConstants\";\r\n\r\n export const serviceGrouplist = ({}) => async (dispatch) => {\r\n  dispatch({ type: SERVICE_GROUP_LIST_REQUEST });\r\n  try {\r\n    const { data } = await Axios.get(\r\n      `http://54.242.166.223:8080/api/serviceGroup/list`\r\n    );\r\n    dispatch({ type: SERVICE_GROUP_LIST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: SERVICE_GROUP_LIST_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\n\r\nexport const servieGroupAdd = (service_group_title, Sub_Group) => async (dispatch) => {\r\n  dispatch({ type: SERVICE_GROUP_REQUEST, payload: { service_group_title, Sub_Group } });\r\n  try {\r\n    const { data } = await Axios.post('http://54.242.166.223:8080/api/serviceGroup/', { service_group_title, Sub_Group });\r\n    dispatch({ type: SERVICE_GROUP_SUCCESS, payload: data });\r\n    localStorage.setItem('service_groupInfo', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: SERVICE_GROUP_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n\r\nexport const addService = (Title, Service_Group) => async (dispatch) => {\r\n  dispatch({ type: ADD_SERVICE_REQUEST, payload: { Title, Service_Group } });\r\n  try {\r\n    const { data } = await Axios.post('http://54.242.166.223:8080/api/services/add', { Title, Service_Group });\r\n    dispatch({ type: ADD_SERVICE_SUCCESS, payload: data });\r\n    localStorage.setItem('serviceAdd', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ADD_SERVICE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n","C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\actions\\accountActions.js",["628"],"import Axios from 'axios';\r\nimport {\r\n  ACCOUNT_GROUP_REQUEST, ACCOUNT_GROUP_SUCCESS, ACCOUNT_GROUP_FAIL,\r\n  ADD_ACCOUNT_FAIL, ADD_ACCOUNT_REQUEST, ADD_ACCOUNT_SUCCESS,\r\n  ACCOUNT_GROUP_LIST_FAIL, ACCOUNT_GROUP_LIST_REQUEST, ACCOUNT_GROUP_LIST_SUCCESS,\r\n  ACCOUNT_DETAILS_FAIL,ACCOUNT_DETAILS_REQUEST,ACCOUNT_DETAILS_SUCCESS\r\n } from \"../constants/accountConstants\";\r\n\r\n export const grouplist = ({}) => async (dispatch) => {\r\n  dispatch({ type: ACCOUNT_GROUP_LIST_REQUEST });\r\n  try {\r\n    const { data } = await Axios.get(\r\n      `http://54.242.166.223:8080/api/accountGroup/list`\r\n    );\r\n    dispatch({ type: ACCOUNT_GROUP_LIST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: ACCOUNT_GROUP_LIST_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\n\r\nexport const group_details = (ac_group_title, Sub_Group) => async (dispatch) => {\r\n  dispatch({ type: ACCOUNT_GROUP_REQUEST, payload: { ac_group_title, Sub_Group } });\r\n  try {\r\n    const { data } = await Axios.post('http://54.242.166.223:8080/api/accountGroup/', { ac_group_title, Sub_Group });\r\n    dispatch({ type: ACCOUNT_GROUP_SUCCESS, payload: data });\r\n    localStorage.setItem('account_groupInfo', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ACCOUNT_GROUP_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const addAccount = (Name, Mobile_No, Ac_Group) => async (dispatch) => {\r\n  dispatch({ type: ADD_ACCOUNT_REQUEST, payload: { Name, Mobile_No, Ac_Group } });\r\n  try {\r\n    const { data } = await Axios.post('http://54.242.166.223:8080/api/account/add', { Name, Mobile_No, Ac_Group });\r\n    dispatch({ type: ADD_ACCOUNT_SUCCESS, payload: data });\r\n    localStorage.setItem('accountAdd', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ADD_ACCOUNT_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n\r\nexport const detailsAccount = (accountId) => async (dispatch) =>{\r\n  dispatch({\r\n      type: ACCOUNT_DETAILS_REQUEST, payload: accountId });\r\n  try {\r\n      const { data } = await Axios.get(`http://54.242.166.223:8080/api/account/${accountId}`);\r\n      dispatch({ type: ACCOUNT_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n      dispatch({ \r\n          type: ACCOUNT_DETAILS_FAIL, \r\n          payload: \r\n          error.response && error.response.data.message \r\n          ? error.response.data.message \r\n          : error.message,\r\n      });\r\n  }\r\n};\r\n","C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\actions\\productActions.js",["629"],"import Axios from 'axios';\r\nimport {\r\n  PRODUCT_GROUP_REQUEST, PRODUCT_GROUP_SUCCESS, PRODUCT_GROUP_FAIL,\r\n  ADD_PRODUCT_FAIL, ADD_PRODUCT_REQUEST, ADD_PRODUCT_SUCCESS,\r\n  PRODUCT_GROUP_LIST_FAIL, PRODUCT_GROUP_LIST_REQUEST, PRODUCT_GROUP_LIST_SUCCESS\r\n } from \"../constants/productConstants\";\r\n\r\n export const productgrouplist = ({}) => async (dispatch) => {\r\n  dispatch({ type: PRODUCT_GROUP_LIST_REQUEST });\r\n  try {\r\n    const { data } = await Axios.get(\r\n      `http://54.242.166.223:8080/api/productGroup/list`\r\n    );\r\n    dispatch({ type: PRODUCT_GROUP_LIST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: PRODUCT_GROUP_LIST_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\n\r\nexport const productDetails = (product_group_title, Sub_Group) => async (dispatch) => {\r\n  dispatch({ type: PRODUCT_GROUP_REQUEST, payload: { product_group_title, Sub_Group } });\r\n  try {\r\n    const { data } = await Axios.post('http://54.242.166.223:8080/api/productGroup/', { product_group_title, Sub_Group });\r\n    dispatch({ type: PRODUCT_GROUP_SUCCESS, payload: data });\r\n    localStorage.setItem('productGroupInfo', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_GROUP_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const addProduct = (Name, ProductGroup) => async (dispatch) => {\r\n  dispatch({ type: ADD_PRODUCT_REQUEST, payload: { Name, ProductGroup } });\r\n  try {\r\n    const { data } = await Axios.post('http://54.242.166.223:8080/api/product/add', { Name, ProductGroup });\r\n    dispatch({ type: ADD_PRODUCT_SUCCESS, payload: data });\r\n    localStorage.setItem('productAdd', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ADD_PRODUCT_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n","C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\constants\\productConstants.js",[],"C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\constants\\serviceConstants.js",[],"C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\constants\\accountConstants.js",[],"C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\constants\\userConstants.js",[],"C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\components\\LoadingBox.js",[],"C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\components\\MessageBox.js",[],"C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\actions\\enquiryActions.js",["630"],"import Axios from 'axios';\r\nimport {\r\n  ENQUIRY_CREATE_REQUEST, ENQUIRY_CREATE_FAIL, ENQUIRY_CREATE_SUCCESS,\r\n  ENQUIRY_LIST_REQUEST, ENQUIRY_LIST_SUCCESS, ENQUIRY_LIST_FAIL,\r\n  ENQUIRY_DETAILS_FAIL, ENQUIRY_DETAILS_REQUEST, ENQUIRY_DETAILS_SUCCESS\r\n } from \"../constants/enquiryConstants\";\r\n\r\n export const enquirylist = ({}) => async (dispatch) => {\r\n  dispatch({ type: ENQUIRY_LIST_REQUEST });\r\n  try {\r\n    const { data } = await Axios.get(\r\n      `http://54.242.166.223:8080/api/enquiry/all`\r\n    );\r\n    dispatch({ type: ENQUIRY_LIST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: ENQUIRY_LIST_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\n\r\nexport const addEnquiry = (EnqID, Name) => async (dispatch) => {\r\n  dispatch({ type: ENQUIRY_CREATE_REQUEST, payload: { EnqID, Name } });\r\n  try {\r\n    const { data } = await Axios.post('http://54.242.166.223:8080/api/enquiry/add', { EnqID, Name });\r\n    dispatch({ type: ENQUIRY_CREATE_SUCCESS, payload: data });\r\n    localStorage.setItem('enquiryAdd', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ENQUIRY_CREATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const EnquiryDetails = (enqId) => async (dispatch) =>{\r\n  dispatch({\r\n      type: ENQUIRY_DETAILS_REQUEST, payload: enqId });\r\n  try {\r\n      const { data } = await Axios.get(`http://54.242.166.223:8080/api/enquiry/${enqId}`);\r\n      dispatch({ type: ENQUIRY_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n      dispatch({ \r\n          type: ENQUIRY_DETAILS_FAIL, \r\n          payload: \r\n          error.response && error.response.data.message \r\n          ? error.response.data.message \r\n          : error.message,\r\n      });\r\n  }\r\n};\r\n","C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\screens\\EnquiryScreen.js",["631","632","633"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addEnquiry } from '../actions/enquiryActions';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function OrderScreen(props) {\r\n  const [name, setName] = useState('');\r\n  const [acName, setAcName] = useState([]);\r\n  const [enqId, setEnqID] = useState([]);\r\n  const [selectedName, setSelectedName] = useState([]);\r\n  const [getID, setID] = useState([]);\r\n\r\n  useEffect(async () => {\r\n    await axios.get('http://54.242.166.223:8080/api/account/all').then((res) => {\r\n        setEnqID(res.data);\r\n    })\r\n}, [])\r\n\r\n\r\n\r\nconst na = [...new Set(enqId.map(item => item.AccountID))];\r\nna.sort();\r\n\r\n\r\nconst handleID = (e) => {\r\n  const getName = enqId.filter(Name => Name.AccountID === e.target.value);\r\n  getName.sort();\r\n  console.log(getName);\r\n  setAcName(getName);\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n  const redirect = props.location.search\r\n    ? props.location.search.split('=')[1]\r\n    : '/';\r\n\r\n \r\n  const addDetails = useSelector((state) => state.addDetails);\r\n  const { enquiryAdd, loading, error } = addDetails;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(addEnquiry(enqId, name));\r\n  };\r\n  useEffect(() => {\r\n    if (enquiryAdd) {\r\n      props.history.push(redirect);\r\n    }\r\n  }, [props.history, redirect, enquiryAdd]);\r\n  \r\n  return (\r\n    <div>\r\n    <form className=\"form\" onSubmit={submitHandler}>\r\n      <div>\r\n        <h1>New Enquiry</h1>\r\n      </div>\r\n      {loading && <LoadingBox></LoadingBox>}\r\n      {error && <MessageBox variant=\"danger\">{error}</MessageBox>}\r\n      <div>\r\n        <label htmlFor=\"enqid\">Enquiry ID</label>\r\n        <select name=\"EnqID\" id=\"EnqID\" onChange={(e) => handleID(e)}>\r\n             {na.map((obj) => <option key={obj} value={getID}>{obj}</option>)}\r\n         </select>\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"name\">Name</label>\r\n        <select name=\"Name\" id=\"Name\" onChange={(e) => setName(e.target.value)}>\r\n                                    {acName.map((obj) => {\r\n                                        return <option value={selectedName}>{obj}</option>\r\n                                    })\r\n                                    }\r\n                                </select>\r\n      </div>\r\n  \r\n    <Link to='account'> <h1 style={{textAlign : 'right'}}> Add New</h1> </Link>\r\n      <div>\r\n        <label />\r\n        <button className=\"primary\" type=\"submit\">\r\n          Save\r\n        </button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  );\r\n}\r\n","C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\reducers\\enquiryReducers.js",[],"C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\constants\\enquiryConstants.js",[],"C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\reducers\\orderReducers.js",[],"C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\constants\\orderConstants.js",[],"C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\screens\\OrderScreen.js",["634","635","636"],"C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\actions\\orderActions.js",[],"C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\components\\enquiry.js",[],"C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\screens\\StateScreen.js",[],"C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\actions\\stateActions.js",["637"],"import Axios from 'axios';\r\nimport {\r\n  STATE_LIST_REQUEST, STATE_LIST_SUCCESS, STATE_LIST_FAIL,\r\n  ADD_STATE_FAIL, ADD_STATE_REQUEST, ADD_STATE_SUCCESS,\r\n  STATE_DETAILS_FAIL,STATE_DETAILS_REQUEST,STATE_DETAILS_SUCCESS\r\n } from \"../constants/stateConstants\";\r\n\r\n export const statelist = ({}) => async (dispatch) => {\r\n  dispatch({ type: STATE_LIST_REQUEST });\r\n  try {\r\n    const { data } = await Axios.get(\r\n      `http://54.242.166.223:8080/api/state/all`\r\n    );\r\n    dispatch({ type: STATE_LIST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: STATE_LIST_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\nexport const addState = (Name) => async (dispatch) => {\r\n  dispatch({ type: ADD_STATE_REQUEST, payload: { Name } });\r\n  try {\r\n    const { data } = await Axios.post('http://54.242.166.223:8080/api/state/add', { Name });\r\n    dispatch({ type: ADD_STATE_SUCCESS, payload: data });\r\n    localStorage.setItem('stateAdd', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ADD_STATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n\r\nexport const detailsState = (stateId) => async (dispatch) =>{\r\n  dispatch({\r\n      type: STATE_DETAILS_REQUEST, payload: stateId });\r\n  try {\r\n      const { data } = await Axios.get(`http://54.242.166.223:8080/api/state/${stateId}`);\r\n      dispatch({ type: STATE_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n      dispatch({ \r\n          type: STATE_DETAILS_FAIL, \r\n          payload: \r\n          error.response && error.response.data.message \r\n          ? error.response.data.message \r\n          : error.message,\r\n      });\r\n  }\r\n};\r\n","C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\reducers\\talukaReducers.js",[],"C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\reducers\\districtReducers.js",[],"C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\constants\\talukaConstants.js",[],"C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\constants\\districtConstants.js",[],"C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\screens\\DistrictScreen.js",["638"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addDistrict } from '../actions/districtActions';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport axios from 'axios';\r\n\r\nexport default function DistrictScreen(props) {\r\n  const [name, setName] = useState('');\r\n  const [sid, setSID] = useState('');\r\n \r\n  const [state, setState] = useState([]);\r\n\r\n  useEffect(async () => {\r\n    await axios.get('http://54.242.166.223:8080/api/state/all').then((res) => {\r\n        setState(res.data);\r\n    })\r\n}, [])\r\n\r\n\r\n\r\n  const redirect = props.location.search\r\n    ? props.location.search.split('=')[1]\r\n    : '/';\r\n\r\n \r\n    const districtA = useSelector((state) => state.districtA);\r\n    const { districtadd, loading, error } = districtA;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(addDistrict(name, sid));\r\n  };\r\n  useEffect(() => {\r\n    if (districtadd) {\r\n      props.history.push(redirect);\r\n    }\r\n  }, [props.history, redirect, districtadd]);\r\n  \r\n  return (\r\n    <div>\r\n    <form className=\"form\" onSubmit={submitHandler}>\r\n      <div>\r\n        <h1>Add District</h1>\r\n      </div>\r\n      {loading && <LoadingBox></LoadingBox>}\r\n      {error && <MessageBox variant=\"danger\">{error}</MessageBox>}\r\n      \r\n \r\n      <div>\r\n      <label>Select State</label>\r\n      <select name=\"SID\" id=\"SID\" onChange={(e) => setSID(e.target.value)}>\r\n                                <option>---Select---</option>\r\n                                    {state && state.map((obj) => {\r\n                                        return <option value={obj.SID}>{obj.Name}</option>\r\n                                    })\r\n                                    }\r\n                                </select>\r\n      </div>\r\n\r\n      <div>\r\n        <label htmlFor=\"name\">Name</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"Name\"\r\n          placeholder=\"Enter name\"\r\n          required\r\n          onChange={(e) => setName(e.target.value)}\r\n        ></input>\r\n      </div>\r\n     \r\n      <div>\r\n        <label />\r\n        <button className=\"primary\" type=\"submit\">\r\n          Save\r\n        </button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  );\r\n}\r\n","C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\screens\\TalukaScreen.js",["639","640"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addTaluka } from '../actions/talukaActions';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport axios from 'axios';\r\n\r\nexport default function TalukaScreen(props) {\r\n  const [name, setName] = useState('');\r\n  const [sid, setSID] = useState('');\r\n  const [did, setDID] = useState('');\r\n \r\n  const [state, setState] = useState([]);\r\n  const [district, setDistrict] = useState([]);\r\n\r\n  useEffect(async () => {\r\n    await axios.get('http://54.242.166.223:8080/api/state/all').then((res) => {\r\n        setState(res.data);\r\n    })\r\n}, [])\r\n\r\nuseEffect(async () => {\r\n  await axios.get('http://54.242.166.223:8080/api/district/all').then((res) => {\r\n      setDistrict(res.data);\r\n  })\r\n}, [])\r\n\r\n\r\n\r\n  const redirect = props.location.search\r\n    ? props.location.search.split('=')[1]\r\n    : '/';\r\n\r\n \r\n    const talukaA = useSelector((state) => state.talukaA);\r\n    const { talukaadd, loading, error } = talukaA;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(addTaluka(name, sid, did));\r\n  };\r\n  useEffect(() => {\r\n    if (talukaadd) {\r\n      props.history.push(redirect);\r\n    }\r\n  }, [props.history, redirect, talukaadd]);\r\n  \r\n  return (\r\n    <div>\r\n    <form className=\"form\" onSubmit={submitHandler}>\r\n      <div>\r\n        <h1>Add Taluka</h1>\r\n      </div>\r\n      {loading && <LoadingBox></LoadingBox>}\r\n      {error && <MessageBox variant=\"danger\">{error}</MessageBox>}\r\n\r\n      <div>\r\n      <label>Select State</label>\r\n      <select name=\"SID\" id=\"SID\" onChange={(e) => setSID(e.target.value)}>\r\n                                <option>---Select---</option>\r\n                                    {state && state.map((obj) => {\r\n                                        return <option value={obj.SID}>{obj.Name}</option>\r\n                                    })\r\n                                    }\r\n                                </select>\r\n      </div>\r\n\r\n      <div>\r\n      <label>Select District</label>\r\n      <select name=\"DID\" id=\"DID\" onChange={(e) => setDID(e.target.value)}>\r\n                                <option>---Select---</option>\r\n                                    {district && district.map((obj) => {\r\n                                        return <option value={obj.DID}>{obj.Name}</option>\r\n                                    })\r\n                                    }\r\n                                </select>\r\n      </div>\r\n\r\n\r\n      <div>\r\n        <label htmlFor=\"name\">Name</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"Name\"\r\n          placeholder=\"Enter name\"\r\n          required\r\n          onChange={(e) => setName(e.target.value)}\r\n        ></input>\r\n      </div>\r\n \r\n   \r\n     \r\n      <div>\r\n        <label />\r\n        <button className=\"primary\" type=\"submit\">\r\n          Save\r\n        </button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  );\r\n}\r\n","C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\actions\\districtActions.js",["641"],"import Axios from 'axios';\r\nimport {\r\n  DISTRICT_LIST_REQUEST, DISTRICT_LIST_SUCCESS, DISTRICT_LIST_FAIL,\r\n  ADD_DISTRICT_FAIL, ADD_DISTRICT_REQUEST, ADD_DISTRICT_SUCCESS,\r\n  DISTRICT_DETAILS_FAIL,DISTRICT_DETAILS_REQUEST,DISTRICT_DETAILS_SUCCESS\r\n } from \"../constants/districtConstants\";\r\n\r\n export const districtlist = ({}) => async (dispatch) => {\r\n  dispatch({ type: DISTRICT_LIST_REQUEST });\r\n  try {\r\n    const { data } = await Axios.get(\r\n      `http://54.242.166.223:8080/api/district/all`\r\n    );\r\n    dispatch({ type: DISTRICT_LIST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: DISTRICT_LIST_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\nexport const addDistrict = (Name,  SID) => async (dispatch) => {\r\n  dispatch({ type: ADD_DISTRICT_REQUEST, payload: { Name, SID } });\r\n  try {\r\n    const { data } = await Axios.post('http://54.242.166.223:8080/api/district/add', { Name, SID });\r\n    dispatch({ type: ADD_DISTRICT_SUCCESS, payload: data });\r\n    localStorage.setItem('districtAdd', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ADD_DISTRICT_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n\r\nexport const detailsDistrict = (districtId) => async (dispatch) =>{\r\n  dispatch({\r\n      type: DISTRICT_DETAILS_REQUEST, payload: districtId });\r\n  try {\r\n      const { data } = await Axios.get(`http://54.242.166.223:8080/api/district/${districtId}`);\r\n      dispatch({ type: DISTRICT_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n      dispatch({ \r\n          type: DISTRICT_DETAILS_FAIL, \r\n          payload: \r\n          error.response && error.response.data.message \r\n          ? error.response.data.message \r\n          : error.message,\r\n      });\r\n  }\r\n};\r\n","C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\actions\\talukaActions.js",["642"],"import Axios from 'axios';\r\nimport {\r\n  TALUKA_LIST_REQUEST, TALUKA_LIST_SUCCESS, TALUKA_LIST_FAIL,\r\n  ADD_TALUKA_FAIL, ADD_TALUKA_REQUEST, ADD_TALUKA_SUCCESS,\r\n  TALUKA_DETAILS_FAIL,TALUKA_DETAILS_REQUEST,TALUKA_DETAILS_SUCCESS\r\n } from \"../constants/talukaConstants\";\r\n\r\n export const talukalist = ({}) => async (dispatch) => {\r\n  dispatch({ type: TALUKA_LIST_REQUEST });\r\n  try {\r\n    const { data } = await Axios.get(\r\n      `http://54.242.166.223:8080/api/taluka/all`\r\n    );\r\n    dispatch({ type: TALUKA_LIST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: TALUKA_LIST_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\nexport const addTaluka = (Name, SID, DID) => async (dispatch) => {\r\n  dispatch({ type: ADD_TALUKA_REQUEST, payload: { Name, SID, DID } });\r\n  try {\r\n    const { data } = await Axios.post('http://54.242.166.223:8080/api/taluka/add', { Name, SID, DID });\r\n    dispatch({ type: ADD_TALUKA_SUCCESS, payload: data });\r\n    localStorage.setItem('stateAdd', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ADD_TALUKA_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n\r\nexport const detailsTaluka = (talukaId) => async (dispatch) =>{\r\n  dispatch({\r\n      type: TALUKA_DETAILS_REQUEST, payload: talukaId });\r\n  try {\r\n      const { data } = await Axios.get(`http://54.242.166.223:8080/api/taluka/${talukaId}`);\r\n      dispatch({ type: TALUKA_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n      dispatch({ \r\n          type: TALUKA_DETAILS_FAIL, \r\n          payload: \r\n          error.response && error.response.data.message \r\n          ? error.response.data.message \r\n          : error.message,\r\n      });\r\n  }\r\n};\r\n","C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\reducers\\stateReducers.js",[],"C:\\Users\\Sehat Box\\Desktop\\Web Node\\MIS\\client\\src\\constants\\stateConstants.js",[],{"ruleId":"643","replacedBy":"644"},{"ruleId":"645","replacedBy":"646"},{"ruleId":"647","severity":1,"message":"648","line":222,"column":11,"nodeType":"649","endLine":222,"endColumn":34},{"ruleId":"650","severity":1,"message":"651","line":228,"column":6,"nodeType":"649","endLine":228,"endColumn":18},{"ruleId":"650","severity":1,"message":"651","line":230,"column":6,"nodeType":"649","endLine":230,"endColumn":18},{"ruleId":"650","severity":1,"message":"651","line":232,"column":6,"nodeType":"649","endLine":232,"endColumn":18},{"ruleId":"650","severity":1,"message":"651","line":260,"column":6,"nodeType":"649","endLine":260,"endColumn":18},{"ruleId":"650","severity":1,"message":"651","line":261,"column":6,"nodeType":"649","endLine":261,"endColumn":18},{"ruleId":"650","severity":1,"message":"651","line":262,"column":6,"nodeType":"649","endLine":262,"endColumn":18},{"ruleId":"650","severity":1,"message":"651","line":263,"column":6,"nodeType":"649","endLine":263,"endColumn":18},{"ruleId":"650","severity":1,"message":"651","line":264,"column":6,"nodeType":"649","endLine":264,"endColumn":18},{"ruleId":"652","severity":1,"message":"653","line":10,"column":16,"nodeType":"654","messageId":"655","endLine":10,"endColumn":25},{"ruleId":"652","severity":1,"message":"656","line":1,"column":8,"nodeType":"654","messageId":"655","endLine":1,"endColumn":13},{"ruleId":"652","severity":1,"message":"657","line":2,"column":10,"nodeType":"654","messageId":"655","endLine":2,"endColumn":22},{"ruleId":"652","severity":1,"message":"658","line":3,"column":28,"nodeType":"654","messageId":"655","endLine":3,"endColumn":36},{"ruleId":"652","severity":1,"message":"659","line":6,"column":38,"nodeType":"654","messageId":"655","endLine":6,"endColumn":46},{"ruleId":"660","severity":1,"message":"661","line":68,"column":29,"nodeType":"662","messageId":"663","endLine":68,"endColumn":31},{"ruleId":"652","severity":1,"message":"664","line":9,"column":8,"nodeType":"654","messageId":"655","endLine":9,"endColumn":13},{"ruleId":"652","severity":1,"message":"665","line":10,"column":8,"nodeType":"654","messageId":"655","endLine":10,"endColumn":16},{"ruleId":"652","severity":1,"message":"666","line":12,"column":10,"nodeType":"654","messageId":"655","endLine":12,"endColumn":13},{"ruleId":"652","severity":1,"message":"667","line":13,"column":10,"nodeType":"654","messageId":"655","endLine":13,"endColumn":14},{"ruleId":"652","severity":1,"message":"668","line":16,"column":11,"nodeType":"654","messageId":"655","endLine":16,"endColumn":18},{"ruleId":"652","severity":1,"message":"669","line":17,"column":12,"nodeType":"654","messageId":"655","endLine":17,"endColumn":20},{"ruleId":"652","severity":1,"message":"670","line":17,"column":22,"nodeType":"654","messageId":"655","endLine":17,"endColumn":33},{"ruleId":"652","severity":1,"message":"671","line":1,"column":10,"nodeType":"654","messageId":"655","endLine":1,"endColumn":25},{"ruleId":"672","severity":1,"message":"673","line":26,"column":9,"nodeType":"649","endLine":26,"endColumn":13},{"ruleId":"652","severity":1,"message":"671","line":1,"column":10,"nodeType":"654","messageId":"655","endLine":1,"endColumn":25},{"ruleId":"674","severity":1,"message":"675","line":76,"column":6,"nodeType":"676","endLine":76,"endColumn":31,"suggestions":"677"},{"ruleId":"652","severity":1,"message":"678","line":5,"column":3,"nodeType":"654","messageId":"655","endLine":5,"endColumn":16},{"ruleId":"652","severity":1,"message":"679","line":6,"column":3,"nodeType":"654","messageId":"655","endLine":6,"endColumn":27},{"ruleId":"652","severity":1,"message":"680","line":6,"column":28,"nodeType":"654","messageId":"655","endLine":6,"endColumn":52},{"ruleId":"652","severity":1,"message":"681","line":6,"column":53,"nodeType":"654","messageId":"655","endLine":6,"endColumn":74},{"ruleId":"652","severity":1,"message":"682","line":131,"column":13,"nodeType":"654","messageId":"655","endLine":131,"endColumn":17},{"ruleId":"674","severity":1,"message":"675","line":37,"column":6,"nodeType":"676","endLine":37,"endColumn":32,"suggestions":"683"},{"ruleId":"652","severity":1,"message":"684","line":3,"column":73,"nodeType":"654","messageId":"655","endLine":3,"endColumn":91},{"ruleId":"652","severity":1,"message":"685","line":9,"column":50,"nodeType":"654","messageId":"655","endLine":9,"endColumn":68},{"ruleId":"686","severity":1,"message":"687","line":31,"column":7,"nodeType":"688","messageId":"689","endLine":33,"endColumn":8},{"ruleId":"643","replacedBy":"690"},{"ruleId":"645","replacedBy":"691"},{"ruleId":"674","severity":1,"message":"692","line":14,"column":13,"nodeType":"693","endLine":18,"endColumn":2},{"ruleId":"694","severity":1,"message":"695","line":8,"column":28,"nodeType":"696","messageId":"663","endLine":8,"endColumn":30},{"ruleId":"643","replacedBy":"697"},{"ruleId":"645","replacedBy":"698"},{"ruleId":"694","severity":1,"message":"695","line":8,"column":35,"nodeType":"696","messageId":"663","endLine":8,"endColumn":37},{"ruleId":"674","severity":1,"message":"692","line":15,"column":13,"nodeType":"693","endLine":19,"endColumn":2},{"ruleId":"674","severity":1,"message":"692","line":14,"column":13,"nodeType":"693","endLine":18,"endColumn":2},{"ruleId":"694","severity":1,"message":"695","line":8,"column":35,"nodeType":"696","messageId":"663","endLine":8,"endColumn":37},{"ruleId":"643","replacedBy":"699"},{"ruleId":"645","replacedBy":"700"},{"ruleId":"701","severity":1,"message":"702","line":45,"column":5,"nodeType":"703","messageId":"663","endLine":45,"endColumn":9},{"ruleId":"674","severity":1,"message":"692","line":8,"column":13,"nodeType":"693","endLine":12,"endColumn":2},{"ruleId":"674","severity":1,"message":"692","line":14,"column":13,"nodeType":"693","endLine":18,"endColumn":2},{"ruleId":"652","severity":1,"message":"704","line":4,"column":8,"nodeType":"654","messageId":"655","endLine":4,"endColumn":18},{"ruleId":"652","severity":1,"message":"705","line":5,"column":8,"nodeType":"654","messageId":"655","endLine":5,"endColumn":18},{"ruleId":"674","severity":1,"message":"692","line":13,"column":13,"nodeType":"693","endLine":17,"endColumn":2},{"ruleId":"652","severity":1,"message":"706","line":24,"column":23,"nodeType":"654","messageId":"655","endLine":24,"endColumn":30},{"ruleId":"652","severity":1,"message":"707","line":24,"column":32,"nodeType":"654","messageId":"655","endLine":24,"endColumn":37},{"ruleId":"674","severity":1,"message":"692","line":13,"column":13,"nodeType":"693","endLine":17,"endColumn":2},{"ruleId":"694","severity":1,"message":"695","line":8,"column":35,"nodeType":"696","messageId":"663","endLine":8,"endColumn":37},{"ruleId":"694","severity":1,"message":"695","line":9,"column":28,"nodeType":"696","messageId":"663","endLine":9,"endColumn":30},{"ruleId":"694","severity":1,"message":"695","line":8,"column":35,"nodeType":"696","messageId":"663","endLine":8,"endColumn":37},{"ruleId":"694","severity":1,"message":"695","line":8,"column":30,"nodeType":"696","messageId":"663","endLine":8,"endColumn":32},{"ruleId":"652","severity":1,"message":"708","line":13,"column":24,"nodeType":"654","messageId":"655","endLine":13,"endColumn":39},{"ruleId":"652","severity":1,"message":"709","line":14,"column":17,"nodeType":"654","messageId":"655","endLine":14,"endColumn":22},{"ruleId":"674","severity":1,"message":"692","line":16,"column":13,"nodeType":"693","endLine":20,"endColumn":2},{"ruleId":"674","severity":1,"message":"692","line":22,"column":13,"nodeType":"693","endLine":26,"endColumn":2},{"ruleId":"674","severity":1,"message":"692","line":28,"column":11,"nodeType":"693","endLine":32,"endColumn":2},{"ruleId":"652","severity":1,"message":"710","line":38,"column":9,"nodeType":"654","messageId":"655","endLine":38,"endColumn":17},{"ruleId":"694","severity":1,"message":"695","line":8,"column":28,"nodeType":"696","messageId":"663","endLine":8,"endColumn":30},{"ruleId":"674","severity":1,"message":"692","line":14,"column":13,"nodeType":"693","endLine":18,"endColumn":2},{"ruleId":"674","severity":1,"message":"692","line":16,"column":13,"nodeType":"693","endLine":20,"endColumn":2},{"ruleId":"674","severity":1,"message":"692","line":22,"column":11,"nodeType":"693","endLine":26,"endColumn":2},{"ruleId":"694","severity":1,"message":"695","line":8,"column":31,"nodeType":"696","messageId":"663","endLine":8,"endColumn":33},{"ruleId":"694","severity":1,"message":"695","line":8,"column":29,"nodeType":"696","messageId":"663","endLine":8,"endColumn":31},"no-native-reassign",["711"],"no-negated-in-lhs",["712"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-unused-vars","'useParams' is defined but never used.","Identifier","unusedVar","'Axios' is defined but never used.","'PayPalButton' is defined but never used.","'useState' is defined but never used.","'payOrder' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'axios' is defined but never used.","'Razorpay' is defined but never used.","'set' is defined but never used.","'Card' is defined but never used.","'history' is assigned a value but never used.","'formData' is assigned a value but never used.","'setFormData' is assigned a value but never used.","'PromiseProvider' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'userInfo._id', 'userInfo.isAdmin', and 'userInfo.name'. Either include them or remove the dependency array.","ArrayExpression",["713"],"'createProduct' is defined but never used.","'ALL_PRODUCT_LIST_REQUEST' is defined but never used.","'ALL_PRODUCT_LIST_SUCCESS' is defined but never used.","'ALL_PRODUCT_LIST_FAIL' is defined but never used.","'data' is assigned a value but never used.",["714"],"'ORDER_CREATE_RESET' is defined but never used.","'ORDER_SUMMARY_FAIL' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock",["711"],["712"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern",["711"],["712"],["711"],["712"],"no-dupe-keys","Duplicate key 'addS'.","ObjectExpression","'LoadingBox' is defined but never used.","'MessageBox' is defined but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'setSelectedName' is assigned a value but never used.","'setID' is assigned a value but never used.","'redirect' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"715","fix":"716"},{"desc":"717","fix":"718"},"Update the dependencies array to be: [messages, socket, userInfo._id, userInfo.isAdmin, userInfo.name, users]",{"range":"719","text":"720"},"Update the dependencies array to be: [messages, isOpen, socket, userInfo._id, userInfo.name, userInfo.isAdmin]",{"range":"721","text":"722"},[2454,2479],"[messages, socket, userInfo._id, userInfo.isAdmin, userInfo.name, users]",[1134,1160],"[messages, isOpen, socket, userInfo._id, userInfo.name, userInfo.isAdmin]"]