{"version":3,"sources":["screens/HomeScreen.js","constants/userConstants.js","components/LoadingBox.js","components/MessageBox.js","screens/SigninScreen.js","actions/userActions.js","screens/RegisterScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","constants/accountConstants.js","screens/Account_GroupScreen.js","actions/accountActions.js","screens/AccountScreen.js","constants/serviceConstants.js","screens/ServiceScreen.js","actions/serviceActions.js","screens/service_GroupScren.js","constants/productConstants.js","screens/ProductScreen.js","actions/productActions.js","screens/ProductGroupScreen.js","constants/enquiryConstants.js","screens/EnquiryScreen.js","actions/enquiryActions.js","constants/orderConstants.js","screens/OrderScreen.js","actions/orderActions.js","constants/stateConstants.js","screens/StateScreen.js","actions/stateActions.js","constants/districtConstants.js","screens/DistrictScreen.js","actions/districtActions.js","constants/talukaConstants.js","screens/TalukaScreen.js","actions/talukaActions.js","App.js","reportWebVitals.js","store.js","reducers/userReducers.js","reducers/accountReducers.js","reducers/serviceReducers.js","reducers/productReducers.js","reducers/enquiryReducers.js","reducers/orderReducers.js","reducers/stateReducers.js","reducers/districtReducers.js","reducers/talukaReducers.js","index.js"],"names":["HomeScreen","props","useState","name","setName","useEffect","a","axios","get","then","res","data","className","to","style","fontSize","responsive","map","obj","_id","createdAt","Name","type","onClick","history","push","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_SIGNIN_REQUEST","USER_SIGNIN_SUCCESS","USER_SIGNIN_FAIL","USER_SIGNOUT","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_DELETE_RESET","LoadingBox","MessageBox","variant","children","SigninScreen","user_id","setUser_id","redirect","location","search","split","userSignin","useSelector","state","userInfo","loading","error","dispatch","useDispatch","onSubmit","e","preventDefault","payload","Axios","post","localStorage","setItem","JSON","stringify","response","message","signin","htmlFor","id","placeholder","required","onChange","target","value","RegisterScreen","user_name","setUser_Name","userRegister","register","UserListScreen","userList","users","userDelete","loadingDelete","errorDelete","successDelete","success","getState","headers","Authorization","token","deleteHandler","user","userId","window","confirm","delete","email","isSeller","isAdmin","UserEditScreen","match","params","setEmail","setIsSeller","setIsAdmin","userDetails","userUpdate","loadingUpdate","errorUpdate","successUpdate","detailsUser","put","updateUser","checked","ACCOUNT_GROUP_REQUEST","ACCOUNT_GROUP_SUCCESS","ACCOUNT_GROUP_FAIL","ADD_ACCOUNT_REQUEST","ADD_ACCOUNT_SUCCESS","ADD_ACCOUNT_FAIL","ACCOUNT_GROUP_LIST_REQUEST","ACCOUNT_GROUP_LIST_FAIL","ACCOUNT_GROUP_LIST_SUCCESS","ACCOUNT_DETAILS_REQUEST","ACCOUNT_DETAILS_SUCCESS","ACCOUNT_DETAILS_FAIL","AccountGroupScreen","ac_group_title","setAc_group_title","Sub_Group","setSub_Group","account_group","account_groupInfo","group_details","AccountScreen","mobileno","setMobile_No","Ac_Group","setAC_Group","acGroup","setAcGroup","addAct","accountAdd","Mobile_No","addAccount","ADD_SERVICE_REQUEST","ADD_SERVICE_SUCCESS","ADD_SERVICE_FAIL","SERVICE_GROUP_LIST_REQUEST","SERVICE_GROUP_LIST_FAIL","SERVICE_GROUP_LIST_SUCCESS","SERVICE_GROUP_REQUEST","SERVICE_GROUP_SUCCESS","SERVICE_GROUP_FAIL","ServiceScreen","title","setTitle","service_Group","setService_Group","serviceGroup","setServiceGroup","addS","serviceAdd","Title","Sort_Order","Status","Service_Group","service_group_title","ServiceGroupScreen","setService_group_title","serviceGroupInfo","servieGroupAdd","PRODUCT_GROUP_REQUEST","PRODUCT_GROUP_SUCCESS","PRODUCT_GROUP_FAIL","ADD_PRODUCT_REQUEST","ADD_PRODUCT_SUCCESS","ADD_PRODUCT_FAIL","PRODUCT_GROUP_LIST_REQUEST","PRODUCT_GROUP_LIST_FAIL","PRODUCT_GROUP_LIST_SUCCESS","ProductScreen","Product_Group","setProduct_Group","productGroup","setProductGroup","addProd","productAdd","ProductGroup","product_group_title","ProductGroupScreen","setProduct_group_title","productGroupInfo","productDetails","ENQUIRY_CREATE_REQUEST","ENQUIRY_CREATE_SUCCESS","ENQUIRY_CREATE_FAIL","ENQUIRY_LIST_REQUEST","ENQUIRY_LIST_SUCCESS","ENQUIRY_LIST_FAIL","ENQUIRY_DETAILS_FAIL","ENQUIRY_DETAILS_REQUEST","ENQUIRY_DETAILS_SUCCESS","OrderScreen","acName","setAcName","enqId","setEnqID","selectedName","getID","na","Set","item","AccountID","sort","addDetails","enquiryAdd","EnqID","getName","filter","console","log","handleID","textAlign","ADD_ORDER_REQUEST","ADD_ORDER_SUCCESS","ADD_ORDER_FAIL","billing","setBillingAmt","paid","setPaid","product","setProduct","remark","setRemark","setState","district","setDistrict","taluka","setTaluka","pname","setPName","sname","setSName","postEnq","enquiry","postOrder","orderAdd","order","EnquiryDetails","Product","BillingAmt","PaidAmt","Remark","State","District","Taluka","ADD_STATE_REQUEST","ADD_STATE_SUCCESS","ADD_STATE_FAIL","STATE_LIST_REQUEST","STATE_LIST_FAIL","STATE_LIST_SUCCESS","STATE_DETAILS_FAIL","STATE_DETAILS_REQUEST","STATE_DETAILS_SUCCESS","stateA","stateadd","ADD_DISTRICT_REQUEST","ADD_DISTRICT_SUCCESS","ADD_DISTRICT_FAIL","DISTRICT_LIST_REQUEST","DISTRICT_LIST_FAIL","DISTRICT_LIST_SUCCESS","DISTRICT_DETAILS_FAIL","DISTRICT_DETAILS_REQUEST","DISTRICT_DETAILS_SUCCESS","DistrictScreen","sid","setSID","districtA","districtadd","SID","ADD_TALUKA_REQUEST","ADD_TALUKA_SUCCESS","ADD_TALUKA_FAIL","TALUKA_LIST_REQUEST","TALUKA_LIST_FAIL","TALUKA_LIST_SUCCESS","TALUKA_DETAILS_FAIL","TALUKA_DETAILS_REQUEST","TALUKA_DETAILS_SUCCESS","TalukaScreen","did","setDID","talukaA","talukaadd","DID","App","path","component","EnquiryScreen","ServiceGroupScren","StateScreen","removeItem","document","href","admin","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","getItem","parse","reducer","combineReducers","action","userUpdateProfile","acgrouplist","listgroups","serviceGrouplist","listServices","productGrouplist","listproducts","enqlist","listenquiry","accountDetails","account","listState","st","listDistrict","t","listTaluka","composeEnhancer","_REDUX_DEVTOOLS_EXTENSION_COMPOSE_","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f1ac8dd8.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nexport default function HomeScreen(props) {\r\n  const [name, setName] = useState([]);\r\n\r\n  useEffect(async () => {\r\n    await axios.get('http://127.0.0.1:8080/api/enquiry/all').then((res) => {\r\n        setName(res.data);\r\n    })\r\n}, [])\r\n\r\n  return (\r\n    <>\r\n    <div className='container'>\r\n       <Link to='/enquiry'><h2 style={{ fontSize:'20px'}}>Enquiry</h2></Link>\r\n      <Link to='/account'><h2 style={{ fontSize:'20px'}}>Account</h2></Link>\r\n      <Link to='/account_group'><h2 style={{ fontSize:'20px'}}>Account Group</h2></Link>\r\n      <Link to='/product'><h2 style={{ fontSize:'20px'}}>Product</h2></Link>\r\n      <Link to='/productGroup'><h2 style={{ fontSize:'20px'}}>Product Group</h2></Link>\r\n      <Link to='/services'><h2 style={{ fontSize:'20px'}}>Services</h2></Link>\r\n      <Link to='/serviceGroup'><h2 style={{ fontSize:'20px'}}>Service Group</h2></Link>\r\n      <Link to='/state'><h2 style={{ fontSize:'20px'}}>State</h2></Link>\r\n      <Link to='/district'><h2 style={{ fontSize:'20px'}}>District</h2></Link>\r\n      <Link to='/taluka'><h2 style={{ fontSize:'20px'}}>Taluka</h2></Link>\r\n   \r\n    <div className='table'>\r\n      <table responsive>\r\n      <thead>\r\n                    <tr>\r\n                        <th>ID</th> \r\n                        <th>Date</th>    \r\n                        <th>EnqID</th>             \r\n                        <th>Name</th>    \r\n                                 \r\n                    </tr>\r\n      </thead>\r\n      <tbody>\r\n          {                    \r\n                    name.map((obj) =>\r\n                     (\r\n                            <tr key={obj._id}>\r\n                            <td>{obj._id}</td>\r\n                            <td>{obj.createdAt}</td>\r\n                            <td>{obj.Name}</td>   \r\n                            <td></td>                     \r\n                            <td>\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"small\"\r\n                                onClick={() =>props.history.push(`/order/${obj._id}/edit`)}\r\n                            >\r\n                              Edit\r\n                            </button>\r\n                            <button\r\n                               type=\"button\"\r\n                               className=\"small\"\r\n                               \r\n                            >\r\n                              Delete\r\n                            </button>\r\n                            </td>\r\n                        </tr>                                  \r\n                    ))\r\n                }\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n","export const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST';\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS';\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL';\r\n\r\nexport const USER_SIGNIN_REQUEST = 'USER_SIGNIN_REQUEST';\r\nexport const USER_SIGNIN_SUCCESS = 'USER_SIGNIN_SUCCESS';\r\nexport const USER_SIGNIN_FAIL = 'USER_SIGNIN_FAIL';\r\nexport const USER_SIGNOUT = 'USER_SIGNOUT';\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST';\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS';\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL';\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET';\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST';\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS';\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL';\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_REST';\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST';\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS';\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL';\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST';\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS';\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL';\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET';\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST';\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS';\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL';\r\nexport const USER_DELETE_RESET = 'USER_DELETE_RESET';\r\n\r\n","import React from 'react';\r\n\r\nexport default function LoadingBox() {\r\n    return(\r\n        <div className=\"loading\">\r\n            <i className=\"fa fa-spinner fa-spin\"></i> Loading...\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nexport default function MessageBox(props) {\r\n  return (\r\n    <div className={`alert alert-${props.variant || 'info'}`}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { signin } from '../actions/userActions';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\n\r\nexport default function SigninScreen(props) {\r\n  const [user_id, setUser_id] = useState('');\r\n\r\n  const redirect = props.location.search\r\n    ? props.location.search.split('=')[1]\r\n    : '/';\r\n\r\n  const userSignin = useSelector((state) => state.userSignin);\r\n  const { userInfo, loading, error } = userSignin;\r\n\r\n  const dispatch = useDispatch();\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(signin(user_id));\r\n  };\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      props.history.push(redirect);\r\n    }\r\n  }, [props.history, redirect, userInfo]);\r\n  return (\r\n    <div>\r\n      <form className=\"form\" onSubmit={submitHandler}>\r\n        <div>\r\n          <h1>Sign In</h1>\r\n        </div>\r\n        {loading && <LoadingBox></LoadingBox>}\r\n        {error && <MessageBox variant=\"danger\">{error}</MessageBox>}\r\n        <div>\r\n          <label htmlFor=\"mobileno\">Mobile No</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"user_id\"\r\n            placeholder=\"Enter mobile no\"\r\n            required\r\n            onChange={(e) => setUser_id(e.target.value)}\r\n          ></input>\r\n        </div>\r\n       \r\n        <div>\r\n          <label />\r\n          <button className=\"primary\" type=\"submit\">\r\n            Log In\r\n          </button>\r\n        </div>\r\n        <div>\r\n          <label />\r\n          <div>\r\n            New user? <Link to={`/register?redirect=${redirect}`}>Create your account</Link>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import Axios from 'axios';\r\nimport { USER_SIGNIN_FAIL, USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS, USER_SIGNOUT, \r\n  USER_REGISTER_SUCCESS, USER_REGISTER_REQUEST, USER_REGISTER_FAIL, \r\n  USER_DETAILS_REQUEST, USER_DETAILS_FAIL, USER_DETAILS_SUCCESS, \r\n  USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_LIST_REQUEST, USER_LIST_SUCCESS, USER_LIST_FAIL,\r\n  USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DELETE_FAIL,\r\n  USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS, USER_UPDATE_FAIL,\r\n } from \"../constants/userConstants\";\r\n\r\nexport const register = (user_name, user_id) => async (dispatch) => {\r\n  dispatch({ type: USER_REGISTER_REQUEST, payload: { user_name, user_id } });\r\n  try {\r\n    const { data } = await Axios.post('/api/users/register', { user_name, user_id });\r\n    dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\r\n    dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\r\n    localStorage.setItem('userInfo', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const signin = (user_id) => async (dispatch) => {\r\n  dispatch({ type: USER_SIGNIN_REQUEST, payload: { user_id } });\r\n  try {\r\n    const { data } = await Axios.post('/api/users/signin', { user_id });\r\n    dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\r\n    localStorage.setItem('userInfo', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_SIGNIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const signout = () => (dispatch) => {\r\n  localStorage.removeItem('userInfo');\r\n  dispatch({ type: USER_SIGNOUT });\r\n  document.location.href = '/signin';\r\n};\r\n\r\nexport const detailsUser = (userId) => async (dispatch, getState) => {\r\n  dispatch({ type: USER_DETAILS_REQUEST, payload: userId });\r\n  const {\r\n    userSignin: { userInfo },\r\n  } = getState();\r\n  try {\r\n    const { data } = await Axios.get(`/api/users/${userId}`, {\r\n      headers: { Authorization: `Sanju ${userInfo?.token}` },\r\n    });\r\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: USER_DETAILS_FAIL, payload: message });\r\n  }\r\n};\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n  dispatch({ type: USER_UPDATE_PROFILE_REQUEST, payload: user });\r\n  const {\r\n    userSignin: { userInfo },\r\n  } = getState();\r\n  try {\r\n    const { data } = await Axios.put(`/api/users/profile`, user, {\r\n      headers: { Authorization: `Sanju ${userInfo.token}` },\r\n    });\r\n    dispatch({ type: USER_UPDATE_PROFILE_SUCCESS, payload: data });\r\n    dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\r\n    localStorage.setItem('userInfo', JSON.stringify(data));\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: USER_UPDATE_PROFILE_FAIL, payload: message });\r\n  }\r\n};\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n  dispatch({ type: USER_LIST_REQUEST });\r\n  try {\r\n    const {\r\n      userSignin: { userInfo },\r\n    } = getState();\r\n    const { data } = await Axios.get('/api/users', {\r\n      headers: {\r\n        Authorization: `Sanju ${userInfo.token}`,\r\n      },\r\n    });\r\n    dispatch({ type: USER_LIST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: USER_LIST_FAIL, payload: message });\r\n  }\r\n};\r\n\r\nexport const deleteUser = (userId) => async (dispatch, getState) => {\r\n  dispatch({ type: USER_DELETE_REQUEST, payload: userId });\r\n  const {\r\n    userSignin: { userInfo },\r\n  } = getState();\r\n  try {\r\n    const { data } = await Axios.delete(`/api/users/${userId}`, {\r\n      headers: { Authorization: `Sanju ${userInfo.token}` },\r\n    });\r\n    dispatch({ type: USER_DELETE_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: USER_DELETE_FAIL, payload: message });\r\n  }\r\n};\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n  dispatch({ type: USER_UPDATE_REQUEST, payload: user });\r\n  const {\r\n    userSignin: { userInfo },\r\n  } = getState();\r\n  try {\r\n    const { data } = await Axios.put(`/api/users/${user._id}`, user, {\r\n      headers: { Authorization: `Sanju ${userInfo.token}` },\r\n    });\r\n    dispatch({ type: USER_UPDATE_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: USER_UPDATE_FAIL, payload: message });\r\n  }\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { register } from '../actions/userActions';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\n\r\nexport default function RegisterScreen(props) {\r\n  const [user_name, setUser_Name] = useState('');\r\n  const [user_id, setUser_id] = useState('');\r\n\r\n  const redirect = props.location.search\r\n    ? props.location.search.split('=')[1]\r\n    : '/';\r\n\r\n  const userRegister = useSelector((state) => state.userRegister);\r\n  const { userInfo, loading, error } = userRegister;\r\n\r\n  const dispatch = useDispatch();\r\n  const submitHandler = () => {   \r\n      dispatch(register(user_name, user_id));\r\n    \r\n  };\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      props.history.push(redirect);\r\n    }\r\n  }, [props.history, redirect, userInfo]);\r\n  return (\r\n    <div>\r\n      <form className=\"form\" onSubmit={submitHandler}>\r\n        <div>\r\n          <h1>Create Account</h1>\r\n        </div>\r\n        {loading && <LoadingBox></LoadingBox>}\r\n        {error && <MessageBox variant=\"danger\">{error}</MessageBox>}\r\n        <div>\r\n          <label htmlFor=\"name\">Name</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"name\"\r\n            placeholder=\"Enter name\"\r\n            required\r\n            onChange={(e) => setUser_Name(e.target.value)}\r\n          ></input>\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"mobileno\">Mobile No</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"user_id\"\r\n            placeholder=\"Enter Mobile no\"\r\n            required\r\n            onChange={(e) => setUser_id(e.target.value)}\r\n          ></input>\r\n        </div>\r\n        <div>\r\n          <label />\r\n          <button className=\"primary\" type=\"submit\">\r\n            Register\r\n          </button>\r\n        </div>\r\n        <div>\r\n          <label />\r\n          <div>\r\n            Already have an account?{' '}\r\n            <Link to={`/signin?redirect=${redirect}`}>Sign-In</Link>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteUser, listUsers } from '../actions/userActions';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport { USER_DETAILS_RESET } from '../constants/userConstants';\r\n\r\n\r\nexport default function UserListScreen(props) {\r\n  const userList = useSelector((state) => state.userList);\r\n  const { loading, error, users } = userList;\r\n\r\n  const userDelete = useSelector((state) => state.userDelete);\r\n  const {\r\n    loading: loadingDelete,\r\n    error: errorDelete,\r\n    success: successDelete,\r\n  } = userDelete;\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(listUsers());\r\n    dispatch({ type: USER_DETAILS_RESET });\r\n  }, [dispatch, successDelete]);\r\n  const deleteHandler = (user) => {\r\n    if (window.confirm('Are you sure?')) {\r\n      dispatch(deleteUser(user._id));\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <h1>Users</h1>\r\n      {loadingDelete && <LoadingBox></LoadingBox>}\r\n      {errorDelete && <MessageBox variant=\"danger\">{errorDelete}</MessageBox>}\r\n      {successDelete && (\r\n        <MessageBox variant=\"success\">User Deleted Successfully</MessageBox>\r\n      )}\r\n      {loading ? (\r\n        <LoadingBox></LoadingBox>\r\n      ) : error ? (\r\n        <MessageBox variant=\"danger\">{error}</MessageBox>\r\n      ) : (\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>NAME</th>\r\n              <th>EMAIL</th>\r\n              <th>IS SELLER</th>\r\n              <th>IS ADMIN</th>\r\n              <th>ACTIONS</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {users.map((user) => (\r\n              <tr key={user._id}>\r\n                <td>{user._id}</td>\r\n                <td>{user.name}</td>\r\n                <td>{user.email}</td>\r\n                <td>{user.isSeller ? 'YES' : ' NO'}</td>\r\n                <td>{user.isAdmin ? 'YES' : 'NO'}</td>\r\n                <td>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"small\"\r\n                    onClick={() => props.history.push(`/user/${user._id}/edit`)}                  \r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"small\"\r\n                    onClick={() => deleteHandler(user)}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { detailsUser, updateUser } from '../actions/userActions';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants';\r\n\r\nexport default function UserEditScreen(props) {\r\n  const userId = props.match.params.id;\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [isSeller, setIsSeller] = useState(false);\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate);\r\n  const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = userUpdate;\r\n\r\n  \r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if(successUpdate) {\r\n        dispatch({ type: USER_UPDATE_RESET });\r\n        props.history.push('/userlist');\r\n    }\r\n    if (!user) {\r\n      dispatch(detailsUser(userId));\r\n    } else {\r\n      setName(user.name);\r\n      setEmail(user.email);\r\n      setIsSeller(user.isSeller);\r\n      setIsAdmin(user.isAdmin);\r\n    }\r\n  }, [dispatch, props.history, successUpdate, user, userId]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    // dispatch update user\r\n    dispatch(updateUser({ _id: userId, name, email, isSeller, isAdmin})); \r\n  };\r\n  \r\n  return (\r\n    <div>\r\n      <form className=\"form\" onSubmit={submitHandler}>\r\n        <div>\r\n          <h1>Edit User {name}</h1>\r\n            {loadingUpdate && <LoadingBox />}\r\n            {errorUpdate && <MessageBox variant=\"danger\">{errorUpdate}</MessageBox>}\r\n        </div>\r\n        {loading ? (\r\n          <LoadingBox />\r\n        ) : error ? (\r\n          <MessageBox variant=\"danger\">{error}</MessageBox>\r\n        ) : (\r\n          <>\r\n            <div>\r\n              <label htmlFor=\"name\">Name</label>\r\n              <input\r\n                id=\"name\"\r\n                type=\"text\"\r\n                placeholder=\"Enter name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></input>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"email\">Email</label>\r\n              <input\r\n                id=\"email\"\r\n                type=\"email\"\r\n                placeholder=\"Enter email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></input>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"isSeller\">Is Seller</label>\r\n              <input\r\n                id=\"isSeller\"\r\n                type=\"checkbox\"\r\n                checked={isSeller}\r\n                onChange={(e) => setIsSeller(e.target.checked)}\r\n              ></input>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"isAdmin\">Is Admin</label>\r\n              <input\r\n                id=\"isAdmin\"\r\n                type=\"checkbox\"\r\n                checked={isAdmin}\r\n                onChange={(e) => setIsAdmin(e.target.checked)}\r\n              ></input>\r\n            </div>\r\n            <div>\r\n              <button type=\"submit\" className=\"primary\">\r\n                Update\r\n              </button>\r\n            </div>\r\n          </>\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","export const ACCOUNT_GROUP_REQUEST = 'ACCOUNT_GROUP_REQUEST';\r\nexport const ACCOUNT_GROUP_SUCCESS = 'ACCOUNT_GROUP_SUCCESS';\r\nexport const ACCOUNT_GROUP_FAIL = 'ACCOUNT_GROUP_FAIL';\r\n\r\nexport const ADD_ACCOUNT_REQUEST = 'ADD_ACCOUNT_REQUEST';\r\nexport const ADD_ACCOUNT_SUCCESS = 'ADD_ACCOUNT_SUCCESS';\r\nexport const ADD_ACCOUNT_FAIL = 'ADD_ACCOUNT_FAIL';\r\n\r\nexport const ACCOUNT_GROUP_LIST_REQUEST = 'ACCOUNT_GROUP_LIST_REQUEST';\r\nexport const ACCOUNT_GROUP_LIST_FAIL = 'ACCOUNT_GROUP_LIST_FAIL';\r\nexport const ACCOUNT_GROUP_LIST_SUCCESS = 'ACCOUNT_GROUP_LIST_SUCCESS';\r\n\r\nexport const ACCOUNT_DETAILS_REQUEST = 'ACCOUNT_DETAILS_REQUEST';\r\nexport const ACCOUNT_DETAILS_SUCCESS = 'ACCOUNT_DETAILS_SUCCESS';\r\nexport const ACCOUNT_DETAILS_FAIL = 'ACCOUNT_DETAILS_FAIL';\r\nexport const ACCOUNT_DETAILS_RESET = 'ACCOUNT_DETAILS_RESET';\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { group_details } from '../actions/accountActions';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\n\r\nexport default function AccountGroupScreen(props) {\r\n  const [ac_group_title, setAc_group_title] = useState('');\r\n  const [Sub_Group, setSub_Group] = useState('');\r\n\r\n  const redirect = props.location.search\r\n    ? props.location.search.split('=')[1]\r\n    : '/';\r\n\r\n  const account_group = useSelector((state) => state.account_group);\r\n  const { account_groupInfo, loading, error } = account_group;\r\n\r\n  const dispatch = useDispatch();\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(group_details(ac_group_title, Sub_Group));\r\n  };\r\n  useEffect(() => {\r\n    if (account_groupInfo) {\r\n      props.history.push(redirect);\r\n    }\r\n  }, [props.history, redirect, account_groupInfo]);\r\n  \r\n  return (\r\n    <div>\r\n    <form className=\"form\" onSubmit={submitHandler}>\r\n      <div>\r\n        <h1>Add Account Group</h1>\r\n      </div>\r\n      {loading && <LoadingBox></LoadingBox>}\r\n      {error && <MessageBox variant=\"danger\">{error}</MessageBox>}\r\n      <div>\r\n        <label htmlFor=\"ac_group_title\">Account Group Title</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"ac_group_title\"\r\n          placeholder=\"Enter name\"\r\n          required\r\n          onChange={(e) => setAc_group_title(e.target.value)}\r\n        ></input>\r\n      </div>\r\n      \r\n      <div>\r\n        <label htmlFor=\"Group\">Select Sub-Group</label>\r\n        <select id='Sub_Group' onChange={(e) => setSub_Group(e.target.value)}>\r\n          <option>A</option>\r\n          <option>B</option>\r\n          <option>C</option>\r\n          <option>D</option>\r\n        </select>\r\n       \r\n      </div>\r\n     \r\n      <div>\r\n        <label />\r\n        <button className=\"primary\" type=\"submit\">\r\n          Save\r\n        </button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  );\r\n}\r\n","import Axios from 'axios';\r\nimport {\r\n  ACCOUNT_GROUP_REQUEST, ACCOUNT_GROUP_SUCCESS, ACCOUNT_GROUP_FAIL,\r\n  ADD_ACCOUNT_FAIL, ADD_ACCOUNT_REQUEST, ADD_ACCOUNT_SUCCESS,\r\n  ACCOUNT_GROUP_LIST_FAIL, ACCOUNT_GROUP_LIST_REQUEST, ACCOUNT_GROUP_LIST_SUCCESS,\r\n  ACCOUNT_DETAILS_FAIL,ACCOUNT_DETAILS_REQUEST,ACCOUNT_DETAILS_SUCCESS\r\n } from \"../constants/accountConstants\";\r\n\r\n export const grouplist = ({}) => async (dispatch) => {\r\n  dispatch({ type: ACCOUNT_GROUP_LIST_REQUEST });\r\n  try {\r\n    const { data } = await Axios.get(\r\n      `/api/accountGroup/list`\r\n    );\r\n    dispatch({ type: ACCOUNT_GROUP_LIST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: ACCOUNT_GROUP_LIST_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\n\r\nexport const group_details = (ac_group_title, Sub_Group) => async (dispatch) => {\r\n  dispatch({ type: ACCOUNT_GROUP_REQUEST, payload: { ac_group_title, Sub_Group } });\r\n  try {\r\n    const { data } = await Axios.post('/api/accountGroup/', { ac_group_title, Sub_Group });\r\n    dispatch({ type: ACCOUNT_GROUP_SUCCESS, payload: data });\r\n    localStorage.setItem('account_groupInfo', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ACCOUNT_GROUP_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const addAccount = (Name, Mobile_No, Ac_Group) => async (dispatch) => {\r\n  dispatch({ type: ADD_ACCOUNT_REQUEST, payload: { Name, Mobile_No, Ac_Group } });\r\n  try {\r\n    const { data } = await Axios.post('/api/account/add', { Name, Mobile_No, Ac_Group });\r\n    dispatch({ type: ADD_ACCOUNT_SUCCESS, payload: data });\r\n    localStorage.setItem('accountAdd', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ADD_ACCOUNT_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n\r\nexport const detailsAccount = (accountId) => async (dispatch) =>{\r\n  dispatch({\r\n      type: ACCOUNT_DETAILS_REQUEST, payload: accountId });\r\n  try {\r\n      const { data } = await Axios.get(`/api/account/${accountId}`);\r\n      dispatch({ type: ACCOUNT_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n      dispatch({ \r\n          type: ACCOUNT_DETAILS_FAIL, \r\n          payload: \r\n          error.response && error.response.data.message \r\n          ? error.response.data.message \r\n          : error.message,\r\n      });\r\n  }\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addAccount } from '../actions/accountActions';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport axios from 'axios';\r\n\r\nexport default function AccountScreen(props) {\r\n  const [name, setName] = useState('');\r\n  const [mobileno, setMobile_No] = useState('');\r\n  const [Ac_Group, setAC_Group] = useState('');\r\n  const [acGroup, setAcGroup] = useState([]);\r\n\r\n  useEffect(async () => {\r\n    await axios.get('http://127.0.0.1:8080/api/accountGroup/list').then((res) => {\r\n        setAcGroup(res.data);\r\n    })\r\n}, [])\r\n\r\n\r\n\r\n  const redirect = props.location.search\r\n    ? props.location.search.split('=')[1]\r\n    : '/';\r\n\r\n \r\n  const addAct = useSelector((state) => state.addAct);\r\n  const { accountAdd, loading, error } = addAct;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(addAccount(name, mobileno, Ac_Group));\r\n  };\r\n  useEffect(() => {\r\n    if (accountAdd) {\r\n      props.history.push(redirect);\r\n    }\r\n  }, [props.history, redirect, accountAdd]);\r\n  \r\n  return (\r\n    <div>\r\n    <form className=\"form\" onSubmit={submitHandler}>\r\n      <div>\r\n        <h1>Add Account</h1>\r\n      </div>\r\n      {loading && <LoadingBox></LoadingBox>}\r\n      {error && <MessageBox variant=\"danger\">{error}</MessageBox>}\r\n      <div>\r\n        <label htmlFor=\"name\">Name</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"Name\"\r\n          placeholder=\"Enter name\"\r\n          required\r\n          onChange={(e) => setName(e.target.value)}\r\n        ></input>\r\n      </div>\r\n      \r\n      <div>\r\n        <label htmlFor=\"mobileno\">Mobile No</label>\r\n        <input type=\"text\" id='Mobile_No' placeholder=\"Enter mobile no\" required onChange={(e) => setMobile_No(e.target.value)} />      \r\n      </div>\r\n\r\n \r\n      <div>\r\n      <label>Select Account Group</label>\r\n      <select name=\"Ac_Group\" id=\"Ac_Group\" onChange={(e) => setAC_Group(e.target.value)}>\r\n                                <option>---Select---</option>\r\n                                    {acGroup && acGroup.map((obj) => {\r\n                                        return <option value={obj._id}>{obj.ac_group_title}</option>\r\n                                    })\r\n                                    }\r\n                                </select>\r\n      </div>\r\n     \r\n      <div>\r\n        <label />\r\n        <button className=\"primary\" type=\"submit\">\r\n          Save\r\n        </button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  );\r\n}\r\n","export const ADD_SERVICE_REQUEST = 'ADD_SERVICE_REQUEST';\r\nexport const ADD_SERVICE_SUCCESS = 'ADD_SERVICE_SUCCESS';\r\nexport const ADD_SERVICE_FAIL = 'ADD_SERVICE_FAIL';\r\n\r\nexport const SERVICE_GROUP_LIST_REQUEST = 'SERVICE_GROUP_LIST_REQUEST';\r\nexport const SERVICE_GROUP_LIST_FAIL = 'SERVICE_GROUP_LIST_FAIL';\r\nexport const SERVICE_GROUP_LIST_SUCCESS = 'SERVICE_GROUP_LIST_SUCCESS';\r\n\r\n\r\nexport const SERVICE_GROUP_REQUEST = 'SERVICE_GROUP_REQUEST';\r\nexport const SERVICE_GROUP_SUCCESS = 'SERVICE_GROUP_SUCCESS';\r\nexport const SERVICE_GROUP_FAIL = 'SERVICE_GROUP_FAIL';\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addService } from '../actions/serviceActions';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport axios from 'axios';\r\n\r\nexport default function ServiceScreen(props) {\r\n  const [title, setTitle] = useState('');\r\n  const [service_Group, setService_Group] = useState('');\r\n  const [serviceGroup, setServiceGroup] = useState([]);\r\n\r\n  useEffect(async () => {\r\n    await axios.get('http://127.0.0.1:8080/api/serviceGroup/list').then((res) => {\r\n        setServiceGroup(res.data);\r\n    })\r\n}, [])\r\n\r\n  const redirect = props.location.search\r\n    ? props.location.search.split('=')[1]\r\n    : '/';\r\n\r\n  const addS = useSelector((state) => state.addS);\r\n  const { serviceAdd, loading, error } = addS;\r\n\r\n  const dispatch = useDispatch();\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(addService(title, service_Group));\r\n  };\r\n  useEffect(() => {\r\n    if (serviceAdd) {\r\n      props.history.push(redirect);\r\n    }\r\n  }, [props.history, redirect, serviceAdd]);\r\n  return (\r\n    <div>\r\n      <form className=\"form\" onSubmit={submitHandler}>\r\n        <div>\r\n          <h1>Add Service</h1>\r\n        </div>\r\n        {loading && <LoadingBox></LoadingBox>}\r\n        {error && <MessageBox variant=\"danger\">{error}</MessageBox>}\r\n        <div>\r\n          <label htmlFor=\"title\">Title</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"title\"\r\n            placeholder=\"Enter Title\"\r\n            required\r\n            onChange={(e) => setTitle(e.target.value)}\r\n          ></input>\r\n        </div>\r\n\r\n        <div>\r\n      <label>Select Service Group</label>\r\n      <select name=\"Service_Group\" id=\"Service_Group\" onChange={(e) => setService_Group(e.target.value)}>\r\n                                <option>---Select---</option>\r\n                                    {serviceGroup && serviceGroup.map((obj) => {\r\n                                        return <option value={obj._id}>{obj.service_group_title}</option>\r\n                                    })\r\n                                    }\r\n                                </select>\r\n      </div>\r\n        <div>\r\n          <label />\r\n          <button className=\"primary\" type=\"submit\">\r\n            Save\r\n          </button>\r\n        </div>\r\n       \r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import Axios from 'axios';\r\nimport {\r\n  ADD_SERVICE_FAIL, ADD_SERVICE_REQUEST, ADD_SERVICE_SUCCESS,\r\n  SERVICE_GROUP_LIST_FAIL, SERVICE_GROUP_LIST_REQUEST, SERVICE_GROUP_LIST_SUCCESS,\r\n  SERVICE_GROUP_REQUEST,SERVICE_GROUP_FAIL,SERVICE_GROUP_SUCCESS\r\n } from \"../constants/serviceConstants\";\r\n\r\n export const serviceGrouplist = ({}) => async (dispatch) => {\r\n  dispatch({ type: SERVICE_GROUP_LIST_REQUEST });\r\n  try {\r\n    const { data } = await Axios.get(\r\n      `/api/serviceGroup/list`\r\n    );\r\n    dispatch({ type: SERVICE_GROUP_LIST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: SERVICE_GROUP_LIST_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\n\r\nexport const servieGroupAdd = (service_group_title, Sub_Group) => async (dispatch) => {\r\n  dispatch({ type: SERVICE_GROUP_REQUEST, payload: { service_group_title, Sub_Group } });\r\n  try {\r\n    const { data } = await Axios.post('/api/serviceGroup/', { service_group_title, Sub_Group });\r\n    dispatch({ type: SERVICE_GROUP_SUCCESS, payload: data });\r\n    localStorage.setItem('service_groupInfo', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: SERVICE_GROUP_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n\r\nexport const addService = (Title, Sort_Order, Status, Service_Group) => async (dispatch) => {\r\n  dispatch({ type: ADD_SERVICE_REQUEST, payload: { Title, Sort_Order, Status, Service_Group } });\r\n  try {\r\n    const { data } = await Axios.post('/api/services/add', { Title, Sort_Order, Status, Service_Group });\r\n    dispatch({ type: ADD_SERVICE_SUCCESS, payload: data });\r\n    localStorage.setItem('serviceAdd', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ADD_SERVICE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { servieGroupAdd } from '../actions/serviceActions';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\n\r\nexport default function ServiceGroupScreen(props) {\r\n  const [service_group_title, setService_group_title] = useState('');\r\n  const [Sub_Group, setSub_Group] = useState('');\r\n\r\n  const redirect = props.location.search\r\n    ? props.location.search.split('=')[1]\r\n    : '/';\r\n\r\n  const serviceGroup = useSelector((state) => state.serviceGroup);\r\n  const { serviceGroupInfo, loading, error } = serviceGroup;\r\n\r\n  const dispatch = useDispatch();\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(servieGroupAdd(service_group_title, Sub_Group));\r\n  };\r\n  useEffect(() => {\r\n    if (serviceGroupInfo) {\r\n      props.history.push(redirect);\r\n    }\r\n  }, [props.history, redirect, serviceGroupInfo]);\r\n  \r\n  return (\r\n    <div>\r\n    <form className=\"form\" onSubmit={submitHandler}>\r\n      <div>\r\n        <h1>Add Service Group</h1>\r\n      </div>\r\n      {loading && <LoadingBox></LoadingBox>}\r\n      {error && <MessageBox variant=\"danger\">{error}</MessageBox>}\r\n      <div>\r\n        <label htmlFor=\"service_group_title\">Service Group Title</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"service_group_title\"\r\n          placeholder=\"Enter name\"\r\n          required\r\n          onChange={(e) => setService_group_title(e.target.value)}\r\n        ></input>\r\n      </div>\r\n      \r\n      <div>\r\n        <label htmlFor=\"Group\">Select Sub-Group</label>\r\n        <select id='Sub_Group' onChange={(e) => setSub_Group(e.target.value)}>\r\n          <option>A</option>\r\n          <option>B</option>\r\n          <option>C</option>\r\n          <option>D</option>\r\n        </select>\r\n       \r\n      </div>\r\n     \r\n      <div>\r\n        <label />\r\n        <button className=\"primary\" type=\"submit\">\r\n          Save\r\n        </button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  );\r\n}\r\n","export const PRODUCT_GROUP_REQUEST = 'PRODUCT_GROUP_REQUEST';\r\nexport const PRODUCT_GROUP_SUCCESS = 'PRODUCT_GROUP_SUCCESS';\r\nexport const PRODUCT_GROUP_FAIL = 'PRODUCT_GROUP_FAIL';\r\n\r\nexport const ADD_PRODUCT_REQUEST = 'ADD_PRODUCT_REQUEST';\r\nexport const ADD_PRODUCT_SUCCESS = 'ADD_PRODUCT_SUCCESS';\r\nexport const ADD_PRODUCT_FAIL = 'ADD_PRODUCT_FAIL';\r\n\r\nexport const PRODUCT_GROUP_LIST_REQUEST = 'PRODUCT_GROUP_LIST_REQUEST';\r\nexport const PRODUCT_GROUP_LIST_FAIL = 'PRODUCT_GROUP_LIST_FAIL';\r\nexport const PRODUCT_GROUP_LIST_SUCCESS = 'PRODUCT_GROUP_LIST_SUCCESS';\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addProduct } from '../actions/productActions';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport axios from 'axios';\r\n\r\nexport default function ProductScreen(props) {\r\n  const [name, setName] = useState('');\r\n  const [Product_Group, setProduct_Group] = useState('');\r\n  const [productGroup, setProductGroup] = useState([]);\r\n\r\n  useEffect(async () => {\r\n    await axios.get('http://127.0.0.1:8080/api/productGroup/list').then((res) => {\r\n        setProductGroup(res.data);\r\n    })\r\n}, [])\r\n\r\n\r\n\r\n  const redirect = props.location.search\r\n    ? props.location.search.split('=')[1]\r\n    : '/';\r\n\r\n \r\n  const addProd = useSelector((state) => state.addProd);\r\n  const { productAdd, loading, error } = addProd;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(addProduct(name, Product_Group));\r\n  };\r\n  useEffect(() => {\r\n    if (productAdd) {\r\n      props.history.push(redirect);\r\n    }\r\n  }, [props.history, redirect, productAdd]);\r\n  \r\n  return (\r\n    <div>\r\n    <form className=\"form\" onSubmit={submitHandler}>\r\n      <div>\r\n        <h1>Add Product</h1>\r\n      </div>\r\n      {loading && <LoadingBox></LoadingBox>}\r\n      {error && <MessageBox variant=\"danger\">{error}</MessageBox>}\r\n      <div>\r\n        <label htmlFor=\"name\">Name</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"Name\"\r\n          placeholder=\"Enter name\"\r\n          required\r\n          onChange={(e) => setName(e.target.value)}\r\n        ></input>\r\n      </div>\r\n \r\n      <div>\r\n      <label>Select Product Group</label>\r\n      <select name=\"Product_Group\" id=\"ProductGroup\" onChange={(e) => setProduct_Group(e.target.value)}>\r\n                                <option>---Select---</option>\r\n                                    {productGroup && productGroup.map((obj) => {\r\n                                        return <option value={obj._id}>{obj.product_group_title}</option>\r\n                                    })\r\n                                    }\r\n                                </select>\r\n      </div>\r\n     \r\n      <div>\r\n        <label />\r\n        <button className=\"primary\" type=\"submit\">\r\n          Save\r\n        </button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  );\r\n}\r\n","import Axios from 'axios';\r\nimport {\r\n  PRODUCT_GROUP_REQUEST, PRODUCT_GROUP_SUCCESS, PRODUCT_GROUP_FAIL,\r\n  ADD_PRODUCT_FAIL, ADD_PRODUCT_REQUEST, ADD_PRODUCT_SUCCESS,\r\n  PRODUCT_GROUP_LIST_FAIL, PRODUCT_GROUP_LIST_REQUEST, PRODUCT_GROUP_LIST_SUCCESS\r\n } from \"../constants/productConstants\";\r\n\r\n export const productgrouplist = ({}) => async (dispatch) => {\r\n  dispatch({ type: PRODUCT_GROUP_LIST_REQUEST });\r\n  try {\r\n    const { data } = await Axios.get(\r\n      `/api/productGroup/list`\r\n    );\r\n    dispatch({ type: PRODUCT_GROUP_LIST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: PRODUCT_GROUP_LIST_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\n\r\nexport const productDetails = (product_group_title, Sub_Group) => async (dispatch) => {\r\n  dispatch({ type: PRODUCT_GROUP_REQUEST, payload: { product_group_title, Sub_Group } });\r\n  try {\r\n    const { data } = await Axios.post('/api/productGroup/', { product_group_title, Sub_Group });\r\n    dispatch({ type: PRODUCT_GROUP_SUCCESS, payload: data });\r\n    localStorage.setItem('productGroupInfo', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_GROUP_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const addProduct = (Name, ProductGroup) => async (dispatch) => {\r\n  dispatch({ type: ADD_PRODUCT_REQUEST, payload: { Name, ProductGroup } });\r\n  try {\r\n    const { data } = await Axios.post('/api/product/add', { Name, ProductGroup });\r\n    dispatch({ type: ADD_PRODUCT_SUCCESS, payload: data });\r\n    localStorage.setItem('productAdd', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ADD_PRODUCT_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { productDetails } from '../actions/productActions';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\n\r\nexport default function ProductGroupScreen(props) {\r\n  const [product_group_title, setProduct_group_title] = useState('');\r\n  const [Sub_Group, setSub_Group] = useState('');\r\n\r\n  const redirect = props.location.search\r\n    ? props.location.search.split('=')[1]\r\n    : '/';\r\n\r\n  const productGroup = useSelector((state) => state.productGroup);\r\n  const { productGroupInfo, loading, error } = productGroup;\r\n\r\n  const dispatch = useDispatch();\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(productDetails(product_group_title, Sub_Group));\r\n  };\r\n  useEffect(() => {\r\n    if (productGroupInfo) {\r\n      props.history.push(redirect);\r\n    }\r\n  }, [props.history, redirect, productGroupInfo]);\r\n  \r\n  return (\r\n    <div>\r\n    <form className=\"form\" onSubmit={submitHandler}>\r\n      <div>\r\n        <h1>Add Product Group</h1>\r\n      </div>\r\n      {loading && <LoadingBox></LoadingBox>}\r\n      {error && <MessageBox variant=\"danger\">{error}</MessageBox>}\r\n      <div>\r\n        <label htmlFor=\"product_group_title\">Product Group Title</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"product_group_title\"\r\n          placeholder=\"Enter name\"\r\n          required\r\n          onChange={(e) => setProduct_group_title(e.target.value)}\r\n        ></input>\r\n      </div>\r\n      \r\n      <div>\r\n        <label htmlFor=\"Group\">Select Sub-Group</label>\r\n        <select id='Sub_Group' onChange={(e) => setSub_Group(e.target.value)}>\r\n          <option>A</option>\r\n          <option>B</option>\r\n          <option>C</option>\r\n          <option>D</option>\r\n        </select>\r\n       \r\n      </div>\r\n     \r\n      <div>\r\n        <label />\r\n        <button className=\"primary\" type=\"submit\">\r\n          Save\r\n        </button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  );\r\n}\r\n","export const ENQUIRY_CREATE_REQUEST = 'ENQUIRY_CREATE_REQUEST';\r\nexport const ENQUIRY_CREATE_SUCCESS = 'ENQUIRY_CREATE_SUCCESS';\r\nexport const ENQUIRY_CREATE_FAIL = 'ENQUIRY_CREATE_FAIL';\r\n\r\nexport const ENQUIRY_LIST_REQUEST = 'ENQUIRY_LIST_REQUEST';\r\nexport const ENQUIRY_LIST_SUCCESS = 'ENQUIRY_LIST_SUCCESS';\r\nexport const ENQUIRY_LIST_FAIL = 'ENQUIRY_LIST_FAIL';\r\n\r\nexport const ENQUIRY_DETAILS_FAIL= 'ENQUIRY_DETAILS_FAIL';\r\nexport const ENQUIRY_DETAILS_REQUEST = 'ENQUIRY_DETAILS_REQUEST';\r\nexport const ENQUIRY_DETAILS_SUCCESS = 'ENQUIRY_DETAILS_SUCCESS';\r\nexport const ENQUIRY_DETAILS_RESET = 'ENQUIRY_DETAILS_RESET';","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addEnquiry } from '../actions/enquiryActions';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function OrderScreen(props) {\r\n  const [name, setName] = useState('');\r\n  const [acName, setAcName] = useState([]);\r\n  const [enqId, setEnqID] = useState([]);\r\n  const [selectedName, setSelectedName] = useState([]);\r\n  const [getID, setID] = useState([]);\r\n\r\n  useEffect(async () => {\r\n    await axios.get('http://127.0.0.1:8080/api/account/all').then((res) => {\r\n        setEnqID(res.data);\r\n    })\r\n}, [])\r\n\r\n\r\n\r\nconst na = [...new Set(enqId.map(item => item.AccountID))];\r\nna.sort();\r\n\r\n\r\nconst handleID = (e) => {\r\n  const getName = enqId.filter(Name => Name.AccountID === e.target.value);\r\n  getName.sort();\r\n  console.log(getName);\r\n  setAcName(getName);\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n  const redirect = props.location.search\r\n    ? props.location.search.split('=')[1]\r\n    : '/';\r\n\r\n \r\n  const addDetails = useSelector((state) => state.addDetails);\r\n  const { enquiryAdd, loading, error } = addDetails;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(addEnquiry(enqId, name));\r\n  };\r\n  useEffect(() => {\r\n    if (enquiryAdd) {\r\n      props.history.push(redirect);\r\n    }\r\n  }, [props.history, redirect, enquiryAdd]);\r\n  \r\n  return (\r\n    <div>\r\n    <form className=\"form\" onSubmit={submitHandler}>\r\n      <div>\r\n        <h1>New Enquiry</h1>\r\n      </div>\r\n      {loading && <LoadingBox></LoadingBox>}\r\n      {error && <MessageBox variant=\"danger\">{error}</MessageBox>}\r\n      <div>\r\n        <label htmlFor=\"enqid\">Enquiry ID</label>\r\n        <select name=\"EnqID\" id=\"EnqID\" onChange={(e) => handleID(e)}>\r\n             {na.map((obj) => <option key={obj} value={getID}>{obj}</option>)}\r\n         </select>\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"name\">Name</label>\r\n        <select name=\"Name\" id=\"Name\" onChange={(e) => setName(e.target.value)}>\r\n                                    {acName.map((obj) => {\r\n                                        return <option value={selectedName}>{obj}</option>\r\n                                    })\r\n                                    }\r\n                                </select>\r\n      </div>\r\n  \r\n    <Link to='account'> <h1 style={{textAlign : 'right'}}> Add New</h1> </Link>\r\n      <div>\r\n        <label />\r\n        <button className=\"primary\" type=\"submit\">\r\n          Save\r\n        </button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  );\r\n}\r\n","import Axios from 'axios';\r\nimport {\r\n  ENQUIRY_CREATE_REQUEST, ENQUIRY_CREATE_FAIL, ENQUIRY_CREATE_SUCCESS,\r\n  ENQUIRY_LIST_REQUEST, ENQUIRY_LIST_SUCCESS, ENQUIRY_LIST_FAIL,\r\n  ENQUIRY_DETAILS_FAIL, ENQUIRY_DETAILS_REQUEST, ENQUIRY_DETAILS_SUCCESS\r\n } from \"../constants/enquiryConstants\";\r\n\r\n export const enquirylist = ({}) => async (dispatch) => {\r\n  dispatch({ type: ENQUIRY_LIST_REQUEST });\r\n  try {\r\n    const { data } = await Axios.get(\r\n      `/api/enquiry/all`\r\n    );\r\n    dispatch({ type: ENQUIRY_LIST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: ENQUIRY_LIST_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\n\r\nexport const addEnquiry = (EnqID, Name) => async (dispatch) => {\r\n  dispatch({ type: ENQUIRY_CREATE_REQUEST, payload: { EnqID, Name } });\r\n  try {\r\n    const { data } = await Axios.post('/api/enquiry/add', { EnqID, Name });\r\n    dispatch({ type: ENQUIRY_CREATE_SUCCESS, payload: data });\r\n    localStorage.setItem('enquiryAdd', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ENQUIRY_CREATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const EnquiryDetails = (enqId) => async (dispatch) =>{\r\n  dispatch({\r\n      type: ENQUIRY_DETAILS_REQUEST, payload: enqId });\r\n  try {\r\n      const { data } = await Axios.get(`/api/enquiry/${enqId}`);\r\n      dispatch({ type: ENQUIRY_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n      dispatch({ \r\n          type: ENQUIRY_DETAILS_FAIL, \r\n          payload: \r\n          error.response && error.response.data.message \r\n          ? error.response.data.message \r\n          : error.message,\r\n      });\r\n  }\r\n};\r\n","export const ADD_ORDER_REQUEST = 'ADD_ORDER_REQUEST';\r\nexport const ADD_ORDER_SUCCESS = 'ADD_ORDER_SUCCESS';\r\nexport const ADD_ORDER_FAIL = 'ADD_ORDER_FAIL';","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addOrder } from '../actions/orderActions';\r\nimport { EnquiryDetails } from '../actions/enquiryActions';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport axios from 'axios';\r\nimport { ENQUIRY_DETAILS_RESET } from '../constants/enquiryConstants';\r\n\r\nexport default function OrderScreen(props) {\r\n  const enqId = props.match.params.id;\r\n  const [billing, setBillingAmt] = useState('');\r\n  const [paid, setPaid] = useState('');\r\n  const [product, setProduct] = useState('');\r\n  const [remark, setRemark] = useState('');\r\n  const [state, setState] = useState('');\r\n  const [district, setDistrict] = useState('');\r\n  const [taluka, setTaluka] = useState(''); \r\n  const [pname, setPName] = useState([]);\r\n  const [sname, setSName] = useState([]);\r\n\r\n  useEffect(async () => {\r\n    await axios.get('http://127.0.0.1:8080/api/product/all').then((res) => {\r\n        setPName(res.data);\r\n    })\r\n}, [])\r\n\r\nuseEffect(async () => {\r\n  await axios.get('http://127.0.0.1:8080/api/state/all').then((res) => {\r\n      setSName(res.data);\r\n  })\r\n}, [])\r\n\r\n\r\n\r\n\r\n\r\n  const redirect = props.location.search\r\n    ? props.location.search.split('=')[1]\r\n    : '/';\r\n\r\n    const postEnq = useSelector((state) => state.postEnq);\r\n    const { loading, error, enquiry } = postEnq;\r\n\r\n\r\n    const postOrder = useSelector((state) => state.postOrder);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    order: orderAdd,\r\n  } = postOrder;\r\n\r\n\r\n    const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (!enquiry || enquiry._id !== enqId || orderAdd) {\r\n      dispatch({ type: ENQUIRY_DETAILS_RESET });\r\n      dispatch(EnquiryDetails(enqId));\r\n    } else {\r\n  \r\n    }\r\n  }, [dispatch, orderAdd, enquiry, enqId,]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(addOrder(enquiry.Name,product, billing, paid, remark, state, district, taluka));\r\n    props.history.push('/');\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (orderAdd) {\r\n      props.history.push('/');\r\n    }\r\n  }, [props.history, orderAdd]);\r\n  \r\n  return loading ? (\r\n    <LoadingBox></LoadingBox>\r\n  ) : error ? (\r\n    <MessageBox variant=\"danger\">{error}</MessageBox>\r\n  ) : (\r\n    <div>\r\n    <form className=\"form\" onSubmit={submitHandler}>\r\n      <div>\r\n        <h1>Add Order</h1>\r\n     \r\n      </div>\r\n    \r\n      <div>\r\n        <label htmlFor=\"name\">Name</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"Name\"\r\n          placeholder=\"Enter name\"\r\n          required\r\n          value={enquiry.Name}\r\n        ></input>\r\n      </div>\r\n\r\n\r\n      <div>\r\n      <label>State</label>\r\n      <select name=\"State\" id=\"State\" onChange={(e) => setState(e.target.value)}>\r\n                                <option>---Select---</option>\r\n                                    {sname && sname.map((obj) => {\r\n                                        return <option value={obj.Name}>{obj.Name}</option>\r\n                                    })\r\n                                    }\r\n                                </select>\r\n      </div>\r\n\r\n      <div>\r\n      <label>District</label>\r\n      <input\r\n          type=\"text\"\r\n          id=\"District\"\r\n          placeholder=\"Enter district\"\r\n          required\r\n          onChange={(e) => setDistrict(e.target.value)}\r\n        ></input>\r\n      \r\n      </div>\r\n\r\n      <div>\r\n      <label>Taluka</label>\r\n      <input\r\n          type=\"text\"\r\n          id=\"Taluka\"\r\n          placeholder=\"Enter taluka\"\r\n          required\r\n          onChange={(e) => setTaluka(e.target.value)}\r\n        ></input>\r\n      </div>\r\n\r\n \r\n      <div>\r\n      <label>Product</label>\r\n      <select name=\"Name\" id=\"Name\" onChange={(e) => setProduct(e.target.value)}>\r\n                                <option>---Select---</option>\r\n                                    {pname && pname.map((obj) => {\r\n                                        return <option value={obj.Name}>{obj.Name}</option>\r\n                                    })\r\n                                    }\r\n                                </select>\r\n      </div>\r\n\r\n      <div>\r\n      <label>Billing Amount</label>\r\n      <input\r\n          type=\"text\"\r\n          id=\"BillingAmt\"\r\n          placeholder=\"Enter amount\"\r\n          required\r\n          onChange={(e) => setBillingAmt(e.target.value)}\r\n        ></input>\r\n      </div>\r\n\r\n\r\n      <div>\r\n      <label>Paid Amount</label>\r\n      <input\r\n          type=\"text\"\r\n          id=\"PaidAmt\"\r\n          placeholder=\"Enter amount\"\r\n          required\r\n          onChange={(e) => setPaid(e.target.value)}\r\n        ></input>\r\n      </div>\r\n\r\n      <div>\r\n      <label>Remark</label>\r\n      <input\r\n          type=\"text\"\r\n          id=\"Remark\"\r\n          placeholder=\"Enter remark\"\r\n          required\r\n          onChange={(e) => setRemark(e.target.value)}\r\n        ></input>\r\n      </div>\r\n     \r\n      <div>\r\n        <label />\r\n        {loadingUpdate && <LoadingBox></LoadingBox>}\r\n                  {errorUpdate && (\r\n                    <MessageBox variant=\"danger\">{errorUpdate}</MessageBox>\r\n                  )}\r\n        <button className=\"primary\" type=\"submit\">\r\n          Save\r\n        </button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  );\r\n}\r\n","import Axios from 'axios';\r\nimport { ADD_ORDER_FAIL, ADD_ORDER_REQUEST, ADD_ORDER_SUCCESS} from \"../constants/orderConstants\";\r\n\r\nexport const addOrder = (Name, Product, BillingAmt, PaidAmt, Remark, State, District, Taluka) => async (dispatch) => {\r\n  dispatch({ type: ADD_ORDER_REQUEST, payload: { Name,Product, BillingAmt, PaidAmt, Remark, State, District, Taluka } });\r\n  try {\r\n    const { data } = await Axios.post('/api/order/add', { Name, Product, BillingAmt, PaidAmt, Remark, State, District, Taluka });\r\n    dispatch({ type: ADD_ORDER_SUCCESS, payload: data });\r\n    localStorage.setItem('Add', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ADD_ORDER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n","export const ADD_STATE_REQUEST = 'ADD_STATE_REQUEST';\r\nexport const ADD_STATE_SUCCESS = 'ADD_STATE_SUCCESS';\r\nexport const ADD_STATE_FAIL = 'ADD_STATE_FAIL';\r\n\r\nexport const STATE_LIST_REQUEST = 'STATE_LIST_REQUEST';\r\nexport const STATE_LIST_FAIL = 'STATE_LIST_FAIL';\r\nexport const STATE_LIST_SUCCESS = 'STATE_LIST_SUCCESS';\r\n\r\n\r\nexport const STATE_DETAILS_FAIL = 'STATE_DETAILS_FAIL';\r\nexport const STATE_DETAILS_REQUEST = 'STATE_DETAILS_REQUEST';\r\nexport const STATE_DETAILS_SUCCESS = 'STATE_DETAILS_SUCCESS';","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addState } from '../actions/stateActions';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\n\r\nexport default function AccountScreen(props) {\r\n  const [name, setName] = useState('');\r\n\r\n\r\n  const redirect = props.location.search\r\n    ? props.location.search.split('=')[1]\r\n    : '/';\r\n\r\n \r\n  const stateA = useSelector((state) => state.stateA);\r\n  const { stateadd, loading, error } = stateA;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(addState(name));\r\n  };\r\n  useEffect(() => {\r\n    if (stateadd) {\r\n      props.history.push(redirect);\r\n    }\r\n  }, [props.history, redirect, stateadd]);\r\n  \r\n  return (\r\n    <div>\r\n    <form className=\"form\" onSubmit={submitHandler}>\r\n      <div>\r\n        <h1>Add State</h1>\r\n      </div>\r\n      {loading && <LoadingBox></LoadingBox>}\r\n      {error && <MessageBox variant=\"danger\">{error}</MessageBox>}\r\n      <div>\r\n        <label htmlFor=\"name\">Name</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"State\"\r\n          placeholder=\"Enter state\"\r\n          required\r\n          onChange={(e) => setName(e.target.value)}\r\n        ></input>\r\n      </div>\r\n\r\n      <div>\r\n        <label />\r\n        <button className=\"primary\" type=\"submit\">\r\n          Save\r\n        </button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  );\r\n}\r\n","import Axios from 'axios';\r\nimport {\r\n  STATE_LIST_REQUEST, STATE_LIST_SUCCESS, STATE_LIST_FAIL,\r\n  ADD_STATE_FAIL, ADD_STATE_REQUEST, ADD_STATE_SUCCESS,\r\n  STATE_DETAILS_FAIL,STATE_DETAILS_REQUEST,STATE_DETAILS_SUCCESS\r\n } from \"../constants/stateConstants\";\r\n\r\n export const statelist = ({}) => async (dispatch) => {\r\n  dispatch({ type: STATE_LIST_REQUEST });\r\n  try {\r\n    const { data } = await Axios.get(\r\n      `/api/state/all`\r\n    );\r\n    dispatch({ type: STATE_LIST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: STATE_LIST_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\nexport const addState = (Name) => async (dispatch) => {\r\n  dispatch({ type: ADD_STATE_REQUEST, payload: { Name } });\r\n  try {\r\n    const { data } = await Axios.post('/api/state/add', { Name });\r\n    dispatch({ type: ADD_STATE_SUCCESS, payload: data });\r\n    localStorage.setItem('stateAdd', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ADD_STATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n\r\nexport const detailsState = (stateId) => async (dispatch) =>{\r\n  dispatch({\r\n      type: STATE_DETAILS_REQUEST, payload: stateId });\r\n  try {\r\n      const { data } = await Axios.get(`/api/state/${stateId}`);\r\n      dispatch({ type: STATE_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n      dispatch({ \r\n          type: STATE_DETAILS_FAIL, \r\n          payload: \r\n          error.response && error.response.data.message \r\n          ? error.response.data.message \r\n          : error.message,\r\n      });\r\n  }\r\n};\r\n","export const ADD_DISTRICT_REQUEST = 'ADD_DISTRICT_REQUEST';\r\nexport const ADD_DISTRICT_SUCCESS = 'ADD_DISTRICT_SUCCESS';\r\nexport const ADD_DISTRICT_FAIL = 'ADD_DISTRICT_FAIL';\r\n\r\nexport const DISTRICT_LIST_REQUEST = 'DISTRICT_LIST_REQUEST';\r\nexport const DISTRICT_LIST_FAIL = 'DISTRICT_LIST_FAIL';\r\nexport const DISTRICT_LIST_SUCCESS = 'DISTRICT_LIST_SUCCESS';\r\n\r\n\r\nexport const DISTRICT_DETAILS_FAIL = 'DISTRICT_DETAILS_FAIL';\r\nexport const DISTRICT_DETAILS_REQUEST = 'DISTRICT_DETAILS_REQUEST';\r\nexport const DISTRICT_DETAILS_SUCCESS = 'DISTRICT_DETAILS_SUCCESS';","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addDistrict } from '../actions/districtActions';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport axios from 'axios';\r\n\r\nexport default function DistrictScreen(props) {\r\n  const [name, setName] = useState('');\r\n  const [sid, setSID] = useState('');\r\n \r\n  const [state, setState] = useState([]);\r\n\r\n  useEffect(async () => {\r\n    await axios.get('http://127.0.0.1:8080/api/state/all').then((res) => {\r\n        setState(res.data);\r\n    })\r\n}, [])\r\n\r\n\r\n\r\n  const redirect = props.location.search\r\n    ? props.location.search.split('=')[1]\r\n    : '/';\r\n\r\n \r\n    const districtA = useSelector((state) => state.districtA);\r\n    const { districtadd, loading, error } = districtA;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(addDistrict(name, sid));\r\n  };\r\n  useEffect(() => {\r\n    if (districtadd) {\r\n      props.history.push(redirect);\r\n    }\r\n  }, [props.history, redirect, districtadd]);\r\n  \r\n  return (\r\n    <div>\r\n    <form className=\"form\" onSubmit={submitHandler}>\r\n      <div>\r\n        <h1>Add Account</h1>\r\n      </div>\r\n      {loading && <LoadingBox></LoadingBox>}\r\n      {error && <MessageBox variant=\"danger\">{error}</MessageBox>}\r\n      \r\n \r\n      <div>\r\n      <label>Select State</label>\r\n      <select name=\"SID\" id=\"SID\" onChange={(e) => setSID(e.target.value)}>\r\n                                <option>---Select---</option>\r\n                                    {state && state.map((obj) => {\r\n                                        return <option value={obj.SID}>{obj.Name}</option>\r\n                                    })\r\n                                    }\r\n                                </select>\r\n      </div>\r\n\r\n      <div>\r\n        <label htmlFor=\"name\">Name</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"Name\"\r\n          placeholder=\"Enter name\"\r\n          required\r\n          onChange={(e) => setName(e.target.value)}\r\n        ></input>\r\n      </div>\r\n     \r\n      <div>\r\n        <label />\r\n        <button className=\"primary\" type=\"submit\">\r\n          Save\r\n        </button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  );\r\n}\r\n","import Axios from 'axios';\r\nimport {\r\n  DISTRICT_LIST_REQUEST, DISTRICT_LIST_SUCCESS, DISTRICT_LIST_FAIL,\r\n  ADD_DISTRICT_FAIL, ADD_DISTRICT_REQUEST, ADD_DISTRICT_SUCCESS,\r\n  DISTRICT_DETAILS_FAIL,DISTRICT_DETAILS_REQUEST,DISTRICT_DETAILS_SUCCESS\r\n } from \"../constants/districtConstants\";\r\n\r\n export const districtlist = ({}) => async (dispatch) => {\r\n  dispatch({ type: DISTRICT_LIST_REQUEST });\r\n  try {\r\n    const { data } = await Axios.get(\r\n      `/api/district/all`\r\n    );\r\n    dispatch({ type: DISTRICT_LIST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: DISTRICT_LIST_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\nexport const addDistrict = (Name,  SID) => async (dispatch) => {\r\n  dispatch({ type: ADD_DISTRICT_REQUEST, payload: { Name, SID } });\r\n  try {\r\n    const { data } = await Axios.post('/api/district/add', { Name, SID });\r\n    dispatch({ type: ADD_DISTRICT_SUCCESS, payload: data });\r\n    localStorage.setItem('districtAdd', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ADD_DISTRICT_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n\r\nexport const detailsDistrict = (districtId) => async (dispatch) =>{\r\n  dispatch({\r\n      type: DISTRICT_DETAILS_REQUEST, payload: districtId });\r\n  try {\r\n      const { data } = await Axios.get(`/api/district/${districtId}`);\r\n      dispatch({ type: DISTRICT_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n      dispatch({ \r\n          type: DISTRICT_DETAILS_FAIL, \r\n          payload: \r\n          error.response && error.response.data.message \r\n          ? error.response.data.message \r\n          : error.message,\r\n      });\r\n  }\r\n};\r\n","export const ADD_TALUKA_REQUEST = 'ADD_TALUKA_REQUEST';\r\nexport const ADD_TALUKA_SUCCESS = 'ADD_TALUKA_SUCCESS';\r\nexport const ADD_TALUKA_FAIL = 'ADD_TALUKA_FAIL';\r\n\r\nexport const TALUKA_LIST_REQUEST = 'TALUKA_LIST_REQUEST';\r\nexport const TALUKA_LIST_FAIL = 'TALUKA_LIST_FAIL';\r\nexport const TALUKA_LIST_SUCCESS = 'TALUKA_LIST_SUCCESS';\r\n\r\n\r\nexport const TALUKA_DETAILS_FAIL = 'TALUKA_DETAILS_FAIL';\r\nexport const TALUKA_DETAILS_REQUEST = 'TALUKA_DETAILS_REQUEST';\r\nexport const TALUKA_DETAILS_SUCCESS = 'TALUKA_DETAILS_SUCCESS';","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addTaluka } from '../actions/talukaActions';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport axios from 'axios';\r\n\r\nexport default function TalukaScreen(props) {\r\n  const [name, setName] = useState('');\r\n  const [sid, setSID] = useState('');\r\n  const [did, setDID] = useState('');\r\n \r\n  const [state, setState] = useState([]);\r\n  const [district, setDistrict] = useState([]);\r\n\r\n  useEffect(async () => {\r\n    await axios.get('http://127.0.0.1:8080/api/state/all').then((res) => {\r\n        setState(res.data);\r\n    })\r\n}, [])\r\n\r\nuseEffect(async () => {\r\n  await axios.get('http://127.0.0.1:8080/api/district/all').then((res) => {\r\n      setDistrict(res.data);\r\n  })\r\n}, [])\r\n\r\n\r\n\r\n  const redirect = props.location.search\r\n    ? props.location.search.split('=')[1]\r\n    : '/';\r\n\r\n \r\n    const talukaA = useSelector((state) => state.talukaA);\r\n    const { talukaadd, loading, error } = talukaA;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(addTaluka(name, sid, did));\r\n  };\r\n  useEffect(() => {\r\n    if (talukaadd) {\r\n      props.history.push(redirect);\r\n    }\r\n  }, [props.history, redirect, talukaadd]);\r\n  \r\n  return (\r\n    <div>\r\n    <form className=\"form\" onSubmit={submitHandler}>\r\n      <div>\r\n        <h1>Add Account</h1>\r\n      </div>\r\n      {loading && <LoadingBox></LoadingBox>}\r\n      {error && <MessageBox variant=\"danger\">{error}</MessageBox>}\r\n\r\n      <div>\r\n      <label>Select State</label>\r\n      <select name=\"SID\" id=\"SID\" onChange={(e) => setSID(e.target.value)}>\r\n                                <option>---Select---</option>\r\n                                    {state && state.map((obj) => {\r\n                                        return <option value={obj.SID}>{obj.Name}</option>\r\n                                    })\r\n                                    }\r\n                                </select>\r\n      </div>\r\n\r\n      <div>\r\n      <label>Select District</label>\r\n      <select name=\"DID\" id=\"DID\" onChange={(e) => setDID(e.target.value)}>\r\n                                <option>---Select---</option>\r\n                                    {district && district.map((obj) => {\r\n                                        return <option value={obj.DID}>{obj.Name}</option>\r\n                                    })\r\n                                    }\r\n                                </select>\r\n      </div>\r\n\r\n\r\n      <div>\r\n        <label htmlFor=\"name\">Name</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"Name\"\r\n          placeholder=\"Enter name\"\r\n          required\r\n          onChange={(e) => setName(e.target.value)}\r\n        ></input>\r\n      </div>\r\n \r\n   \r\n     \r\n      <div>\r\n        <label />\r\n        <button className=\"primary\" type=\"submit\">\r\n          Save\r\n        </button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  );\r\n}\r\n","import Axios from 'axios';\r\nimport {\r\n  TALUKA_LIST_REQUEST, TALUKA_LIST_SUCCESS, TALUKA_LIST_FAIL,\r\n  ADD_TALUKA_FAIL, ADD_TALUKA_REQUEST, ADD_TALUKA_SUCCESS,\r\n  TALUKA_DETAILS_FAIL,TALUKA_DETAILS_REQUEST,TALUKA_DETAILS_SUCCESS\r\n } from \"../constants/talukaConstants\";\r\n\r\n export const talukalist = ({}) => async (dispatch) => {\r\n  dispatch({ type: TALUKA_LIST_REQUEST });\r\n  try {\r\n    const { data } = await Axios.get(\r\n      `/api/taluka/all`\r\n    );\r\n    dispatch({ type: TALUKA_LIST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: TALUKA_LIST_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\nexport const addTaluka = (Name, SID, DID) => async (dispatch) => {\r\n  dispatch({ type: ADD_TALUKA_REQUEST, payload: { Name, SID, DID } });\r\n  try {\r\n    const { data } = await Axios.post('/api/taluka/add', { Name, SID, DID });\r\n    dispatch({ type: ADD_TALUKA_SUCCESS, payload: data });\r\n    localStorage.setItem('stateAdd', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ADD_TALUKA_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n\r\nexport const detailsTaluka = (talukaId) => async (dispatch) =>{\r\n  dispatch({\r\n      type: TALUKA_DETAILS_REQUEST, payload: talukaId });\r\n  try {\r\n      const { data } = await Axios.get(`/api/taluka/${talukaId}`);\r\n      dispatch({ type: TALUKA_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n      dispatch({ \r\n          type: TALUKA_DETAILS_FAIL, \r\n          payload: \r\n          error.response && error.response.data.message \r\n          ? error.response.data.message \r\n          : error.message,\r\n      });\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { BrowserRouter, Route, Link } from 'react-router-dom';\r\nimport HomeScreen from './screens/HomeScreen';\r\nimport SigninScreen from './screens/SigninScreen';\r\nimport RegisterScreen from './screens/RegisterScreen';\r\nimport { signout } from './actions/userActions';\r\nimport UserListScreen from './screens/UserListScreen';\r\nimport UserEditScreen from './screens/UserEditScreen';\r\nimport AccountGroupScreen from './screens/Account_GroupScreen';\r\nimport AccountScreen from './screens/AccountScreen';\r\nimport ServiceScreen from './screens/ServiceScreen';\r\nimport ServiceGroupScren from './screens/service_GroupScren';\r\nimport ProductScreen from './screens/ProductScreen';\r\nimport ProductGroupScreen from './screens/ProductGroupScreen';\r\nimport EnquiryScreen from './screens/EnquiryScreen';\r\nimport OrderScreen from './screens/OrderScreen';\r\nimport StateScreen from './screens/StateScreen';\r\nimport DistrictScreen from './screens/DistrictScreen';\r\nimport TalukaScreen from './screens/TalukaScreen';\r\n\r\nfunction App() {\r\n \r\n  const userSignin = useSelector((state) => state.userSignin);\r\n  const { userInfo } = userSignin;\r\n  const dispatch = useDispatch();\r\n  const signoutHandler = () => {\r\n    dispatch(signout());\r\n  };\r\n \r\n\r\n  return (\r\n    <BrowserRouter>    \r\n   \r\n            {\r\n              userInfo ? (\r\n                <>\r\n                <Route path='/order/:id' component={OrderScreen}></Route>\r\n                 <Route path=\"/enquiry\" component={EnquiryScreen}></Route>\r\n                <Route path=\"/account_group\" component={AccountGroupScreen}></Route>\r\n                <Route path=\"/account\" component={AccountScreen}></Route>\r\n                <Route path=\"/services\" component={ServiceScreen}></Route>\r\n                <Route path=\"/serviceGroup\" component={ServiceGroupScren}></Route>\r\n                <Route path=\"/productGroup\" component={ProductGroupScreen}></Route>\r\n                <Route path=\"/product\" component={ProductScreen}></Route>\r\n                <Route path=\"/state\" component={StateScreen}></Route>\r\n                <Route path=\"/district\" component={DistrictScreen}></Route>\r\n                <Route path=\"/taluka\" component={TalukaScreen}></Route>\r\n                <ul>\r\n                  <li>\r\n                  <Link to=\"#signout\" onClick={signoutHandler}>\r\n                    Logout\r\n                  </Link>\r\n                  </li>\r\n                </ul>\r\n              </>\r\n              ) :\r\n              (\r\n                <Link to=\"/signin\">Login</Link>\r\n              )} \r\n             \r\n              {\r\n                userInfo && userInfo.admin && (\r\n                  <>\r\n                    <Route path=\"/userlist\" component={UserListScreen}></Route>\r\n                    <Route path=\"/user/:id/edit\" component={UserEditScreen}></Route>\r\n                  </>\r\n                )\r\n              }      \r\n \r\n      <Route path=\"/signin\" component={SigninScreen}></Route>\r\n      <Route path=\"/register\" component={RegisterScreen}></Route>\r\n      <Route path=\"/\" component={HomeScreen} exact></Route>\r\n  \r\n</BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { createStore, compose, applyMiddleware, combineReducers } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { addAccountReducer, account_groupReducer, acgrouplistReducer, accountDetailsReducer } from './reducers/accountReducers';\r\nimport { userDeleteReducer, userDetailsReducer, userListReducer, userSigninReducer, userUpdateProfileReducer, userUpdateReducer } from './reducers/userReducers';\r\nimport { userRegisterReducer } from './reducers/userReducers';\r\nimport { addServiceReducer, serviceGrouplistReducer, serviceGroupReducer } from './reducers/serviceReducers';\r\nimport { addProductReducer, productGrouplistReducer, productGroupReducer } from './reducers/productReducers';\r\nimport { addEnquiryReducer, enquiryDetailsReducer, enquirylistReducer } from './reducers/enquiryReducers';\r\nimport { addOrderReducer } from './reducers/orderReducers';\r\nimport { stateDetailsReducer, statelistReducer, addStateReducer } from './reducers/stateReducers';\r\nimport { districtDetailsReducer, districtlistReducer, addDistrictReducer } from './reducers/districtReducers';\r\nimport { talukaDetailsReducer, talukalistReducer, addTalukaReducer } from './reducers/talukaReducers';\r\n\r\n\r\nconst initialState = {\r\n    userSignin: {\r\n        userInfo: localStorage.getItem('userInfo')\r\n        ? JSON.parse(localStorage.getItem('userInfo'))\r\n        : null,\r\n    },\r\n};\r\nconst reducer = combineReducers({\r\n    userSignin: userSigninReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n    account_group: account_groupReducer,\r\n    addAct: addAccountReducer,\r\n    acgrouplist : acgrouplistReducer,\r\n    addS: addServiceReducer,\r\n    serviceGroup: serviceGroupReducer,\r\n    serviceGrouplist: serviceGrouplistReducer,\r\n    productGroup: productGroupReducer,\r\n    addProd: addProductReducer,\r\n    productGrouplist: productGrouplistReducer,\r\n    enqlist: enquirylistReducer,\r\n    addDetails: addEnquiryReducer,\r\n    postEnq: enquiryDetailsReducer,\r\n    accountDetails: accountDetailsReducer,\r\n    postOrder: addOrderReducer,\r\n    stateA: addStateReducer,\r\n    addS: statelistReducer,\r\n    stateDetails: stateDetailsReducer,\r\n    districtA: addDistrictReducer,\r\n    addD: districtlistReducer,\r\n    districtDetails: districtDetailsReducer,\r\n    talukaA: addTalukaReducer,\r\n    addT: talukalistReducer,\r\n    talukaDetails: talukaDetailsReducer\r\n\r\n});\r\nconst composeEnhancer = window._REDUX_DEVTOOLS_EXTENSION_COMPOSE_ || compose;\r\nconst store = createStore(\r\n    reducer, \r\n    initialState,\r\n    composeEnhancer(applyMiddleware(thunk))\r\n );\r\n\r\nexport default store;\r\n","import { USER_SIGNIN_FAIL, USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS, USER_SIGNOUT, \r\n    USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, \r\n    USER_DETAILS_SUCCESS, USER_DETAILS_REQUEST, USER_DETAILS_FAIL, \r\n    USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_RESET,\r\n    USER_LIST_REQUEST, USER_LIST_SUCCESS, USER_LIST_FAIL,\r\n    USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DELETE_FAIL, USER_DELETE_RESET,\r\n    USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS, USER_UPDATE_FAIL, USER_UPDATE_RESET, USER_DETAILS_RESET } from \"../constants/userConstants\";\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n    switch(action.type)\r\n    {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading : true };\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload };\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default: \r\n             return state;\r\n    }\r\n}\r\n\r\nexport const userSigninReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case USER_SIGNIN_REQUEST:\r\n        return { loading: true };\r\n      case USER_SIGNIN_SUCCESS:\r\n        return { loading: false, userInfo: action.payload };\r\n      case USER_SIGNIN_FAIL:\r\n        return { loading: false, error: action.payload };\r\n      case USER_SIGNOUT:\r\n        return {};\r\n      default:\r\n        return state;\r\n    }\r\n};\r\n\r\nexport const userDetailsReducer = (state = { loading: true }, action) => {\r\n    switch(action.type)\r\n    {\r\n        case USER_DETAILS_REQUEST:\r\n            return { loading: true };\r\n        case USER_DETAILS_SUCCESS:\r\n            return { loading: false, user: action.payload };\r\n        case USER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case USER_DETAILS_RESET:\r\n            return { loading: true };\r\n        default: \r\n            return state;\r\n    }\r\n};\r\n\r\nexport const userUpdateProfileReducer = ( state = {}, action) => {\r\n    switch(action.type)\r\n    {\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return { loading: true };\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return { loading: false, success: true };\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case USER_UPDATE_PROFILE_RESET:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const userListReducer = (state = { loading: true }, action) => {\r\n    switch (action.type) {\r\n      case USER_LIST_REQUEST:\r\n        return { loading: true };\r\n      case USER_LIST_SUCCESS:\r\n        return { loading: false, users: action.payload };\r\n      case USER_LIST_FAIL:\r\n        return { loading: false, error: action.payload };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\n  export const userDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case USER_DELETE_REQUEST:\r\n        return { loading: true };\r\n      case USER_DELETE_SUCCESS:\r\n        return { loading: false, success: true };\r\n      case USER_DELETE_FAIL:\r\n        return { loading: false, error: action.payload };\r\n      case USER_DELETE_RESET:\r\n        return {};\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\n  export const userUpdateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case USER_UPDATE_REQUEST:\r\n        return { loading: true };\r\n      case USER_UPDATE_SUCCESS:\r\n        return { loading: false, success: true };\r\n      case USER_UPDATE_FAIL:\r\n        return { loading: false, error: action.payload };\r\n      case USER_UPDATE_RESET:\r\n        return {};\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n","import { ACCOUNT_GROUP_FAIL, ACCOUNT_GROUP_REQUEST, ACCOUNT_GROUP_SUCCESS, \r\n    ADD_ACCOUNT_FAIL, ADD_ACCOUNT_REQUEST, ADD_ACCOUNT_SUCCESS,\r\n    ACCOUNT_GROUP_LIST_REQUEST, ACCOUNT_GROUP_LIST_FAIL, ACCOUNT_GROUP_LIST_SUCCESS,\r\n    ACCOUNT_DETAILS_FAIL, ACCOUNT_DETAILS_REQUEST, ACCOUNT_DETAILS_SUCCESS } from \"../constants/accountConstants\";\r\n\r\nexport const acgrouplistReducer = (state = { loading: true }, action) => {\r\n    switch (action.type) {\r\n      case ACCOUNT_GROUP_LIST_REQUEST:\r\n        return { loading: true };\r\n      case ACCOUNT_GROUP_LIST_SUCCESS:\r\n        return { loading: false, listgroups: action.payload };\r\n      case ACCOUNT_GROUP_LIST_FAIL:\r\n        return { loading: false, error: action.payload };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\nexport const account_groupReducer = (state = {}, action) => {\r\n    switch(action.type)\r\n    {\r\n        case ACCOUNT_GROUP_REQUEST:\r\n            return { loading : true };\r\n        case ACCOUNT_GROUP_SUCCESS:\r\n            return { loading: false, account_groupInfo: action.payload };\r\n        case ACCOUNT_GROUP_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default: \r\n             return state;\r\n    }\r\n}\r\n\r\nexport const addAccountReducer = (state = {}, action) => {\r\n    switch(action.type)\r\n    {\r\n        case ADD_ACCOUNT_REQUEST:\r\n            return { loading : true };\r\n        case ADD_ACCOUNT_SUCCESS:\r\n            return { loading: false, accountAdd: action.payload };\r\n        case ADD_ACCOUNT_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default: \r\n             return state;\r\n    }\r\n}\r\n\r\nexport const accountDetailsReducer = (state = { account:{}, loading: true}, action) =>{\r\n    switch (action.type){\r\n        case ACCOUNT_DETAILS_REQUEST:\r\n            return { loading: true };\r\n        case ACCOUNT_DETAILS_SUCCESS:\r\n            return { loading: false, account: action.payload };\r\n        case ACCOUNT_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n","import {\r\n    ADD_SERVICE_FAIL, ADD_SERVICE_REQUEST, ADD_SERVICE_SUCCESS,\r\n    SERVICE_GROUP_LIST_FAIL,\r\n    SERVICE_GROUP_LIST_REQUEST,\r\n    SERVICE_GROUP_LIST_SUCCESS,\r\n    SERVICE_GROUP_FAIL, SERVICE_GROUP_REQUEST, SERVICE_GROUP_SUCCESS\r\n   } from \"../constants/serviceConstants\";\r\n\r\n   export const serviceGrouplistReducer = (state = { loading: true }, action) => {\r\n    switch (action.type) {\r\n      case SERVICE_GROUP_LIST_REQUEST:\r\n        return { loading: true };\r\n      case SERVICE_GROUP_LIST_SUCCESS:\r\n        return { loading: false, listServices: action.payload };\r\n      case SERVICE_GROUP_LIST_FAIL:\r\n        return { loading: false, error: action.payload };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\nexport const serviceGroupReducer = (state = {}, action) => {\r\n    switch(action.type)\r\n    {\r\n        case SERVICE_GROUP_REQUEST:\r\n            return { loading : true };\r\n        case SERVICE_GROUP_SUCCESS:\r\n            return { loading: false, serviceGroupInfo: action.payload };\r\n        case SERVICE_GROUP_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default: \r\n             return state;\r\n    }\r\n}\r\n\r\nexport const addServiceReducer = (state = {}, action) => {\r\n    switch(action.type)\r\n    {\r\n        case ADD_SERVICE_REQUEST:\r\n            return { loading : true };\r\n        case ADD_SERVICE_SUCCESS:\r\n            return { loading: false, serviceAdd: action.payload };\r\n        case ADD_SERVICE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default: \r\n             return state;\r\n    }\r\n}\r\n\r\n","import { PRODUCT_GROUP_FAIL, PRODUCT_GROUP_REQUEST, PRODUCT_GROUP_SUCCESS, \r\n    ADD_PRODUCT_FAIL, ADD_PRODUCT_REQUEST, ADD_PRODUCT_SUCCESS,\r\n    PRODUCT_GROUP_LIST_REQUEST, PRODUCT_GROUP_LIST_FAIL, PRODUCT_GROUP_LIST_SUCCESS } from \"../constants/productConstants\";\r\n\r\nexport const productGrouplistReducer = (state = { loading: true }, action) => {\r\n    switch (action.type) {\r\n      case PRODUCT_GROUP_LIST_REQUEST:\r\n        return { loading: true };\r\n      case PRODUCT_GROUP_LIST_SUCCESS:\r\n        return { loading: false, listproducts: action.payload };\r\n      case PRODUCT_GROUP_LIST_FAIL:\r\n        return { loading: false, error: action.payload };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\nexport const productGroupReducer = (state = {}, action) => {\r\n    switch(action.type)\r\n    {\r\n        case PRODUCT_GROUP_REQUEST:\r\n            return { loading : true };\r\n        case PRODUCT_GROUP_SUCCESS:\r\n            return { loading: false, productGroupInfo: action.payload };\r\n        case PRODUCT_GROUP_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default: \r\n             return state;\r\n    }\r\n}\r\n\r\nexport const addProductReducer = (state = {}, action) => {\r\n    switch(action.type)\r\n    {\r\n        case ADD_PRODUCT_REQUEST:\r\n            return { loading : true };\r\n        case ADD_PRODUCT_SUCCESS:\r\n            return { loading: false, productAdd: action.payload };\r\n        case ADD_PRODUCT_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default: \r\n             return state;\r\n    }\r\n}\r\n\r\n","import { ENQUIRY_CREATE_REQUEST, ENQUIRY_CREATE_FAIL, ENQUIRY_CREATE_SUCCESS,\r\n  ENQUIRY_LIST_REQUEST, ENQUIRY_LIST_SUCCESS, ENQUIRY_LIST_FAIL,\r\n  ENQUIRY_DETAILS_FAIL, ENQUIRY_DETAILS_REQUEST, ENQUIRY_DETAILS_SUCCESS } from \"../constants/enquiryConstants\";\r\n\r\nexport const enquirylistReducer = (state = { loading: true }, action) => {\r\n    switch (action.type) {\r\n      case ENQUIRY_LIST_REQUEST:\r\n        return { loading: true };\r\n      case ENQUIRY_LIST_SUCCESS:\r\n        return { loading: false, listenquiry: action.payload };\r\n      case ENQUIRY_LIST_FAIL:\r\n        return { loading: false, error: action.payload };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\nexport const addEnquiryReducer = (state = {}, action) => {\r\n    switch(action.type)\r\n    {\r\n        case ENQUIRY_CREATE_REQUEST:\r\n            return { loading : true };\r\n        case ENQUIRY_CREATE_SUCCESS:\r\n            return { loading: false, enquiryAdd: action.payload };\r\n        case ENQUIRY_CREATE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default: \r\n             return state;\r\n    }\r\n}\r\n\r\nexport const enquiryDetailsReducer = (state = { enquiry:{}, loading: true}, action) =>{\r\n  switch (action.type){\r\n      case ENQUIRY_DETAILS_REQUEST:\r\n          return { loading: true };\r\n      case ENQUIRY_DETAILS_SUCCESS:\r\n          return { loading: false, enquiry: action.payload };\r\n      case ENQUIRY_DETAILS_FAIL:\r\n          return { loading: false, error: action.payload};\r\n      default:\r\n          return state;\r\n  }\r\n};\r\n\r\n\r\n","import { \r\n    ADD_ORDER_FAIL, ADD_ORDER_REQUEST, ADD_ORDER_SUCCESS,\r\n  } from \"../constants/orderConstants\";\r\n\r\nexport const addOrderReducer = (state = {}, action) => {\r\n    switch(action.type)\r\n    {\r\n        case ADD_ORDER_REQUEST:\r\n            return { loading : true };\r\n        case ADD_ORDER_SUCCESS:\r\n            return { loading: false, orderAdd: action.payload };\r\n        case ADD_ORDER_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default: \r\n             return state;\r\n    }\r\n}","import { STATE_LIST_REQUEST, STATE_LIST_SUCCESS, STATE_LIST_FAIL,\r\n    ADD_STATE_FAIL, ADD_STATE_REQUEST, ADD_STATE_SUCCESS,\r\n    STATE_DETAILS_FAIL,STATE_DETAILS_REQUEST,STATE_DETAILS_SUCCESS } from \"../constants/stateConstants\";\r\n\r\nexport const statelistReducer = (state = { loading: true }, action) => {\r\n    switch (action.type) {\r\n      case STATE_LIST_REQUEST:\r\n        return { loading: true };\r\n      case STATE_LIST_SUCCESS:\r\n        return { loading: false, listState: action.payload };\r\n      case STATE_LIST_FAIL:\r\n        return { loading: false, error: action.payload };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\nexport const addStateReducer = (state = {}, action) => {\r\n    switch(action.type)\r\n    {\r\n        case ADD_STATE_REQUEST:\r\n            return { loading : true };\r\n        case ADD_STATE_SUCCESS:\r\n            return { loading: false, stateadd: action.payload };\r\n        case ADD_STATE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default: \r\n             return state;\r\n    }\r\n}\r\n\r\nexport const stateDetailsReducer = (state = { st:{}, loading: true}, action) =>{\r\n    switch (action.type){\r\n        case STATE_DETAILS_REQUEST:\r\n            return { loading: true };\r\n        case STATE_DETAILS_SUCCESS:\r\n            return { loading: false, st: action.payload };\r\n        case STATE_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n","import { DISTRICT_LIST_REQUEST, DISTRICT_LIST_SUCCESS, DISTRICT_LIST_FAIL,\r\n    ADD_DISTRICT_FAIL, ADD_DISTRICT_REQUEST, ADD_DISTRICT_SUCCESS,\r\n    DISTRICT_DETAILS_FAIL,DISTRICT_DETAILS_REQUEST,DISTRICT_DETAILS_SUCCESS } from \"../constants/districtConstants\";\r\n\r\nexport const districtlistReducer = (state = { loading: true }, action) => {\r\n    switch (action.type) {\r\n      case DISTRICT_LIST_REQUEST:\r\n        return { loading: true };\r\n      case DISTRICT_LIST_SUCCESS:\r\n        return { loading: false, listDistrict: action.payload };\r\n      case DISTRICT_LIST_FAIL:\r\n        return { loading: false, error: action.payload };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\nexport const addDistrictReducer = (state = {}, action) => {\r\n    switch(action.type)\r\n    {\r\n        case ADD_DISTRICT_REQUEST:\r\n            return { loading : true };\r\n        case ADD_DISTRICT_SUCCESS:\r\n            return { loading: false, districtadd: action.payload };\r\n        case ADD_DISTRICT_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default: \r\n             return state;\r\n    }\r\n}\r\n\r\nexport const districtDetailsReducer = (state = { t:{}, loading: true}, action) =>{\r\n    switch (action.type){\r\n        case DISTRICT_DETAILS_REQUEST:\r\n            return { loading: true };\r\n        case DISTRICT_DETAILS_SUCCESS:\r\n            return { loading: false, t: action.payload };\r\n        case DISTRICT_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n","import { TALUKA_LIST_REQUEST, TALUKA_LIST_SUCCESS, TALUKA_LIST_FAIL,\r\n    ADD_TALUKA_FAIL, ADD_TALUKA_REQUEST, ADD_TALUKA_SUCCESS,\r\n    TALUKA_DETAILS_FAIL,TALUKA_DETAILS_REQUEST,TALUKA_DETAILS_SUCCESS } from \"../constants/talukaConstants\";\r\n\r\nexport const talukalistReducer = (state = { loading: true }, action) => {\r\n    switch (action.type) {\r\n      case TALUKA_LIST_REQUEST:\r\n        return { loading: true };\r\n      case TALUKA_LIST_SUCCESS:\r\n        return { loading: false, listTaluka: action.payload };\r\n      case TALUKA_LIST_FAIL:\r\n        return { loading: false, error: action.payload };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\nexport const addTalukaReducer = (state = {}, action) => {\r\n    switch(action.type)\r\n    {\r\n        case ADD_TALUKA_REQUEST:\r\n            return { loading : true };\r\n        case ADD_TALUKA_SUCCESS:\r\n            return { loading: false, talukaadd: action.payload };\r\n        case ADD_TALUKA_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default: \r\n             return state;\r\n    }\r\n}\r\n\r\nexport const talukaDetailsReducer = (state = { t:{}, loading: true}, action) =>{\r\n    switch (action.type){\r\n        case TALUKA_DETAILS_REQUEST:\r\n            return { loading: true };\r\n        case TALUKA_DETAILS_SUCCESS:\r\n            return { loading: false, t: action.payload };\r\n        case TALUKA_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport store from './store';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}